Terminals unused in grammar

   NOT
   PERIOD


State 106 conflicts: 1 shift/reduce
State 115 conflicts: 11 shift/reduce
State 132 conflicts: 12 shift/reduce
State 180 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompDecl
    2         | CompUnit CompDecl

    3 CompDecl: DeclOutFunc
    4         | FuncDef

    5 DeclOutFunc: ConstDecl
    6            | VarDecl

    7 Decl: ConstDecl
    8     | VarDecl

    9 ConstDecl: CONST INT ConstDefs SEMI

   10 ConstDefs: ConstDef
   11          | ConstDefs COMMA ConstDef

   12 ConstDef: IDENT ASSIGN ConstInitVal

   13 $@1: %empty

   14 $@2: %empty

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   16 ConstInitVal: ConstExp

   17 ConstExp: AddExp

   18 VarDecl: INT VarDefs SEMI

   19 VarDefs: VarDef
   20        | VarDefs COMMA VarDef

   21 VarDef: IDENT

   22 $@3: %empty

   23 VarDef: IDENT ASSIGN $@3 InitVal
   24       | IDENT ArrayDef

   25 $@4: %empty

   26 $@5: %empty

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY

   28 ArrayInit: %empty
   29          | ArrayExps

   30 ArrayExps: ArrayExp
   31          | ArrayExps COMMA ArrayExp

   32 ArrayExp: Exp

   33 $@6: %empty

   34 ArrayExp: LCURLY $@6 ArrayInit RCURLY

   35 ArrayDef: ArrayUnit
   36         | ArrayDef ArrayUnit

   37 ArrayUnit: LBRAC ConstExp RBRAC

   38 InitVal: Exp

   39 Exp: AddExp

   40 AddExp: MulExp
   41       | AddExp ADD MulExp
   42       | AddExp SUB MulExp

   43 MulExp: UnaryExp
   44       | MulExp MUL UnaryExp
   45       | MulExp DIV UnaryExp
   46       | MulExp MOD UnaryExp

   47 UnaryExp: PrimaryExp
   48         | IDENT LPAREN FuncRParams RPAREN

   49 PrimaryExp: NUMBER
   50           | LVal

   51 LVal: IDENT

   52 $@7: %empty

   53 LVal: IDENT $@7 ArrayLVals

   54 ArrayLVals: ArrayLVal
   55           | ArrayLVals ArrayLVal

   56 ArrayLVal: LBRAC Exp RBRAC

   57 $@8: %empty

   58 $@9: %empty

   59 $@10: %empty

   60 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block

   61 $@11: %empty

   62 $@12: %empty

   63 $@13: %empty

   64 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block

   65 FuncFParams: %empty
   66            | FuncFParam
   67            | FuncFParams COMMA FuncFParam

   68 FuncFParam: INT IDENT
   69           | INT IDENT LBRAC RBRAC ArrayParamDef

   70 ArrayParamDef: ArrayUnit
   71              | ArrayParamDef ArrayUnit
   72              | %empty

   73 $@14: %empty

   74 Block: LCURLY $@14 BlockItems RCURLY

   75 BlockItems: BlockItem
   76           | BlockItems BlockItem

   77 BlockItem: %empty
   78          | Decl
   79          | Stmt

   80 Stmt: RETURN SEMI
   81     | RETURN Exp SEMI
   82     | Exp SEMI
   83     | SEMI
   84     | Block

   85 $@15: %empty

   86 Stmt: LVal $@15 ASSIGN Exp SEMI

   87 $@16: %empty

   88 $@17: %empty

   89 $@18: %empty

   90 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else

   91 $@19: %empty

   92 $@20: %empty

   93 Stmt: WHILE $@19 LPAREN Cond RPAREN $@20 Stmt
   94     | BREAK SEMI
   95     | CONT SEMI

   96 IF_Else: %empty
   97        | ELSE Stmt

   98 Cond: LOrExp

   99 LOrExp: LAndExp
  100       | LOrExp OR LAndExp

  101 LAndExp: EqExp
  102        | LAndExp AND EqExp

  103 EqExp: RelExp
  104      | EqExp EQ RelExp
  105      | EqExp NEQ RelExp

  106 RelExp: AddExp
  107       | RelExp LE AddExp
  108       | RelExp GE AddExp
  109       | RelExp LEQ AddExp
  110       | RelExp GEQ AddExp

  111 FuncRParams: %empty
  112            | Exp
  113            | FuncRParams COMMA Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 41
SUB (259) 42
MUL (260) 44
DIV (261) 45
MOD (262) 46
IDENT (263) 12 15 21 23 24 27 48 51 53 60 64 68 69
LPAREN (264) 48 60 64 90 93
RPAREN (265) 48 60 64 90 93
LCURLY (266) 15 27 34 74
RCURLY (267) 15 27 34 74
LBRAC (268) 37 56 69
RBRAC (269) 37 56 69
INT (270) 9 18 60 68 69
CONST (271) 9
VOID (272) 64
LE (273) 107
LEQ (274) 109
GE (275) 108
GEQ (276) 110
EQ (277) 104
NEQ (278) 105
AND (279) 102
OR (280) 100
NOT (281)
IF (282) 90
ELSE (283) 97
WHILE (284) 93
BREAK (285) 94
CONT (286) 95
RETURN (287) 80 81
ASSIGN (288) 12 15 23 27 86
SEMI (289) 9 18 80 81 82 83 86 94 95
COMMA (290) 11 20 31 67 113
PERIOD (291)
NUMBER (292) 49


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
CompDecl (40)
    on left: 3 4, on right: 1 2
DeclOutFunc (41)
    on left: 5 6, on right: 3
Decl (42)
    on left: 7 8, on right: 78
ConstDecl (43)
    on left: 9, on right: 5 7
ConstDefs (44)
    on left: 10 11, on right: 9 11
ConstDef (45)
    on left: 12 15, on right: 10 11
$@1 (46)
    on left: 13, on right: 15
$@2 (47)
    on left: 14, on right: 15
ConstInitVal (48)
    on left: 16, on right: 12
ConstExp (49)
    on left: 17, on right: 16 37
VarDecl (50)
    on left: 18, on right: 6 8
VarDefs (51)
    on left: 19 20, on right: 18 20
VarDef (52)
    on left: 21 23 24 27, on right: 19 20
$@3 (53)
    on left: 22, on right: 23
$@4 (54)
    on left: 25, on right: 27
$@5 (55)
    on left: 26, on right: 27
ArrayInit (56)
    on left: 28 29, on right: 15 27 34
ArrayExps (57)
    on left: 30 31, on right: 29 31
ArrayExp (58)
    on left: 32 34, on right: 30 31
$@6 (59)
    on left: 33, on right: 34
ArrayDef (60)
    on left: 35 36, on right: 15 24 27 36
ArrayUnit (61)
    on left: 37, on right: 35 36 70 71
InitVal (62)
    on left: 38, on right: 23
Exp (63)
    on left: 39, on right: 32 38 56 81 82 86 112 113
AddExp (64)
    on left: 40 41 42, on right: 17 39 41 42 106 107 108 109 110
MulExp (65)
    on left: 43 44 45 46, on right: 40 41 42 44 45 46
UnaryExp (66)
    on left: 47 48, on right: 43 44 45 46
PrimaryExp (67)
    on left: 49 50, on right: 47
LVal (68)
    on left: 51 53, on right: 50 86
$@7 (69)
    on left: 52, on right: 53
ArrayLVals (70)
    on left: 54 55, on right: 53 55
ArrayLVal (71)
    on left: 56, on right: 54 55
FuncDef (72)
    on left: 60 64, on right: 4
$@8 (73)
    on left: 57, on right: 60
$@9 (74)
    on left: 58, on right: 60
$@10 (75)
    on left: 59, on right: 60
$@11 (76)
    on left: 61, on right: 64
$@12 (77)
    on left: 62, on right: 64
$@13 (78)
    on left: 63, on right: 64
FuncFParams (79)
    on left: 65 66 67, on right: 60 64 67
FuncFParam (80)
    on left: 68 69, on right: 66 67
ArrayParamDef (81)
    on left: 70 71 72, on right: 69 71
Block (82)
    on left: 74, on right: 60 64 84
$@14 (83)
    on left: 73, on right: 74
BlockItems (84)
    on left: 75 76, on right: 74 76
BlockItem (85)
    on left: 77 78 79, on right: 75 76
Stmt (86)
    on left: 80 81 82 83 84 86 90 93 94 95, on right: 79 90 93 97
$@15 (87)
    on left: 85, on right: 86
$@16 (88)
    on left: 87, on right: 90
$@17 (89)
    on left: 88, on right: 90
$@18 (90)
    on left: 89, on right: 90
$@19 (91)
    on left: 91, on right: 93
$@20 (92)
    on left: 92, on right: 93
IF_Else (93)
    on left: 96 97, on right: 90
Cond (94)
    on left: 98, on right: 90 93
LOrExp (95)
    on left: 99 100, on right: 98 100
LAndExp (96)
    on left: 101 102, on right: 99 100 102
EqExp (97)
    on left: 103 104 105, on right: 101 102 104 105
RelExp (98)
    on left: 106 107 108 109 110, on right: 103 104 105 107 108 109
    110
FuncRParams (99)
    on left: 111 112 113, on right: 48 113


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit     go to state 4
    CompDecl     go to state 5
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 1

   18 VarDecl: INT . VarDefs SEMI
   60 FuncDef: INT . IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block

    IDENT  shift, and go to state 10

    VarDefs  go to state 11
    VarDef   go to state 12


State 2

    9 ConstDecl: CONST . INT ConstDefs SEMI

    INT  shift, and go to state 13


State 3

   64 FuncDef: VOID . IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block

    IDENT  shift, and go to state 14


State 4

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . CompDecl

    $end   shift, and go to state 15
    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompDecl     go to state 16
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 5

    1 CompUnit: CompDecl .

    $default  reduce using rule 1 (CompUnit)


State 6

    3 CompDecl: DeclOutFunc .

    $default  reduce using rule 3 (CompDecl)


State 7

    5 DeclOutFunc: ConstDecl .

    $default  reduce using rule 5 (DeclOutFunc)


State 8

    6 DeclOutFunc: VarDecl .

    $default  reduce using rule 6 (DeclOutFunc)


State 9

    4 CompDecl: FuncDef .

    $default  reduce using rule 4 (CompDecl)


State 10

   21 VarDef: IDENT .
   23       | IDENT . ASSIGN $@3 InitVal
   24       | IDENT . ArrayDef
   27       | IDENT . ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY
   60 FuncDef: INT IDENT . $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    LPAREN    reduce using rule 57 ($@8)
    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20
    $@8        go to state 21


State 11

   18 VarDecl: INT VarDefs . SEMI
   20 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 12

   19 VarDefs: VarDef .

    $default  reduce using rule 19 (VarDefs)


State 13

    9 ConstDecl: CONST INT . ConstDefs SEMI

    IDENT  shift, and go to state 24

    ConstDefs  go to state 25
    ConstDef   go to state 26


State 14

   64 FuncDef: VOID IDENT . $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block

    $default  reduce using rule 61 ($@11)

    $@11  go to state 27


State 15

    0 $accept: CompUnit $end .

    $default  accept


State 16

    2 CompUnit: CompUnit CompDecl .

    $default  reduce using rule 2 (CompUnit)


State 17

   37 ArrayUnit: LBRAC . ConstExp RBRAC

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    ConstExp    go to state 30
    AddExp      go to state 31
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 18

   23 VarDef: IDENT ASSIGN . $@3 InitVal

    $default  reduce using rule 22 ($@3)

    $@3  go to state 36


State 19

   24 VarDef: IDENT ArrayDef .
   27       | IDENT ArrayDef . ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY
   36 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 37

    $default  reduce using rule 24 (VarDef)

    ArrayUnit  go to state 38


State 20

   35 ArrayDef: ArrayUnit .

    $default  reduce using rule 35 (ArrayDef)


State 21

   60 FuncDef: INT IDENT $@8 . LPAREN $@9 FuncFParams RPAREN $@10 Block

    LPAREN  shift, and go to state 39


State 22

   18 VarDecl: INT VarDefs SEMI .

    $default  reduce using rule 18 (VarDecl)


State 23

   20 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 40

    VarDef  go to state 41


State 24

   12 ConstDef: IDENT . ASSIGN ConstInitVal
   15         | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 42

    ArrayDef   go to state 43
    ArrayUnit  go to state 20


State 25

    9 ConstDecl: CONST INT ConstDefs . SEMI
   11 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 44
    COMMA  shift, and go to state 45


State 26

   10 ConstDefs: ConstDef .

    $default  reduce using rule 10 (ConstDefs)


State 27

   64 FuncDef: VOID IDENT $@11 . LPAREN $@12 FuncFParams RPAREN $@13 Block

    LPAREN  shift, and go to state 46


State 28

   48 UnaryExp: IDENT . LPAREN FuncRParams RPAREN
   51 LVal: IDENT .
   53     | IDENT . $@7 ArrayLVals

    LPAREN  shift, and go to state 47

    LBRAC     reduce using rule 52 ($@7)
    $default  reduce using rule 51 (LVal)

    $@7  go to state 48


State 29

   49 PrimaryExp: NUMBER .

    $default  reduce using rule 49 (PrimaryExp)


State 30

   37 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 49


State 31

   17 ConstExp: AddExp .
   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp

    ADD  shift, and go to state 50
    SUB  shift, and go to state 51

    $default  reduce using rule 17 (ConstExp)


State 32

   40 AddExp: MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 52
    DIV  shift, and go to state 53
    MOD  shift, and go to state 54

    $default  reduce using rule 40 (AddExp)


State 33

   43 MulExp: UnaryExp .

    $default  reduce using rule 43 (MulExp)


State 34

   47 UnaryExp: PrimaryExp .

    $default  reduce using rule 47 (UnaryExp)


State 35

   50 PrimaryExp: LVal .

    $default  reduce using rule 50 (PrimaryExp)


State 36

   23 VarDef: IDENT ASSIGN $@3 . InitVal

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    InitVal     go to state 55
    Exp         go to state 56
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 37

   27 VarDef: IDENT ArrayDef ASSIGN . $@4 LCURLY $@5 ArrayInit RCURLY

    $default  reduce using rule 25 ($@4)

    $@4  go to state 58


State 38

   36 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 36 (ArrayDef)


State 39

   60 FuncDef: INT IDENT $@8 LPAREN . $@9 FuncFParams RPAREN $@10 Block

    $default  reduce using rule 58 ($@9)

    $@9  go to state 59


State 40

   21 VarDef: IDENT .
   23       | IDENT . ASSIGN $@3 InitVal
   24       | IDENT . ArrayDef
   27       | IDENT . ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20


State 41

   20 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 20 (VarDefs)


State 42

   12 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    ConstInitVal  go to state 60
    ConstExp      go to state 61
    AddExp        go to state 31
    MulExp        go to state 32
    UnaryExp      go to state 33
    PrimaryExp    go to state 34
    LVal          go to state 35


State 43

   15 ConstDef: IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   36 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 62

    ArrayUnit  go to state 38


State 44

    9 ConstDecl: CONST INT ConstDefs SEMI .

    $default  reduce using rule 9 (ConstDecl)


State 45

   11 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 24

    ConstDef  go to state 63


State 46

   64 FuncDef: VOID IDENT $@11 LPAREN . $@12 FuncFParams RPAREN $@13 Block

    $default  reduce using rule 62 ($@12)

    $@12  go to state 64


State 47

   48 UnaryExp: IDENT LPAREN . FuncRParams RPAREN

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    $default  reduce using rule 111 (FuncRParams)

    Exp          go to state 65
    AddExp       go to state 57
    MulExp       go to state 32
    UnaryExp     go to state 33
    PrimaryExp   go to state 34
    LVal         go to state 35
    FuncRParams  go to state 66


State 48

   53 LVal: IDENT $@7 . ArrayLVals

    LBRAC  shift, and go to state 67

    ArrayLVals  go to state 68
    ArrayLVal   go to state 69


State 49

   37 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 37 (ArrayUnit)


State 50

   41 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    MulExp      go to state 70
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 51

   42 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    MulExp      go to state 71
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 52

   44 MulExp: MulExp MUL . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 72
    PrimaryExp  go to state 34
    LVal        go to state 35


State 53

   45 MulExp: MulExp DIV . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 73
    PrimaryExp  go to state 34
    LVal        go to state 35


State 54

   46 MulExp: MulExp MOD . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 74
    PrimaryExp  go to state 34
    LVal        go to state 35


State 55

   23 VarDef: IDENT ASSIGN $@3 InitVal .

    $default  reduce using rule 23 (VarDef)


State 56

   38 InitVal: Exp .

    $default  reduce using rule 38 (InitVal)


State 57

   39 Exp: AddExp .
   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp

    ADD  shift, and go to state 50
    SUB  shift, and go to state 51

    $default  reduce using rule 39 (Exp)


State 58

   27 VarDef: IDENT ArrayDef ASSIGN $@4 . LCURLY $@5 ArrayInit RCURLY

    LCURLY  shift, and go to state 75


State 59

   60 FuncDef: INT IDENT $@8 LPAREN $@9 . FuncFParams RPAREN $@10 Block

    INT  shift, and go to state 76

    $default  reduce using rule 65 (FuncFParams)

    FuncFParams  go to state 77
    FuncFParam   go to state 78


State 60

   12 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 12 (ConstDef)


State 61

   16 ConstInitVal: ConstExp .

    $default  reduce using rule 16 (ConstInitVal)


State 62

   15 ConstDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 13 ($@1)

    $@1  go to state 79


State 63

   11 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 11 (ConstDefs)


State 64

   64 FuncDef: VOID IDENT $@11 LPAREN $@12 . FuncFParams RPAREN $@13 Block

    INT  shift, and go to state 76

    $default  reduce using rule 65 (FuncFParams)

    FuncFParams  go to state 80
    FuncFParam   go to state 78


State 65

  112 FuncRParams: Exp .

    $default  reduce using rule 112 (FuncRParams)


State 66

   48 UnaryExp: IDENT LPAREN FuncRParams . RPAREN
  113 FuncRParams: FuncRParams . COMMA Exp

    RPAREN  shift, and go to state 81
    COMMA   shift, and go to state 82


State 67

   56 ArrayLVal: LBRAC . Exp RBRAC

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    Exp         go to state 83
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 68

   53 LVal: IDENT $@7 ArrayLVals .
   55 ArrayLVals: ArrayLVals . ArrayLVal

    LBRAC  shift, and go to state 67

    $default  reduce using rule 53 (LVal)

    ArrayLVal  go to state 84


State 69

   54 ArrayLVals: ArrayLVal .

    $default  reduce using rule 54 (ArrayLVals)


State 70

   41 AddExp: AddExp ADD MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 52
    DIV  shift, and go to state 53
    MOD  shift, and go to state 54

    $default  reduce using rule 41 (AddExp)


State 71

   42 AddExp: AddExp SUB MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 52
    DIV  shift, and go to state 53
    MOD  shift, and go to state 54

    $default  reduce using rule 42 (AddExp)


State 72

   44 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 44 (MulExp)


State 73

   45 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 45 (MulExp)


State 74

   46 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 46 (MulExp)


State 75

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY . $@5 ArrayInit RCURLY

    $default  reduce using rule 26 ($@5)

    $@5  go to state 85


State 76

   68 FuncFParam: INT . IDENT
   69           | INT . IDENT LBRAC RBRAC ArrayParamDef

    IDENT  shift, and go to state 86


State 77

   60 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams . RPAREN $@10 Block
   67 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 87
    COMMA   shift, and go to state 88


State 78

   66 FuncFParams: FuncFParam .

    $default  reduce using rule 66 (FuncFParams)


State 79

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 89


State 80

   64 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams . RPAREN $@13 Block
   67 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 90
    COMMA   shift, and go to state 88


State 81

   48 UnaryExp: IDENT LPAREN FuncRParams RPAREN .

    $default  reduce using rule 48 (UnaryExp)


State 82

  113 FuncRParams: FuncRParams COMMA . Exp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    Exp         go to state 91
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 83

   56 ArrayLVal: LBRAC Exp . RBRAC

    RBRAC  shift, and go to state 92


State 84

   55 ArrayLVals: ArrayLVals ArrayLVal .

    $default  reduce using rule 55 (ArrayLVals)


State 85

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 29

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 94
    ArrayExps   go to state 95
    ArrayExp    go to state 96
    Exp         go to state 97
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 86

   68 FuncFParam: INT IDENT .
   69           | INT IDENT . LBRAC RBRAC ArrayParamDef

    LBRAC  shift, and go to state 98

    $default  reduce using rule 68 (FuncFParam)


State 87

   60 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN . $@10 Block

    $default  reduce using rule 59 ($@10)

    $@10  go to state 99


State 88

   67 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 76

    FuncFParam  go to state 100


State 89

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 14 ($@2)

    $@2  go to state 101


State 90

   64 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN . $@13 Block

    $default  reduce using rule 63 ($@13)

    $@13  go to state 102


State 91

  113 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 113 (FuncRParams)


State 92

   56 ArrayLVal: LBRAC Exp RBRAC .

    $default  reduce using rule 56 (ArrayLVal)


State 93

   34 ArrayExp: LCURLY . $@6 ArrayInit RCURLY

    $default  reduce using rule 33 ($@6)

    $@6  go to state 103


State 94

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit . RCURLY

    RCURLY  shift, and go to state 104


State 95

   29 ArrayInit: ArrayExps .
   31 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 105

    $default  reduce using rule 29 (ArrayInit)


State 96

   30 ArrayExps: ArrayExp .

    $default  reduce using rule 30 (ArrayExps)


State 97

   32 ArrayExp: Exp .

    $default  reduce using rule 32 (ArrayExp)


State 98

   69 FuncFParam: INT IDENT LBRAC . RBRAC ArrayParamDef

    RBRAC  shift, and go to state 106


State 99

   60 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 . Block

    LCURLY  shift, and go to state 107

    Block  go to state 108


State 100

   67 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 67 (FuncFParams)


State 101

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 29

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 109
    ArrayExps   go to state 95
    ArrayExp    go to state 96
    Exp         go to state 97
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 102

   64 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 . Block

    LCURLY  shift, and go to state 107

    Block  go to state 110


State 103

   34 ArrayExp: LCURLY $@6 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 29

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 111
    ArrayExps   go to state 95
    ArrayExp    go to state 96
    Exp         go to state 97
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 104

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY .

    $default  reduce using rule 27 (VarDef)


State 105

   31 ArrayExps: ArrayExps COMMA . ArrayExp

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 29

    ArrayExp    go to state 112
    Exp         go to state 97
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 106

   69 FuncFParam: INT IDENT LBRAC RBRAC . ArrayParamDef

    LBRAC  shift, and go to state 17

    LBRAC     [reduce using rule 72 (ArrayParamDef)]
    $default  reduce using rule 72 (ArrayParamDef)

    ArrayUnit      go to state 113
    ArrayParamDef  go to state 114


State 107

   74 Block: LCURLY . $@14 BlockItems RCURLY

    $default  reduce using rule 73 ($@14)

    $@14  go to state 115


State 108

   60 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block .

    $default  reduce using rule 60 (FuncDef)


State 109

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 116


State 110

   64 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block .

    $default  reduce using rule 64 (FuncDef)


State 111

   34 ArrayExp: LCURLY $@6 ArrayInit . RCURLY

    RCURLY  shift, and go to state 117


State 112

   31 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 31 (ArrayExps)


State 113

   70 ArrayParamDef: ArrayUnit .

    $default  reduce using rule 70 (ArrayParamDef)


State 114

   69 FuncFParam: INT IDENT LBRAC RBRAC ArrayParamDef .
   71 ArrayParamDef: ArrayParamDef . ArrayUnit

    LBRAC  shift, and go to state 17

    $default  reduce using rule 69 (FuncFParam)

    ArrayUnit  go to state 118


State 115

   74 Block: LCURLY $@14 . BlockItems RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 107
    INT     shift, and go to state 119
    CONST   shift, and go to state 2
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    BREAK   shift, and go to state 122
    CONT    shift, and go to state 123
    RETURN  shift, and go to state 124
    SEMI    shift, and go to state 125
    NUMBER  shift, and go to state 29

    IDENT     [reduce using rule 77 (BlockItem)]
    LCURLY    [reduce using rule 77 (BlockItem)]
    INT       [reduce using rule 77 (BlockItem)]
    CONST     [reduce using rule 77 (BlockItem)]
    IF        [reduce using rule 77 (BlockItem)]
    WHILE     [reduce using rule 77 (BlockItem)]
    BREAK     [reduce using rule 77 (BlockItem)]
    CONT      [reduce using rule 77 (BlockItem)]
    RETURN    [reduce using rule 77 (BlockItem)]
    SEMI      [reduce using rule 77 (BlockItem)]
    NUMBER    [reduce using rule 77 (BlockItem)]
    $default  reduce using rule 77 (BlockItem)

    Decl        go to state 126
    ConstDecl   go to state 127
    VarDecl     go to state 128
    Exp         go to state 129
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 130
    Block       go to state 131
    BlockItems  go to state 132
    BlockItem   go to state 133
    Stmt        go to state 134


State 116

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 15 (ConstDef)


State 117

   34 ArrayExp: LCURLY $@6 ArrayInit RCURLY .

    $default  reduce using rule 34 (ArrayExp)


State 118

   71 ArrayParamDef: ArrayParamDef ArrayUnit .

    $default  reduce using rule 71 (ArrayParamDef)


State 119

   18 VarDecl: INT . VarDefs SEMI

    IDENT  shift, and go to state 40

    VarDefs  go to state 11
    VarDef   go to state 12


State 120

   90 Stmt: IF . $@16 LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else

    $default  reduce using rule 87 ($@16)

    $@16  go to state 135


State 121

   93 Stmt: WHILE . $@19 LPAREN Cond RPAREN $@20 Stmt

    $default  reduce using rule 91 ($@19)

    $@19  go to state 136


State 122

   94 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 137


State 123

   95 Stmt: CONT . SEMI

    SEMI  shift, and go to state 138


State 124

   80 Stmt: RETURN . SEMI
   81     | RETURN . Exp SEMI

    IDENT   shift, and go to state 28
    SEMI    shift, and go to state 139
    NUMBER  shift, and go to state 29

    Exp         go to state 140
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 125

   83 Stmt: SEMI .

    $default  reduce using rule 83 (Stmt)


State 126

   78 BlockItem: Decl .

    $default  reduce using rule 78 (BlockItem)


State 127

    7 Decl: ConstDecl .

    $default  reduce using rule 7 (Decl)


State 128

    8 Decl: VarDecl .

    $default  reduce using rule 8 (Decl)


State 129

   82 Stmt: Exp . SEMI

    SEMI  shift, and go to state 141


State 130

   50 PrimaryExp: LVal .
   86 Stmt: LVal . $@15 ASSIGN Exp SEMI

    ASSIGN    reduce using rule 85 ($@15)
    $default  reduce using rule 50 (PrimaryExp)

    $@15  go to state 142


State 131

   84 Stmt: Block .

    $default  reduce using rule 84 (Stmt)


State 132

   74 Block: LCURLY $@14 BlockItems . RCURLY
   76 BlockItems: BlockItems . BlockItem

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 107
    RCURLY  shift, and go to state 143
    INT     shift, and go to state 119
    CONST   shift, and go to state 2
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    BREAK   shift, and go to state 122
    CONT    shift, and go to state 123
    RETURN  shift, and go to state 124
    SEMI    shift, and go to state 125
    NUMBER  shift, and go to state 29

    IDENT   [reduce using rule 77 (BlockItem)]
    LCURLY  [reduce using rule 77 (BlockItem)]
    RCURLY  [reduce using rule 77 (BlockItem)]
    INT     [reduce using rule 77 (BlockItem)]
    CONST   [reduce using rule 77 (BlockItem)]
    IF      [reduce using rule 77 (BlockItem)]
    WHILE   [reduce using rule 77 (BlockItem)]
    BREAK   [reduce using rule 77 (BlockItem)]
    CONT    [reduce using rule 77 (BlockItem)]
    RETURN  [reduce using rule 77 (BlockItem)]
    SEMI    [reduce using rule 77 (BlockItem)]
    NUMBER  [reduce using rule 77 (BlockItem)]

    Decl        go to state 126
    ConstDecl   go to state 127
    VarDecl     go to state 128
    Exp         go to state 129
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 130
    Block       go to state 131
    BlockItem   go to state 144
    Stmt        go to state 134


State 133

   75 BlockItems: BlockItem .

    $default  reduce using rule 75 (BlockItems)


State 134

   79 BlockItem: Stmt .

    $default  reduce using rule 79 (BlockItem)


State 135

   90 Stmt: IF $@16 . LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else

    LPAREN  shift, and go to state 145


State 136

   93 Stmt: WHILE $@19 . LPAREN Cond RPAREN $@20 Stmt

    LPAREN  shift, and go to state 146


State 137

   94 Stmt: BREAK SEMI .

    $default  reduce using rule 94 (Stmt)


State 138

   95 Stmt: CONT SEMI .

    $default  reduce using rule 95 (Stmt)


State 139

   80 Stmt: RETURN SEMI .

    $default  reduce using rule 80 (Stmt)


State 140

   81 Stmt: RETURN Exp . SEMI

    SEMI  shift, and go to state 147


State 141

   82 Stmt: Exp SEMI .

    $default  reduce using rule 82 (Stmt)


State 142

   86 Stmt: LVal $@15 . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 148


State 143

   74 Block: LCURLY $@14 BlockItems RCURLY .

    $default  reduce using rule 74 (Block)


State 144

   76 BlockItems: BlockItems BlockItem .

    $default  reduce using rule 76 (BlockItems)


State 145

   90 Stmt: IF $@16 LPAREN . Cond RPAREN $@17 Stmt $@18 IF_Else

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 149
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    Cond        go to state 150
    LOrExp      go to state 151
    LAndExp     go to state 152
    EqExp       go to state 153
    RelExp      go to state 154


State 146

   93 Stmt: WHILE $@19 LPAREN . Cond RPAREN $@20 Stmt

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 149
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    Cond        go to state 155
    LOrExp      go to state 151
    LAndExp     go to state 152
    EqExp       go to state 153
    RelExp      go to state 154


State 147

   81 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 81 (Stmt)


State 148

   86 Stmt: LVal $@15 ASSIGN . Exp SEMI

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    Exp         go to state 156
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 149

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  106 RelExp: AddExp .

    ADD  shift, and go to state 50
    SUB  shift, and go to state 51

    $default  reduce using rule 106 (RelExp)


State 150

   90 Stmt: IF $@16 LPAREN Cond . RPAREN $@17 Stmt $@18 IF_Else

    RPAREN  shift, and go to state 157


State 151

   98 Cond: LOrExp .
  100 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 158

    $default  reduce using rule 98 (Cond)


State 152

   99 LOrExp: LAndExp .
  102 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 159

    $default  reduce using rule 99 (LOrExp)


State 153

  101 LAndExp: EqExp .
  104 EqExp: EqExp . EQ RelExp
  105      | EqExp . NEQ RelExp

    EQ   shift, and go to state 160
    NEQ  shift, and go to state 161

    $default  reduce using rule 101 (LAndExp)


State 154

  103 EqExp: RelExp .
  107 RelExp: RelExp . LE AddExp
  108       | RelExp . GE AddExp
  109       | RelExp . LEQ AddExp
  110       | RelExp . GEQ AddExp

    LE   shift, and go to state 162
    LEQ  shift, and go to state 163
    GE   shift, and go to state 164
    GEQ  shift, and go to state 165

    $default  reduce using rule 103 (EqExp)


State 155

   93 Stmt: WHILE $@19 LPAREN Cond . RPAREN $@20 Stmt

    RPAREN  shift, and go to state 166


State 156

   86 Stmt: LVal $@15 ASSIGN Exp . SEMI

    SEMI  shift, and go to state 167


State 157

   90 Stmt: IF $@16 LPAREN Cond RPAREN . $@17 Stmt $@18 IF_Else

    $default  reduce using rule 88 ($@17)

    $@17  go to state 168


State 158

  100 LOrExp: LOrExp OR . LAndExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 149
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    LAndExp     go to state 169
    EqExp       go to state 153
    RelExp      go to state 154


State 159

  102 LAndExp: LAndExp AND . EqExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 149
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    EqExp       go to state 170
    RelExp      go to state 154


State 160

  104 EqExp: EqExp EQ . RelExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 149
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    RelExp      go to state 171


State 161

  105 EqExp: EqExp NEQ . RelExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 149
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    RelExp      go to state 172


State 162

  107 RelExp: RelExp LE . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 173
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 163

  109 RelExp: RelExp LEQ . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 174
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 164

  108 RelExp: RelExp GE . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 175
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 165

  110 RelExp: RelExp GEQ . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 176
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 166

   93 Stmt: WHILE $@19 LPAREN Cond RPAREN . $@20 Stmt

    $default  reduce using rule 92 ($@20)

    $@20  go to state 177


State 167

   86 Stmt: LVal $@15 ASSIGN Exp SEMI .

    $default  reduce using rule 86 (Stmt)


State 168

   90 Stmt: IF $@16 LPAREN Cond RPAREN $@17 . Stmt $@18 IF_Else

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 107
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    BREAK   shift, and go to state 122
    CONT    shift, and go to state 123
    RETURN  shift, and go to state 124
    SEMI    shift, and go to state 125
    NUMBER  shift, and go to state 29

    Exp         go to state 129
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 130
    Block       go to state 131
    Stmt        go to state 178


State 169

  100 LOrExp: LOrExp OR LAndExp .
  102 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 159

    $default  reduce using rule 100 (LOrExp)


State 170

  102 LAndExp: LAndExp AND EqExp .
  104 EqExp: EqExp . EQ RelExp
  105      | EqExp . NEQ RelExp

    EQ   shift, and go to state 160
    NEQ  shift, and go to state 161

    $default  reduce using rule 102 (LAndExp)


State 171

  104 EqExp: EqExp EQ RelExp .
  107 RelExp: RelExp . LE AddExp
  108       | RelExp . GE AddExp
  109       | RelExp . LEQ AddExp
  110       | RelExp . GEQ AddExp

    LE   shift, and go to state 162
    LEQ  shift, and go to state 163
    GE   shift, and go to state 164
    GEQ  shift, and go to state 165

    $default  reduce using rule 104 (EqExp)


State 172

  105 EqExp: EqExp NEQ RelExp .
  107 RelExp: RelExp . LE AddExp
  108       | RelExp . GE AddExp
  109       | RelExp . LEQ AddExp
  110       | RelExp . GEQ AddExp

    LE   shift, and go to state 162
    LEQ  shift, and go to state 163
    GE   shift, and go to state 164
    GEQ  shift, and go to state 165

    $default  reduce using rule 105 (EqExp)


State 173

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  107 RelExp: RelExp LE AddExp .

    ADD  shift, and go to state 50
    SUB  shift, and go to state 51

    $default  reduce using rule 107 (RelExp)


State 174

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  109 RelExp: RelExp LEQ AddExp .

    ADD  shift, and go to state 50
    SUB  shift, and go to state 51

    $default  reduce using rule 109 (RelExp)


State 175

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  108 RelExp: RelExp GE AddExp .

    ADD  shift, and go to state 50
    SUB  shift, and go to state 51

    $default  reduce using rule 108 (RelExp)


State 176

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  110 RelExp: RelExp GEQ AddExp .

    ADD  shift, and go to state 50
    SUB  shift, and go to state 51

    $default  reduce using rule 110 (RelExp)


State 177

   93 Stmt: WHILE $@19 LPAREN Cond RPAREN $@20 . Stmt

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 107
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    BREAK   shift, and go to state 122
    CONT    shift, and go to state 123
    RETURN  shift, and go to state 124
    SEMI    shift, and go to state 125
    NUMBER  shift, and go to state 29

    Exp         go to state 129
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 130
    Block       go to state 131
    Stmt        go to state 179


State 178

   90 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt . $@18 IF_Else

    $default  reduce using rule 89 ($@18)

    $@18  go to state 180


State 179

   93 Stmt: WHILE $@19 LPAREN Cond RPAREN $@20 Stmt .

    $default  reduce using rule 93 (Stmt)


State 180

   90 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt $@18 . IF_Else

    ELSE  shift, and go to state 181

    ELSE      [reduce using rule 96 (IF_Else)]
    $default  reduce using rule 96 (IF_Else)

    IF_Else  go to state 182


State 181

   97 IF_Else: ELSE . Stmt

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 107
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    BREAK   shift, and go to state 122
    CONT    shift, and go to state 123
    RETURN  shift, and go to state 124
    SEMI    shift, and go to state 125
    NUMBER  shift, and go to state 29

    Exp         go to state 129
    AddExp      go to state 57
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 130
    Block       go to state 131
    Stmt        go to state 183


State 182

   90 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else .

    $default  reduce using rule 90 (Stmt)


State 183

   97 IF_Else: ELSE Stmt .

    $default  reduce using rule 97 (IF_Else)
