Terminals unused in grammar

   NOT
   PERIOD


State 110 conflicts: 1 shift/reduce
State 119 conflicts: 12 shift/reduce
State 136 conflicts: 13 shift/reduce
State 184 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompDecl
    2         | CompUnit CompDecl

    3 CompDecl: DeclOutFunc
    4         | FuncDef

    5 DeclOutFunc: ConstDecl
    6            | VarDecl

    7 Decl: ConstDecl
    8     | VarDecl

    9 ConstDecl: CONST INT ConstDefs SEMI

   10 ConstDefs: ConstDef
   11          | ConstDefs COMMA ConstDef

   12 ConstDef: IDENT ASSIGN ConstInitVal

   13 $@1: %empty

   14 $@2: %empty

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   16 ConstInitVal: ConstExp

   17 ConstExp: AddExp

   18 VarDecl: INT VarDefs SEMI

   19 VarDefs: VarDef
   20        | VarDefs COMMA VarDef

   21 VarDef: IDENT

   22 $@3: %empty

   23 VarDef: IDENT ASSIGN $@3 InitVal
   24       | IDENT ArrayDef

   25 $@4: %empty

   26 $@5: %empty

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY

   28 ArrayInit: %empty
   29          | ArrayExps

   30 ArrayExps: ArrayExp
   31          | ArrayExps COMMA ArrayExp

   32 ArrayExp: Exp

   33 $@6: %empty

   34 ArrayExp: LCURLY $@6 ArrayInit RCURLY

   35 ArrayDef: ArrayUnit
   36         | ArrayDef ArrayUnit

   37 ArrayUnit: LBRAC ConstExp RBRAC

   38 InitVal: Exp

   39 Exp: AddExp

   40 AddExp: MulExp
   41       | AddExp ADD MulExp
   42       | AddExp SUB MulExp

   43 MulExp: UnaryExp
   44       | MulExp MUL UnaryExp
   45       | MulExp DIV UnaryExp
   46       | MulExp MOD UnaryExp

   47 UnaryExp: PrimaryExp
   48         | IDENT LPAREN FuncRParams RPAREN

   49 PrimaryExp: NUMBER
   50           | LVal
   51           | LPAREN Exp RPAREN SEMI

   52 LVal: IDENT

   53 $@7: %empty

   54 LVal: IDENT $@7 ArrayLVals

   55 ArrayLVals: ArrayLVal
   56           | ArrayLVals ArrayLVal

   57 ArrayLVal: LBRAC Exp RBRAC

   58 $@8: %empty

   59 $@9: %empty

   60 $@10: %empty

   61 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block

   62 $@11: %empty

   63 $@12: %empty

   64 $@13: %empty

   65 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block

   66 FuncFParams: %empty
   67            | FuncFParam
   68            | FuncFParams COMMA FuncFParam

   69 FuncFParam: INT IDENT
   70           | INT IDENT LBRAC RBRAC ArrayParamDef

   71 ArrayParamDef: ArrayUnit
   72              | ArrayParamDef ArrayUnit
   73              | %empty

   74 $@14: %empty

   75 Block: LCURLY $@14 BlockItems RCURLY

   76 BlockItems: BlockItem
   77           | BlockItems BlockItem

   78 BlockItem: %empty
   79          | Decl
   80          | Stmt

   81 Stmt: RETURN SEMI
   82     | RETURN Exp SEMI
   83     | Exp SEMI
   84     | SEMI
   85     | Block

   86 $@15: %empty

   87 Stmt: LVal $@15 ASSIGN Exp SEMI

   88 $@16: %empty

   89 $@17: %empty

   90 $@18: %empty

   91 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else

   92 $@19: %empty

   93 $@20: %empty

   94 Stmt: WHILE $@19 LPAREN Cond RPAREN $@20 Stmt
   95     | BREAK SEMI
   96     | CONT SEMI

   97 IF_Else: %empty
   98        | ELSE Stmt

   99 Cond: LOrExp

  100 LOrExp: LAndExp
  101       | LOrExp OR LAndExp

  102 LAndExp: EqExp
  103        | LAndExp AND EqExp

  104 EqExp: RelExp
  105      | EqExp EQ RelExp
  106      | EqExp NEQ RelExp

  107 RelExp: AddExp
  108       | RelExp LE AddExp
  109       | RelExp GE AddExp
  110       | RelExp LEQ AddExp
  111       | RelExp GEQ AddExp

  112 FuncRParams: %empty
  113            | Exp
  114            | FuncRParams COMMA Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 41
SUB (259) 42
MUL (260) 44
DIV (261) 45
MOD (262) 46
IDENT (263) 12 15 21 23 24 27 48 52 54 61 65 69 70
LPAREN (264) 48 51 61 65 91 94
RPAREN (265) 48 51 61 65 91 94
LCURLY (266) 15 27 34 75
RCURLY (267) 15 27 34 75
LBRAC (268) 37 57 70
RBRAC (269) 37 57 70
INT (270) 9 18 61 69 70
CONST (271) 9
VOID (272) 65
LE (273) 108
LEQ (274) 110
GE (275) 109
GEQ (276) 111
EQ (277) 105
NEQ (278) 106
AND (279) 103
OR (280) 101
NOT (281)
IF (282) 91
ELSE (283) 98
WHILE (284) 94
BREAK (285) 95
CONT (286) 96
RETURN (287) 81 82
ASSIGN (288) 12 15 23 27 87
SEMI (289) 9 18 51 81 82 83 84 87 95 96
COMMA (290) 11 20 31 68 114
PERIOD (291)
NUMBER (292) 49


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
CompDecl (40)
    on left: 3 4, on right: 1 2
DeclOutFunc (41)
    on left: 5 6, on right: 3
Decl (42)
    on left: 7 8, on right: 79
ConstDecl (43)
    on left: 9, on right: 5 7
ConstDefs (44)
    on left: 10 11, on right: 9 11
ConstDef (45)
    on left: 12 15, on right: 10 11
$@1 (46)
    on left: 13, on right: 15
$@2 (47)
    on left: 14, on right: 15
ConstInitVal (48)
    on left: 16, on right: 12
ConstExp (49)
    on left: 17, on right: 16 37
VarDecl (50)
    on left: 18, on right: 6 8
VarDefs (51)
    on left: 19 20, on right: 18 20
VarDef (52)
    on left: 21 23 24 27, on right: 19 20
$@3 (53)
    on left: 22, on right: 23
$@4 (54)
    on left: 25, on right: 27
$@5 (55)
    on left: 26, on right: 27
ArrayInit (56)
    on left: 28 29, on right: 15 27 34
ArrayExps (57)
    on left: 30 31, on right: 29 31
ArrayExp (58)
    on left: 32 34, on right: 30 31
$@6 (59)
    on left: 33, on right: 34
ArrayDef (60)
    on left: 35 36, on right: 15 24 27 36
ArrayUnit (61)
    on left: 37, on right: 35 36 71 72
InitVal (62)
    on left: 38, on right: 23
Exp (63)
    on left: 39, on right: 32 38 51 57 82 83 87 113 114
AddExp (64)
    on left: 40 41 42, on right: 17 39 41 42 107 108 109 110 111
MulExp (65)
    on left: 43 44 45 46, on right: 40 41 42 44 45 46
UnaryExp (66)
    on left: 47 48, on right: 43 44 45 46
PrimaryExp (67)
    on left: 49 50 51, on right: 47
LVal (68)
    on left: 52 54, on right: 50 87
$@7 (69)
    on left: 53, on right: 54
ArrayLVals (70)
    on left: 55 56, on right: 54 56
ArrayLVal (71)
    on left: 57, on right: 55 56
FuncDef (72)
    on left: 61 65, on right: 4
$@8 (73)
    on left: 58, on right: 61
$@9 (74)
    on left: 59, on right: 61
$@10 (75)
    on left: 60, on right: 61
$@11 (76)
    on left: 62, on right: 65
$@12 (77)
    on left: 63, on right: 65
$@13 (78)
    on left: 64, on right: 65
FuncFParams (79)
    on left: 66 67 68, on right: 61 65 68
FuncFParam (80)
    on left: 69 70, on right: 67 68
ArrayParamDef (81)
    on left: 71 72 73, on right: 70 72
Block (82)
    on left: 75, on right: 61 65 85
$@14 (83)
    on left: 74, on right: 75
BlockItems (84)
    on left: 76 77, on right: 75 77
BlockItem (85)
    on left: 78 79 80, on right: 76 77
Stmt (86)
    on left: 81 82 83 84 85 87 91 94 95 96, on right: 80 91 94 98
$@15 (87)
    on left: 86, on right: 87
$@16 (88)
    on left: 88, on right: 91
$@17 (89)
    on left: 89, on right: 91
$@18 (90)
    on left: 90, on right: 91
$@19 (91)
    on left: 92, on right: 94
$@20 (92)
    on left: 93, on right: 94
IF_Else (93)
    on left: 97 98, on right: 91
Cond (94)
    on left: 99, on right: 91 94
LOrExp (95)
    on left: 100 101, on right: 99 101
LAndExp (96)
    on left: 102 103, on right: 100 101 103
EqExp (97)
    on left: 104 105 106, on right: 102 103 105 106
RelExp (98)
    on left: 107 108 109 110 111, on right: 104 105 106 108 109 110
    111
FuncRParams (99)
    on left: 112 113 114, on right: 48 114


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit     go to state 4
    CompDecl     go to state 5
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 1

   18 VarDecl: INT . VarDefs SEMI
   61 FuncDef: INT . IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block

    IDENT  shift, and go to state 10

    VarDefs  go to state 11
    VarDef   go to state 12


State 2

    9 ConstDecl: CONST . INT ConstDefs SEMI

    INT  shift, and go to state 13


State 3

   65 FuncDef: VOID . IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block

    IDENT  shift, and go to state 14


State 4

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . CompDecl

    $end   shift, and go to state 15
    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompDecl     go to state 16
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 5

    1 CompUnit: CompDecl .

    $default  reduce using rule 1 (CompUnit)


State 6

    3 CompDecl: DeclOutFunc .

    $default  reduce using rule 3 (CompDecl)


State 7

    5 DeclOutFunc: ConstDecl .

    $default  reduce using rule 5 (DeclOutFunc)


State 8

    6 DeclOutFunc: VarDecl .

    $default  reduce using rule 6 (DeclOutFunc)


State 9

    4 CompDecl: FuncDef .

    $default  reduce using rule 4 (CompDecl)


State 10

   21 VarDef: IDENT .
   23       | IDENT . ASSIGN $@3 InitVal
   24       | IDENT . ArrayDef
   27       | IDENT . ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY
   61 FuncDef: INT IDENT . $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    LPAREN    reduce using rule 58 ($@8)
    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20
    $@8        go to state 21


State 11

   18 VarDecl: INT VarDefs . SEMI
   20 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 12

   19 VarDefs: VarDef .

    $default  reduce using rule 19 (VarDefs)


State 13

    9 ConstDecl: CONST INT . ConstDefs SEMI

    IDENT  shift, and go to state 24

    ConstDefs  go to state 25
    ConstDef   go to state 26


State 14

   65 FuncDef: VOID IDENT . $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block

    $default  reduce using rule 62 ($@11)

    $@11  go to state 27


State 15

    0 $accept: CompUnit $end .

    $default  accept


State 16

    2 CompUnit: CompUnit CompDecl .

    $default  reduce using rule 2 (CompUnit)


State 17

   37 ArrayUnit: LBRAC . ConstExp RBRAC

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    ConstExp    go to state 31
    AddExp      go to state 32
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 18

   23 VarDef: IDENT ASSIGN . $@3 InitVal

    $default  reduce using rule 22 ($@3)

    $@3  go to state 37


State 19

   24 VarDef: IDENT ArrayDef .
   27       | IDENT ArrayDef . ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY
   36 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 38

    $default  reduce using rule 24 (VarDef)

    ArrayUnit  go to state 39


State 20

   35 ArrayDef: ArrayUnit .

    $default  reduce using rule 35 (ArrayDef)


State 21

   61 FuncDef: INT IDENT $@8 . LPAREN $@9 FuncFParams RPAREN $@10 Block

    LPAREN  shift, and go to state 40


State 22

   18 VarDecl: INT VarDefs SEMI .

    $default  reduce using rule 18 (VarDecl)


State 23

   20 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 41

    VarDef  go to state 42


State 24

   12 ConstDef: IDENT . ASSIGN ConstInitVal
   15         | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 43

    ArrayDef   go to state 44
    ArrayUnit  go to state 20


State 25

    9 ConstDecl: CONST INT ConstDefs . SEMI
   11 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 45
    COMMA  shift, and go to state 46


State 26

   10 ConstDefs: ConstDef .

    $default  reduce using rule 10 (ConstDefs)


State 27

   65 FuncDef: VOID IDENT $@11 . LPAREN $@12 FuncFParams RPAREN $@13 Block

    LPAREN  shift, and go to state 47


State 28

   48 UnaryExp: IDENT . LPAREN FuncRParams RPAREN
   52 LVal: IDENT .
   54     | IDENT . $@7 ArrayLVals

    LPAREN  shift, and go to state 48

    LBRAC     reduce using rule 53 ($@7)
    $default  reduce using rule 52 (LVal)

    $@7  go to state 49


State 29

   51 PrimaryExp: LPAREN . Exp RPAREN SEMI

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    Exp         go to state 50
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 30

   49 PrimaryExp: NUMBER .

    $default  reduce using rule 49 (PrimaryExp)


State 31

   37 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 52


State 32

   17 ConstExp: AddExp .
   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 17 (ConstExp)


State 33

   40 AddExp: MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 40 (AddExp)


State 34

   43 MulExp: UnaryExp .

    $default  reduce using rule 43 (MulExp)


State 35

   47 UnaryExp: PrimaryExp .

    $default  reduce using rule 47 (UnaryExp)


State 36

   50 PrimaryExp: LVal .

    $default  reduce using rule 50 (PrimaryExp)


State 37

   23 VarDef: IDENT ASSIGN $@3 . InitVal

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    InitVal     go to state 58
    Exp         go to state 59
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 38

   27 VarDef: IDENT ArrayDef ASSIGN . $@4 LCURLY $@5 ArrayInit RCURLY

    $default  reduce using rule 25 ($@4)

    $@4  go to state 60


State 39

   36 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 36 (ArrayDef)


State 40

   61 FuncDef: INT IDENT $@8 LPAREN . $@9 FuncFParams RPAREN $@10 Block

    $default  reduce using rule 59 ($@9)

    $@9  go to state 61


State 41

   21 VarDef: IDENT .
   23       | IDENT . ASSIGN $@3 InitVal
   24       | IDENT . ArrayDef
   27       | IDENT . ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20


State 42

   20 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 20 (VarDefs)


State 43

   12 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    ConstInitVal  go to state 62
    ConstExp      go to state 63
    AddExp        go to state 32
    MulExp        go to state 33
    UnaryExp      go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36


State 44

   15 ConstDef: IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   36 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 64

    ArrayUnit  go to state 39


State 45

    9 ConstDecl: CONST INT ConstDefs SEMI .

    $default  reduce using rule 9 (ConstDecl)


State 46

   11 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 24

    ConstDef  go to state 65


State 47

   65 FuncDef: VOID IDENT $@11 LPAREN . $@12 FuncFParams RPAREN $@13 Block

    $default  reduce using rule 63 ($@12)

    $@12  go to state 66


State 48

   48 UnaryExp: IDENT LPAREN . FuncRParams RPAREN

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    $default  reduce using rule 112 (FuncRParams)

    Exp          go to state 67
    AddExp       go to state 51
    MulExp       go to state 33
    UnaryExp     go to state 34
    PrimaryExp   go to state 35
    LVal         go to state 36
    FuncRParams  go to state 68


State 49

   54 LVal: IDENT $@7 . ArrayLVals

    LBRAC  shift, and go to state 69

    ArrayLVals  go to state 70
    ArrayLVal   go to state 71


State 50

   51 PrimaryExp: LPAREN Exp . RPAREN SEMI

    RPAREN  shift, and go to state 72


State 51

   39 Exp: AddExp .
   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 39 (Exp)


State 52

   37 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 37 (ArrayUnit)


State 53

   41 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    MulExp      go to state 73
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 54

   42 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    MulExp      go to state 74
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 55

   44 MulExp: MulExp MUL . UnaryExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    UnaryExp    go to state 75
    PrimaryExp  go to state 35
    LVal        go to state 36


State 56

   45 MulExp: MulExp DIV . UnaryExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    UnaryExp    go to state 76
    PrimaryExp  go to state 35
    LVal        go to state 36


State 57

   46 MulExp: MulExp MOD . UnaryExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    UnaryExp    go to state 77
    PrimaryExp  go to state 35
    LVal        go to state 36


State 58

   23 VarDef: IDENT ASSIGN $@3 InitVal .

    $default  reduce using rule 23 (VarDef)


State 59

   38 InitVal: Exp .

    $default  reduce using rule 38 (InitVal)


State 60

   27 VarDef: IDENT ArrayDef ASSIGN $@4 . LCURLY $@5 ArrayInit RCURLY

    LCURLY  shift, and go to state 78


State 61

   61 FuncDef: INT IDENT $@8 LPAREN $@9 . FuncFParams RPAREN $@10 Block

    INT  shift, and go to state 79

    $default  reduce using rule 66 (FuncFParams)

    FuncFParams  go to state 80
    FuncFParam   go to state 81


State 62

   12 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 12 (ConstDef)


State 63

   16 ConstInitVal: ConstExp .

    $default  reduce using rule 16 (ConstInitVal)


State 64

   15 ConstDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 13 ($@1)

    $@1  go to state 82


State 65

   11 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 11 (ConstDefs)


State 66

   65 FuncDef: VOID IDENT $@11 LPAREN $@12 . FuncFParams RPAREN $@13 Block

    INT  shift, and go to state 79

    $default  reduce using rule 66 (FuncFParams)

    FuncFParams  go to state 83
    FuncFParam   go to state 81


State 67

  113 FuncRParams: Exp .

    $default  reduce using rule 113 (FuncRParams)


State 68

   48 UnaryExp: IDENT LPAREN FuncRParams . RPAREN
  114 FuncRParams: FuncRParams . COMMA Exp

    RPAREN  shift, and go to state 84
    COMMA   shift, and go to state 85


State 69

   57 ArrayLVal: LBRAC . Exp RBRAC

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    Exp         go to state 86
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 70

   54 LVal: IDENT $@7 ArrayLVals .
   56 ArrayLVals: ArrayLVals . ArrayLVal

    LBRAC  shift, and go to state 69

    $default  reduce using rule 54 (LVal)

    ArrayLVal  go to state 87


State 71

   55 ArrayLVals: ArrayLVal .

    $default  reduce using rule 55 (ArrayLVals)


State 72

   51 PrimaryExp: LPAREN Exp RPAREN . SEMI

    SEMI  shift, and go to state 88


State 73

   41 AddExp: AddExp ADD MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 41 (AddExp)


State 74

   42 AddExp: AddExp SUB MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 42 (AddExp)


State 75

   44 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 44 (MulExp)


State 76

   45 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 45 (MulExp)


State 77

   46 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 46 (MulExp)


State 78

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY . $@5 ArrayInit RCURLY

    $default  reduce using rule 26 ($@5)

    $@5  go to state 89


State 79

   69 FuncFParam: INT . IDENT
   70           | INT . IDENT LBRAC RBRAC ArrayParamDef

    IDENT  shift, and go to state 90


State 80

   61 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams . RPAREN $@10 Block
   68 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 91
    COMMA   shift, and go to state 92


State 81

   67 FuncFParams: FuncFParam .

    $default  reduce using rule 67 (FuncFParams)


State 82

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 93


State 83

   65 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams . RPAREN $@13 Block
   68 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 94
    COMMA   shift, and go to state 92


State 84

   48 UnaryExp: IDENT LPAREN FuncRParams RPAREN .

    $default  reduce using rule 48 (UnaryExp)


State 85

  114 FuncRParams: FuncRParams COMMA . Exp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    Exp         go to state 95
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 86

   57 ArrayLVal: LBRAC Exp . RBRAC

    RBRAC  shift, and go to state 96


State 87

   56 ArrayLVals: ArrayLVals ArrayLVal .

    $default  reduce using rule 56 (ArrayLVals)


State 88

   51 PrimaryExp: LPAREN Exp RPAREN SEMI .

    $default  reduce using rule 51 (PrimaryExp)


State 89

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 97
    NUMBER  shift, and go to state 30

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 98
    ArrayExps   go to state 99
    ArrayExp    go to state 100
    Exp         go to state 101
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 90

   69 FuncFParam: INT IDENT .
   70           | INT IDENT . LBRAC RBRAC ArrayParamDef

    LBRAC  shift, and go to state 102

    $default  reduce using rule 69 (FuncFParam)


State 91

   61 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN . $@10 Block

    $default  reduce using rule 60 ($@10)

    $@10  go to state 103


State 92

   68 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 79

    FuncFParam  go to state 104


State 93

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 14 ($@2)

    $@2  go to state 105


State 94

   65 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN . $@13 Block

    $default  reduce using rule 64 ($@13)

    $@13  go to state 106


State 95

  114 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 114 (FuncRParams)


State 96

   57 ArrayLVal: LBRAC Exp RBRAC .

    $default  reduce using rule 57 (ArrayLVal)


State 97

   34 ArrayExp: LCURLY . $@6 ArrayInit RCURLY

    $default  reduce using rule 33 ($@6)

    $@6  go to state 107


State 98

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit . RCURLY

    RCURLY  shift, and go to state 108


State 99

   29 ArrayInit: ArrayExps .
   31 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 109

    $default  reduce using rule 29 (ArrayInit)


State 100

   30 ArrayExps: ArrayExp .

    $default  reduce using rule 30 (ArrayExps)


State 101

   32 ArrayExp: Exp .

    $default  reduce using rule 32 (ArrayExp)


State 102

   70 FuncFParam: INT IDENT LBRAC . RBRAC ArrayParamDef

    RBRAC  shift, and go to state 110


State 103

   61 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 . Block

    LCURLY  shift, and go to state 111

    Block  go to state 112


State 104

   68 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 68 (FuncFParams)


State 105

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 97
    NUMBER  shift, and go to state 30

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 113
    ArrayExps   go to state 99
    ArrayExp    go to state 100
    Exp         go to state 101
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 106

   65 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 . Block

    LCURLY  shift, and go to state 111

    Block  go to state 114


State 107

   34 ArrayExp: LCURLY $@6 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 97
    NUMBER  shift, and go to state 30

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 115
    ArrayExps   go to state 99
    ArrayExp    go to state 100
    Exp         go to state 101
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 108

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY .

    $default  reduce using rule 27 (VarDef)


State 109

   31 ArrayExps: ArrayExps COMMA . ArrayExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 97
    NUMBER  shift, and go to state 30

    ArrayExp    go to state 116
    Exp         go to state 101
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 110

   70 FuncFParam: INT IDENT LBRAC RBRAC . ArrayParamDef

    LBRAC  shift, and go to state 17

    LBRAC     [reduce using rule 73 (ArrayParamDef)]
    $default  reduce using rule 73 (ArrayParamDef)

    ArrayUnit      go to state 117
    ArrayParamDef  go to state 118


State 111

   75 Block: LCURLY . $@14 BlockItems RCURLY

    $default  reduce using rule 74 ($@14)

    $@14  go to state 119


State 112

   61 FuncDef: INT IDENT $@8 LPAREN $@9 FuncFParams RPAREN $@10 Block .

    $default  reduce using rule 61 (FuncDef)


State 113

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 120


State 114

   65 FuncDef: VOID IDENT $@11 LPAREN $@12 FuncFParams RPAREN $@13 Block .

    $default  reduce using rule 65 (FuncDef)


State 115

   34 ArrayExp: LCURLY $@6 ArrayInit . RCURLY

    RCURLY  shift, and go to state 121


State 116

   31 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 31 (ArrayExps)


State 117

   71 ArrayParamDef: ArrayUnit .

    $default  reduce using rule 71 (ArrayParamDef)


State 118

   70 FuncFParam: INT IDENT LBRAC RBRAC ArrayParamDef .
   72 ArrayParamDef: ArrayParamDef . ArrayUnit

    LBRAC  shift, and go to state 17

    $default  reduce using rule 70 (FuncFParam)

    ArrayUnit  go to state 122


State 119

   75 Block: LCURLY $@14 . BlockItems RCURLY

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 111
    INT     shift, and go to state 123
    CONST   shift, and go to state 2
    IF      shift, and go to state 124
    WHILE   shift, and go to state 125
    BREAK   shift, and go to state 126
    CONT    shift, and go to state 127
    RETURN  shift, and go to state 128
    SEMI    shift, and go to state 129
    NUMBER  shift, and go to state 30

    IDENT     [reduce using rule 78 (BlockItem)]
    LPAREN    [reduce using rule 78 (BlockItem)]
    LCURLY    [reduce using rule 78 (BlockItem)]
    INT       [reduce using rule 78 (BlockItem)]
    CONST     [reduce using rule 78 (BlockItem)]
    IF        [reduce using rule 78 (BlockItem)]
    WHILE     [reduce using rule 78 (BlockItem)]
    BREAK     [reduce using rule 78 (BlockItem)]
    CONT      [reduce using rule 78 (BlockItem)]
    RETURN    [reduce using rule 78 (BlockItem)]
    SEMI      [reduce using rule 78 (BlockItem)]
    NUMBER    [reduce using rule 78 (BlockItem)]
    $default  reduce using rule 78 (BlockItem)

    Decl        go to state 130
    ConstDecl   go to state 131
    VarDecl     go to state 132
    Exp         go to state 133
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 134
    Block       go to state 135
    BlockItems  go to state 136
    BlockItem   go to state 137
    Stmt        go to state 138


State 120

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 15 (ConstDef)


State 121

   34 ArrayExp: LCURLY $@6 ArrayInit RCURLY .

    $default  reduce using rule 34 (ArrayExp)


State 122

   72 ArrayParamDef: ArrayParamDef ArrayUnit .

    $default  reduce using rule 72 (ArrayParamDef)


State 123

   18 VarDecl: INT . VarDefs SEMI

    IDENT  shift, and go to state 41

    VarDefs  go to state 11
    VarDef   go to state 12


State 124

   91 Stmt: IF . $@16 LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else

    $default  reduce using rule 88 ($@16)

    $@16  go to state 139


State 125

   94 Stmt: WHILE . $@19 LPAREN Cond RPAREN $@20 Stmt

    $default  reduce using rule 92 ($@19)

    $@19  go to state 140


State 126

   95 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 141


State 127

   96 Stmt: CONT . SEMI

    SEMI  shift, and go to state 142


State 128

   81 Stmt: RETURN . SEMI
   82     | RETURN . Exp SEMI

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    SEMI    shift, and go to state 143
    NUMBER  shift, and go to state 30

    Exp         go to state 144
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 129

   84 Stmt: SEMI .

    $default  reduce using rule 84 (Stmt)


State 130

   79 BlockItem: Decl .

    $default  reduce using rule 79 (BlockItem)


State 131

    7 Decl: ConstDecl .

    $default  reduce using rule 7 (Decl)


State 132

    8 Decl: VarDecl .

    $default  reduce using rule 8 (Decl)


State 133

   83 Stmt: Exp . SEMI

    SEMI  shift, and go to state 145


State 134

   50 PrimaryExp: LVal .
   87 Stmt: LVal . $@15 ASSIGN Exp SEMI

    ASSIGN    reduce using rule 86 ($@15)
    $default  reduce using rule 50 (PrimaryExp)

    $@15  go to state 146


State 135

   85 Stmt: Block .

    $default  reduce using rule 85 (Stmt)


State 136

   75 Block: LCURLY $@14 BlockItems . RCURLY
   77 BlockItems: BlockItems . BlockItem

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 111
    RCURLY  shift, and go to state 147
    INT     shift, and go to state 123
    CONST   shift, and go to state 2
    IF      shift, and go to state 124
    WHILE   shift, and go to state 125
    BREAK   shift, and go to state 126
    CONT    shift, and go to state 127
    RETURN  shift, and go to state 128
    SEMI    shift, and go to state 129
    NUMBER  shift, and go to state 30

    IDENT   [reduce using rule 78 (BlockItem)]
    LPAREN  [reduce using rule 78 (BlockItem)]
    LCURLY  [reduce using rule 78 (BlockItem)]
    RCURLY  [reduce using rule 78 (BlockItem)]
    INT     [reduce using rule 78 (BlockItem)]
    CONST   [reduce using rule 78 (BlockItem)]
    IF      [reduce using rule 78 (BlockItem)]
    WHILE   [reduce using rule 78 (BlockItem)]
    BREAK   [reduce using rule 78 (BlockItem)]
    CONT    [reduce using rule 78 (BlockItem)]
    RETURN  [reduce using rule 78 (BlockItem)]
    SEMI    [reduce using rule 78 (BlockItem)]
    NUMBER  [reduce using rule 78 (BlockItem)]

    Decl        go to state 130
    ConstDecl   go to state 131
    VarDecl     go to state 132
    Exp         go to state 133
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 134
    Block       go to state 135
    BlockItem   go to state 148
    Stmt        go to state 138


State 137

   76 BlockItems: BlockItem .

    $default  reduce using rule 76 (BlockItems)


State 138

   80 BlockItem: Stmt .

    $default  reduce using rule 80 (BlockItem)


State 139

   91 Stmt: IF $@16 . LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else

    LPAREN  shift, and go to state 149


State 140

   94 Stmt: WHILE $@19 . LPAREN Cond RPAREN $@20 Stmt

    LPAREN  shift, and go to state 150


State 141

   95 Stmt: BREAK SEMI .

    $default  reduce using rule 95 (Stmt)


State 142

   96 Stmt: CONT SEMI .

    $default  reduce using rule 96 (Stmt)


State 143

   81 Stmt: RETURN SEMI .

    $default  reduce using rule 81 (Stmt)


State 144

   82 Stmt: RETURN Exp . SEMI

    SEMI  shift, and go to state 151


State 145

   83 Stmt: Exp SEMI .

    $default  reduce using rule 83 (Stmt)


State 146

   87 Stmt: LVal $@15 . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 152


State 147

   75 Block: LCURLY $@14 BlockItems RCURLY .

    $default  reduce using rule 75 (Block)


State 148

   77 BlockItems: BlockItems BlockItem .

    $default  reduce using rule 77 (BlockItems)


State 149

   91 Stmt: IF $@16 LPAREN . Cond RPAREN $@17 Stmt $@18 IF_Else

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 153
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    Cond        go to state 154
    LOrExp      go to state 155
    LAndExp     go to state 156
    EqExp       go to state 157
    RelExp      go to state 158


State 150

   94 Stmt: WHILE $@19 LPAREN . Cond RPAREN $@20 Stmt

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 153
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    Cond        go to state 159
    LOrExp      go to state 155
    LAndExp     go to state 156
    EqExp       go to state 157
    RelExp      go to state 158


State 151

   82 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 82 (Stmt)


State 152

   87 Stmt: LVal $@15 ASSIGN . Exp SEMI

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    Exp         go to state 160
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 153

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  107 RelExp: AddExp .

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 107 (RelExp)


State 154

   91 Stmt: IF $@16 LPAREN Cond . RPAREN $@17 Stmt $@18 IF_Else

    RPAREN  shift, and go to state 161


State 155

   99 Cond: LOrExp .
  101 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 162

    $default  reduce using rule 99 (Cond)


State 156

  100 LOrExp: LAndExp .
  103 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 163

    $default  reduce using rule 100 (LOrExp)


State 157

  102 LAndExp: EqExp .
  105 EqExp: EqExp . EQ RelExp
  106      | EqExp . NEQ RelExp

    EQ   shift, and go to state 164
    NEQ  shift, and go to state 165

    $default  reduce using rule 102 (LAndExp)


State 158

  104 EqExp: RelExp .
  108 RelExp: RelExp . LE AddExp
  109       | RelExp . GE AddExp
  110       | RelExp . LEQ AddExp
  111       | RelExp . GEQ AddExp

    LE   shift, and go to state 166
    LEQ  shift, and go to state 167
    GE   shift, and go to state 168
    GEQ  shift, and go to state 169

    $default  reduce using rule 104 (EqExp)


State 159

   94 Stmt: WHILE $@19 LPAREN Cond . RPAREN $@20 Stmt

    RPAREN  shift, and go to state 170


State 160

   87 Stmt: LVal $@15 ASSIGN Exp . SEMI

    SEMI  shift, and go to state 171


State 161

   91 Stmt: IF $@16 LPAREN Cond RPAREN . $@17 Stmt $@18 IF_Else

    $default  reduce using rule 89 ($@17)

    $@17  go to state 172


State 162

  101 LOrExp: LOrExp OR . LAndExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 153
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    LAndExp     go to state 173
    EqExp       go to state 157
    RelExp      go to state 158


State 163

  103 LAndExp: LAndExp AND . EqExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 153
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    EqExp       go to state 174
    RelExp      go to state 158


State 164

  105 EqExp: EqExp EQ . RelExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 153
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    RelExp      go to state 175


State 165

  106 EqExp: EqExp NEQ . RelExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 153
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    RelExp      go to state 176


State 166

  108 RelExp: RelExp LE . AddExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 177
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 167

  110 RelExp: RelExp LEQ . AddExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 178
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 168

  109 RelExp: RelExp GE . AddExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 179
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 169

  111 RelExp: RelExp GEQ . AddExp

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 180
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 170

   94 Stmt: WHILE $@19 LPAREN Cond RPAREN . $@20 Stmt

    $default  reduce using rule 93 ($@20)

    $@20  go to state 181


State 171

   87 Stmt: LVal $@15 ASSIGN Exp SEMI .

    $default  reduce using rule 87 (Stmt)


State 172

   91 Stmt: IF $@16 LPAREN Cond RPAREN $@17 . Stmt $@18 IF_Else

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 111
    IF      shift, and go to state 124
    WHILE   shift, and go to state 125
    BREAK   shift, and go to state 126
    CONT    shift, and go to state 127
    RETURN  shift, and go to state 128
    SEMI    shift, and go to state 129
    NUMBER  shift, and go to state 30

    Exp         go to state 133
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 134
    Block       go to state 135
    Stmt        go to state 182


State 173

  101 LOrExp: LOrExp OR LAndExp .
  103 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 163

    $default  reduce using rule 101 (LOrExp)


State 174

  103 LAndExp: LAndExp AND EqExp .
  105 EqExp: EqExp . EQ RelExp
  106      | EqExp . NEQ RelExp

    EQ   shift, and go to state 164
    NEQ  shift, and go to state 165

    $default  reduce using rule 103 (LAndExp)


State 175

  105 EqExp: EqExp EQ RelExp .
  108 RelExp: RelExp . LE AddExp
  109       | RelExp . GE AddExp
  110       | RelExp . LEQ AddExp
  111       | RelExp . GEQ AddExp

    LE   shift, and go to state 166
    LEQ  shift, and go to state 167
    GE   shift, and go to state 168
    GEQ  shift, and go to state 169

    $default  reduce using rule 105 (EqExp)


State 176

  106 EqExp: EqExp NEQ RelExp .
  108 RelExp: RelExp . LE AddExp
  109       | RelExp . GE AddExp
  110       | RelExp . LEQ AddExp
  111       | RelExp . GEQ AddExp

    LE   shift, and go to state 166
    LEQ  shift, and go to state 167
    GE   shift, and go to state 168
    GEQ  shift, and go to state 169

    $default  reduce using rule 106 (EqExp)


State 177

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  108 RelExp: RelExp LE AddExp .

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 108 (RelExp)


State 178

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  110 RelExp: RelExp LEQ AddExp .

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 110 (RelExp)


State 179

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  109 RelExp: RelExp GE AddExp .

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 109 (RelExp)


State 180

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  111 RelExp: RelExp GEQ AddExp .

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 111 (RelExp)


State 181

   94 Stmt: WHILE $@19 LPAREN Cond RPAREN $@20 . Stmt

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 111
    IF      shift, and go to state 124
    WHILE   shift, and go to state 125
    BREAK   shift, and go to state 126
    CONT    shift, and go to state 127
    RETURN  shift, and go to state 128
    SEMI    shift, and go to state 129
    NUMBER  shift, and go to state 30

    Exp         go to state 133
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 134
    Block       go to state 135
    Stmt        go to state 183


State 182

   91 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt . $@18 IF_Else

    $default  reduce using rule 90 ($@18)

    $@18  go to state 184


State 183

   94 Stmt: WHILE $@19 LPAREN Cond RPAREN $@20 Stmt .

    $default  reduce using rule 94 (Stmt)


State 184

   91 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt $@18 . IF_Else

    ELSE  shift, and go to state 185

    ELSE      [reduce using rule 97 (IF_Else)]
    $default  reduce using rule 97 (IF_Else)

    IF_Else  go to state 186


State 185

   98 IF_Else: ELSE . Stmt

    IDENT   shift, and go to state 28
    LPAREN  shift, and go to state 29
    LCURLY  shift, and go to state 111
    IF      shift, and go to state 124
    WHILE   shift, and go to state 125
    BREAK   shift, and go to state 126
    CONT    shift, and go to state 127
    RETURN  shift, and go to state 128
    SEMI    shift, and go to state 129
    NUMBER  shift, and go to state 30

    Exp         go to state 133
    AddExp      go to state 51
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 134
    Block       go to state 135
    Stmt        go to state 187


State 186

   91 Stmt: IF $@16 LPAREN Cond RPAREN $@17 Stmt $@18 IF_Else .

    $default  reduce using rule 91 (Stmt)


State 187

   98 IF_Else: ELSE Stmt .

    $default  reduce using rule 98 (IF_Else)
