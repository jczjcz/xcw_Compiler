Terminals unused in grammar

   PERIOD


State 124 conflicts: 1 shift/reduce
State 125 conflicts: 15 shift/reduce
State 143 conflicts: 16 shift/reduce
State 194 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompDecl
    2         | CompUnit CompDecl

    3 CompDecl: DeclOutFunc
    4         | FuncDef

    5 DeclOutFunc: ConstDecl
    6            | VarDecl

    7 Decl: ConstDecl
    8     | VarDecl

    9 ConstDecl: CONST INT ConstDefs SEMI

   10 ConstDefs: ConstDef
   11          | ConstDefs COMMA ConstDef

   12 ConstDef: IDENT ASSIGN ConstInitVal

   13 $@1: %empty

   14 $@2: %empty

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   16 ConstInitVal: ConstExp

   17 ConstExp: AddExp

   18 VarDecl: INT VarDefs SEMI

   19 VarDefs: VarDef
   20        | VarDefs COMMA VarDef

   21 VarDef: IDENT

   22 $@3: %empty

   23 VarDef: IDENT ASSIGN $@3 InitVal
   24       | IDENT ArrayDef

   25 $@4: %empty

   26 $@5: %empty

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY

   28 ArrayInit: %empty
   29          | ArrayExps

   30 ArrayExps: ArrayExp
   31          | ArrayExps COMMA ArrayExp

   32 ArrayExp: Exp

   33 $@6: %empty

   34 ArrayExp: LCURLY $@6 ArrayInit RCURLY

   35 ArrayDef: ArrayUnit
   36         | ArrayDef ArrayUnit

   37 ArrayUnit: LBRAC ConstExp RBRAC

   38 InitVal: Exp

   39 Exp: AddExp

   40 AddExp: MulExp
   41       | AddExp ADD MulExp
   42       | AddExp SUB MulExp

   43 MulExp: UnaryExp
   44       | MulExp MUL UnaryExp
   45       | MulExp DIV UnaryExp
   46       | MulExp MOD UnaryExp

   47 UnaryExp: PrimaryExp

   48 $@7: %empty

   49 UnaryExp: IDENT LPAREN $@7 FuncRParams RPAREN
   50         | ADD UnaryExp
   51         | SUB UnaryExp
   52         | NOT UnaryExp

   53 PrimaryExp: NUMBER
   54           | LVal
   55           | LPAREN Exp RPAREN

   56 LVal: IDENT

   57 $@8: %empty

   58 LVal: IDENT $@8 ArrayLVals

   59 ArrayLVals: ArrayLVal
   60           | ArrayLVals ArrayLVal

   61 $@9: %empty

   62 ArrayLVal: LBRAC $@9 Exp RBRAC

   63 $@10: %empty

   64 $@11: %empty

   65 $@12: %empty

   66 FuncDef: INT IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

   67 $@13: %empty

   68 $@14: %empty

   69 $@15: %empty

   70 FuncDef: VOID IDENT $@13 LPAREN $@14 FuncFParams RPAREN $@15 Block

   71 FuncFParams: %empty
   72            | FuncFParam
   73            | FuncFParams COMMA FuncFParam

   74 FuncFParam: INT IDENT

   75 $@16: %empty

   76 FuncFParam: INT IDENT LBRAC $@16 RBRAC ArrayParamDef

   77 ArrayParamDef: ArrayUnit
   78              | ArrayParamDef ArrayUnit
   79              | %empty

   80 $@17: %empty

   81 Block: LCURLY $@17 BlockItems RCURLY

   82 BlockItems: BlockItem
   83           | BlockItems BlockItem

   84 BlockItem: %empty
   85          | Decl
   86          | Stmt

   87 Stmt: RETURN SEMI

   88 $@18: %empty

   89 Stmt: RETURN $@18 Exp SEMI
   90     | Exp SEMI
   91     | SEMI
   92     | Block

   93 $@19: %empty

   94 Stmt: LVal $@19 ASSIGN Exp SEMI

   95 $@20: %empty

   96 $@21: %empty

   97 $@22: %empty

   98 Stmt: IF $@20 LPAREN Cond RPAREN $@21 Stmt $@22 IF_Else

   99 $@23: %empty

  100 $@24: %empty

  101 Stmt: WHILE $@23 LPAREN Cond RPAREN $@24 Stmt
  102     | BREAK SEMI
  103     | CONT SEMI

  104 IF_Else: %empty
  105        | ELSE Stmt

  106 $@25: %empty

  107 Cond: $@25 LOrExp

  108 LOrExp: LAndExp

  109 $@26: %empty

  110 LOrExp: LOrExp OR $@26 LAndExp

  111 LAndExp: EqExp

  112 $@27: %empty

  113 LAndExp: LAndExp AND $@27 EqExp

  114 EqExp: RelExp
  115      | EqExp EQ RelExp
  116      | EqExp NEQ RelExp

  117 RelExp: AddExp
  118       | RelExp LE AddExp
  119       | RelExp GE AddExp
  120       | RelExp LEQ AddExp
  121       | RelExp GEQ AddExp

  122 FuncRParams: %empty
  123            | Exp
  124            | FuncRParams COMMA Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 41 50
SUB (259) 42 51
MUL (260) 44
DIV (261) 45
MOD (262) 46
IDENT (263) 12 15 21 23 24 27 49 56 58 66 70 74 76
LPAREN (264) 49 55 66 70 98 101
RPAREN (265) 49 55 66 70 98 101
LCURLY (266) 15 27 34 81
RCURLY (267) 15 27 34 81
LBRAC (268) 37 62 76
RBRAC (269) 37 62 76
INT (270) 9 18 66 74 76
CONST (271) 9
VOID (272) 70
LE (273) 118
LEQ (274) 120
GE (275) 119
GEQ (276) 121
EQ (277) 115
NEQ (278) 116
AND (279) 113
OR (280) 110
NOT (281) 52
IF (282) 98
ELSE (283) 105
WHILE (284) 101
BREAK (285) 102
CONT (286) 103
RETURN (287) 87 89
ASSIGN (288) 12 15 23 27 94
SEMI (289) 9 18 87 89 90 91 94 102 103
COMMA (290) 11 20 31 73 124
PERIOD (291)
NUMBER (292) 53


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
CompDecl (40)
    on left: 3 4, on right: 1 2
DeclOutFunc (41)
    on left: 5 6, on right: 3
Decl (42)
    on left: 7 8, on right: 85
ConstDecl (43)
    on left: 9, on right: 5 7
ConstDefs (44)
    on left: 10 11, on right: 9 11
ConstDef (45)
    on left: 12 15, on right: 10 11
$@1 (46)
    on left: 13, on right: 15
$@2 (47)
    on left: 14, on right: 15
ConstInitVal (48)
    on left: 16, on right: 12
ConstExp (49)
    on left: 17, on right: 16 37
VarDecl (50)
    on left: 18, on right: 6 8
VarDefs (51)
    on left: 19 20, on right: 18 20
VarDef (52)
    on left: 21 23 24 27, on right: 19 20
$@3 (53)
    on left: 22, on right: 23
$@4 (54)
    on left: 25, on right: 27
$@5 (55)
    on left: 26, on right: 27
ArrayInit (56)
    on left: 28 29, on right: 15 27 34
ArrayExps (57)
    on left: 30 31, on right: 29 31
ArrayExp (58)
    on left: 32 34, on right: 30 31
$@6 (59)
    on left: 33, on right: 34
ArrayDef (60)
    on left: 35 36, on right: 15 24 27 36
ArrayUnit (61)
    on left: 37, on right: 35 36 77 78
InitVal (62)
    on left: 38, on right: 23
Exp (63)
    on left: 39, on right: 32 38 55 62 89 90 94 123 124
AddExp (64)
    on left: 40 41 42, on right: 17 39 41 42 117 118 119 120 121
MulExp (65)
    on left: 43 44 45 46, on right: 40 41 42 44 45 46
UnaryExp (66)
    on left: 47 49 50 51 52, on right: 43 44 45 46 50 51 52
$@7 (67)
    on left: 48, on right: 49
PrimaryExp (68)
    on left: 53 54 55, on right: 47
LVal (69)
    on left: 56 58, on right: 54 94
$@8 (70)
    on left: 57, on right: 58
ArrayLVals (71)
    on left: 59 60, on right: 58 60
ArrayLVal (72)
    on left: 62, on right: 59 60
$@9 (73)
    on left: 61, on right: 62
FuncDef (74)
    on left: 66 70, on right: 4
$@10 (75)
    on left: 63, on right: 66
$@11 (76)
    on left: 64, on right: 66
$@12 (77)
    on left: 65, on right: 66
$@13 (78)
    on left: 67, on right: 70
$@14 (79)
    on left: 68, on right: 70
$@15 (80)
    on left: 69, on right: 70
FuncFParams (81)
    on left: 71 72 73, on right: 66 70 73
FuncFParam (82)
    on left: 74 76, on right: 72 73
$@16 (83)
    on left: 75, on right: 76
ArrayParamDef (84)
    on left: 77 78 79, on right: 76 78
Block (85)
    on left: 81, on right: 66 70 92
$@17 (86)
    on left: 80, on right: 81
BlockItems (87)
    on left: 82 83, on right: 81 83
BlockItem (88)
    on left: 84 85 86, on right: 82 83
Stmt (89)
    on left: 87 89 90 91 92 94 98 101 102 103, on right: 86 98 101
    105
$@18 (90)
    on left: 88, on right: 89
$@19 (91)
    on left: 93, on right: 94
$@20 (92)
    on left: 95, on right: 98
$@21 (93)
    on left: 96, on right: 98
$@22 (94)
    on left: 97, on right: 98
$@23 (95)
    on left: 99, on right: 101
$@24 (96)
    on left: 100, on right: 101
IF_Else (97)
    on left: 104 105, on right: 98
Cond (98)
    on left: 107, on right: 98 101
$@25 (99)
    on left: 106, on right: 107
LOrExp (100)
    on left: 108 110, on right: 107 110
$@26 (101)
    on left: 109, on right: 110
LAndExp (102)
    on left: 111 113, on right: 108 110 113
$@27 (103)
    on left: 112, on right: 113
EqExp (104)
    on left: 114 115 116, on right: 111 113 115 116
RelExp (105)
    on left: 117 118 119 120 121, on right: 114 115 116 118 119 120
    121
FuncRParams (106)
    on left: 122 123 124, on right: 49 124


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit     go to state 4
    CompDecl     go to state 5
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 1

   18 VarDecl: INT . VarDefs SEMI
   66 FuncDef: INT . IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    IDENT  shift, and go to state 10

    VarDefs  go to state 11
    VarDef   go to state 12


State 2

    9 ConstDecl: CONST . INT ConstDefs SEMI

    INT  shift, and go to state 13


State 3

   70 FuncDef: VOID . IDENT $@13 LPAREN $@14 FuncFParams RPAREN $@15 Block

    IDENT  shift, and go to state 14


State 4

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . CompDecl

    $end   shift, and go to state 15
    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompDecl     go to state 16
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 5

    1 CompUnit: CompDecl .

    $default  reduce using rule 1 (CompUnit)


State 6

    3 CompDecl: DeclOutFunc .

    $default  reduce using rule 3 (CompDecl)


State 7

    5 DeclOutFunc: ConstDecl .

    $default  reduce using rule 5 (DeclOutFunc)


State 8

    6 DeclOutFunc: VarDecl .

    $default  reduce using rule 6 (DeclOutFunc)


State 9

    4 CompDecl: FuncDef .

    $default  reduce using rule 4 (CompDecl)


State 10

   21 VarDef: IDENT .
   23       | IDENT . ASSIGN $@3 InitVal
   24       | IDENT . ArrayDef
   27       | IDENT . ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY
   66 FuncDef: INT IDENT . $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    LPAREN    reduce using rule 63 ($@10)
    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20
    $@10       go to state 21


State 11

   18 VarDecl: INT VarDefs . SEMI
   20 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 12

   19 VarDefs: VarDef .

    $default  reduce using rule 19 (VarDefs)


State 13

    9 ConstDecl: CONST INT . ConstDefs SEMI

    IDENT  shift, and go to state 24

    ConstDefs  go to state 25
    ConstDef   go to state 26


State 14

   70 FuncDef: VOID IDENT . $@13 LPAREN $@14 FuncFParams RPAREN $@15 Block

    $default  reduce using rule 67 ($@13)

    $@13  go to state 27


State 15

    0 $accept: CompUnit $end .

    $default  accept


State 16

    2 CompUnit: CompUnit CompDecl .

    $default  reduce using rule 2 (CompUnit)


State 17

   37 ArrayUnit: LBRAC . ConstExp RBRAC

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    ConstExp    go to state 34
    AddExp      go to state 35
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 18

   23 VarDef: IDENT ASSIGN . $@3 InitVal

    $default  reduce using rule 22 ($@3)

    $@3  go to state 40


State 19

   24 VarDef: IDENT ArrayDef .
   27       | IDENT ArrayDef . ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY
   36 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 41

    $default  reduce using rule 24 (VarDef)

    ArrayUnit  go to state 42


State 20

   35 ArrayDef: ArrayUnit .

    $default  reduce using rule 35 (ArrayDef)


State 21

   66 FuncDef: INT IDENT $@10 . LPAREN $@11 FuncFParams RPAREN $@12 Block

    LPAREN  shift, and go to state 43


State 22

   18 VarDecl: INT VarDefs SEMI .

    $default  reduce using rule 18 (VarDecl)


State 23

   20 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 44

    VarDef  go to state 45


State 24

   12 ConstDef: IDENT . ASSIGN ConstInitVal
   15         | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 46

    ArrayDef   go to state 47
    ArrayUnit  go to state 20


State 25

    9 ConstDecl: CONST INT ConstDefs . SEMI
   11 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 48
    COMMA  shift, and go to state 49


State 26

   10 ConstDefs: ConstDef .

    $default  reduce using rule 10 (ConstDefs)


State 27

   70 FuncDef: VOID IDENT $@13 . LPAREN $@14 FuncFParams RPAREN $@15 Block

    LPAREN  shift, and go to state 50


State 28

   50 UnaryExp: ADD . UnaryExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    UnaryExp    go to state 51
    PrimaryExp  go to state 38
    LVal        go to state 39


State 29

   51 UnaryExp: SUB . UnaryExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    UnaryExp    go to state 52
    PrimaryExp  go to state 38
    LVal        go to state 39


State 30

   49 UnaryExp: IDENT . LPAREN $@7 FuncRParams RPAREN
   56 LVal: IDENT .
   58     | IDENT . $@8 ArrayLVals

    LPAREN  shift, and go to state 53

    LBRAC     reduce using rule 57 ($@8)
    $default  reduce using rule 56 (LVal)

    $@8  go to state 54


State 31

   55 PrimaryExp: LPAREN . Exp RPAREN

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    Exp         go to state 55
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 32

   52 UnaryExp: NOT . UnaryExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    UnaryExp    go to state 57
    PrimaryExp  go to state 38
    LVal        go to state 39


State 33

   53 PrimaryExp: NUMBER .

    $default  reduce using rule 53 (PrimaryExp)


State 34

   37 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 58


State 35

   17 ConstExp: AddExp .
   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 17 (ConstExp)


State 36

   40 AddExp: MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 40 (AddExp)


State 37

   43 MulExp: UnaryExp .

    $default  reduce using rule 43 (MulExp)


State 38

   47 UnaryExp: PrimaryExp .

    $default  reduce using rule 47 (UnaryExp)


State 39

   54 PrimaryExp: LVal .

    $default  reduce using rule 54 (PrimaryExp)


State 40

   23 VarDef: IDENT ASSIGN $@3 . InitVal

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    InitVal     go to state 64
    Exp         go to state 65
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 41

   27 VarDef: IDENT ArrayDef ASSIGN . $@4 LCURLY $@5 ArrayInit RCURLY

    $default  reduce using rule 25 ($@4)

    $@4  go to state 66


State 42

   36 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 36 (ArrayDef)


State 43

   66 FuncDef: INT IDENT $@10 LPAREN . $@11 FuncFParams RPAREN $@12 Block

    $default  reduce using rule 64 ($@11)

    $@11  go to state 67


State 44

   21 VarDef: IDENT .
   23       | IDENT . ASSIGN $@3 InitVal
   24       | IDENT . ArrayDef
   27       | IDENT . ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20


State 45

   20 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 20 (VarDefs)


State 46

   12 ConstDef: IDENT ASSIGN . ConstInitVal

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    ConstInitVal  go to state 68
    ConstExp      go to state 69
    AddExp        go to state 35
    MulExp        go to state 36
    UnaryExp      go to state 37
    PrimaryExp    go to state 38
    LVal          go to state 39


State 47

   15 ConstDef: IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   36 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 70

    ArrayUnit  go to state 42


State 48

    9 ConstDecl: CONST INT ConstDefs SEMI .

    $default  reduce using rule 9 (ConstDecl)


State 49

   11 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 24

    ConstDef  go to state 71


State 50

   70 FuncDef: VOID IDENT $@13 LPAREN . $@14 FuncFParams RPAREN $@15 Block

    $default  reduce using rule 68 ($@14)

    $@14  go to state 72


State 51

   50 UnaryExp: ADD UnaryExp .

    $default  reduce using rule 50 (UnaryExp)


State 52

   51 UnaryExp: SUB UnaryExp .

    $default  reduce using rule 51 (UnaryExp)


State 53

   49 UnaryExp: IDENT LPAREN . $@7 FuncRParams RPAREN

    $default  reduce using rule 48 ($@7)

    $@7  go to state 73


State 54

   58 LVal: IDENT $@8 . ArrayLVals

    LBRAC  shift, and go to state 74

    ArrayLVals  go to state 75
    ArrayLVal   go to state 76


State 55

   55 PrimaryExp: LPAREN Exp . RPAREN

    RPAREN  shift, and go to state 77


State 56

   39 Exp: AddExp .
   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 39 (Exp)


State 57

   52 UnaryExp: NOT UnaryExp .

    $default  reduce using rule 52 (UnaryExp)


State 58

   37 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 37 (ArrayUnit)


State 59

   41 AddExp: AddExp ADD . MulExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    MulExp      go to state 78
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 60

   42 AddExp: AddExp SUB . MulExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    MulExp      go to state 79
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 61

   44 MulExp: MulExp MUL . UnaryExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    UnaryExp    go to state 80
    PrimaryExp  go to state 38
    LVal        go to state 39


State 62

   45 MulExp: MulExp DIV . UnaryExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    UnaryExp    go to state 81
    PrimaryExp  go to state 38
    LVal        go to state 39


State 63

   46 MulExp: MulExp MOD . UnaryExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    UnaryExp    go to state 82
    PrimaryExp  go to state 38
    LVal        go to state 39


State 64

   23 VarDef: IDENT ASSIGN $@3 InitVal .

    $default  reduce using rule 23 (VarDef)


State 65

   38 InitVal: Exp .

    $default  reduce using rule 38 (InitVal)


State 66

   27 VarDef: IDENT ArrayDef ASSIGN $@4 . LCURLY $@5 ArrayInit RCURLY

    LCURLY  shift, and go to state 83


State 67

   66 FuncDef: INT IDENT $@10 LPAREN $@11 . FuncFParams RPAREN $@12 Block

    INT  shift, and go to state 84

    $default  reduce using rule 71 (FuncFParams)

    FuncFParams  go to state 85
    FuncFParam   go to state 86


State 68

   12 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 12 (ConstDef)


State 69

   16 ConstInitVal: ConstExp .

    $default  reduce using rule 16 (ConstInitVal)


State 70

   15 ConstDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 13 ($@1)

    $@1  go to state 87


State 71

   11 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 11 (ConstDefs)


State 72

   70 FuncDef: VOID IDENT $@13 LPAREN $@14 . FuncFParams RPAREN $@15 Block

    INT  shift, and go to state 84

    $default  reduce using rule 71 (FuncFParams)

    FuncFParams  go to state 88
    FuncFParam   go to state 86


State 73

   49 UnaryExp: IDENT LPAREN $@7 . FuncRParams RPAREN

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    $default  reduce using rule 122 (FuncRParams)

    Exp          go to state 89
    AddExp       go to state 56
    MulExp       go to state 36
    UnaryExp     go to state 37
    PrimaryExp   go to state 38
    LVal         go to state 39
    FuncRParams  go to state 90


State 74

   62 ArrayLVal: LBRAC . $@9 Exp RBRAC

    $default  reduce using rule 61 ($@9)

    $@9  go to state 91


State 75

   58 LVal: IDENT $@8 ArrayLVals .
   60 ArrayLVals: ArrayLVals . ArrayLVal

    LBRAC  shift, and go to state 74

    $default  reduce using rule 58 (LVal)

    ArrayLVal  go to state 92


State 76

   59 ArrayLVals: ArrayLVal .

    $default  reduce using rule 59 (ArrayLVals)


State 77

   55 PrimaryExp: LPAREN Exp RPAREN .

    $default  reduce using rule 55 (PrimaryExp)


State 78

   41 AddExp: AddExp ADD MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 41 (AddExp)


State 79

   42 AddExp: AddExp SUB MulExp .
   44 MulExp: MulExp . MUL UnaryExp
   45       | MulExp . DIV UnaryExp
   46       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 42 (AddExp)


State 80

   44 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 44 (MulExp)


State 81

   45 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 45 (MulExp)


State 82

   46 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 46 (MulExp)


State 83

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY . $@5 ArrayInit RCURLY

    $default  reduce using rule 26 ($@5)

    $@5  go to state 93


State 84

   74 FuncFParam: INT . IDENT
   76           | INT . IDENT LBRAC $@16 RBRAC ArrayParamDef

    IDENT  shift, and go to state 94


State 85

   66 FuncDef: INT IDENT $@10 LPAREN $@11 FuncFParams . RPAREN $@12 Block
   73 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 95
    COMMA   shift, and go to state 96


State 86

   72 FuncFParams: FuncFParam .

    $default  reduce using rule 72 (FuncFParams)


State 87

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 97


State 88

   70 FuncDef: VOID IDENT $@13 LPAREN $@14 FuncFParams . RPAREN $@15 Block
   73 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 98
    COMMA   shift, and go to state 96


State 89

  123 FuncRParams: Exp .

    $default  reduce using rule 123 (FuncRParams)


State 90

   49 UnaryExp: IDENT LPAREN $@7 FuncRParams . RPAREN
  124 FuncRParams: FuncRParams . COMMA Exp

    RPAREN  shift, and go to state 99
    COMMA   shift, and go to state 100


State 91

   62 ArrayLVal: LBRAC $@9 . Exp RBRAC

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    Exp         go to state 101
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 92

   60 ArrayLVals: ArrayLVals ArrayLVal .

    $default  reduce using rule 60 (ArrayLVals)


State 93

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 . ArrayInit RCURLY

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 102
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 103
    ArrayExps   go to state 104
    ArrayExp    go to state 105
    Exp         go to state 106
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 94

   74 FuncFParam: INT IDENT .
   76           | INT IDENT . LBRAC $@16 RBRAC ArrayParamDef

    LBRAC  shift, and go to state 107

    $default  reduce using rule 74 (FuncFParam)


State 95

   66 FuncDef: INT IDENT $@10 LPAREN $@11 FuncFParams RPAREN . $@12 Block

    $default  reduce using rule 65 ($@12)

    $@12  go to state 108


State 96

   73 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 84

    FuncFParam  go to state 109


State 97

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 14 ($@2)

    $@2  go to state 110


State 98

   70 FuncDef: VOID IDENT $@13 LPAREN $@14 FuncFParams RPAREN . $@15 Block

    $default  reduce using rule 69 ($@15)

    $@15  go to state 111


State 99

   49 UnaryExp: IDENT LPAREN $@7 FuncRParams RPAREN .

    $default  reduce using rule 49 (UnaryExp)


State 100

  124 FuncRParams: FuncRParams COMMA . Exp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    Exp         go to state 112
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 101

   62 ArrayLVal: LBRAC $@9 Exp . RBRAC

    RBRAC  shift, and go to state 113


State 102

   34 ArrayExp: LCURLY . $@6 ArrayInit RCURLY

    $default  reduce using rule 33 ($@6)

    $@6  go to state 114


State 103

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit . RCURLY

    RCURLY  shift, and go to state 115


State 104

   29 ArrayInit: ArrayExps .
   31 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 116

    $default  reduce using rule 29 (ArrayInit)


State 105

   30 ArrayExps: ArrayExp .

    $default  reduce using rule 30 (ArrayExps)


State 106

   32 ArrayExp: Exp .

    $default  reduce using rule 32 (ArrayExp)


State 107

   76 FuncFParam: INT IDENT LBRAC . $@16 RBRAC ArrayParamDef

    $default  reduce using rule 75 ($@16)

    $@16  go to state 117


State 108

   66 FuncDef: INT IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 . Block

    LCURLY  shift, and go to state 118

    Block  go to state 119


State 109

   73 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 73 (FuncFParams)


State 110

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 102
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 120
    ArrayExps   go to state 104
    ArrayExp    go to state 105
    Exp         go to state 106
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 111

   70 FuncDef: VOID IDENT $@13 LPAREN $@14 FuncFParams RPAREN $@15 . Block

    LCURLY  shift, and go to state 118

    Block  go to state 121


State 112

  124 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 124 (FuncRParams)


State 113

   62 ArrayLVal: LBRAC $@9 Exp RBRAC .

    $default  reduce using rule 62 (ArrayLVal)


State 114

   34 ArrayExp: LCURLY $@6 . ArrayInit RCURLY

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 102
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    $default  reduce using rule 28 (ArrayInit)

    ArrayInit   go to state 122
    ArrayExps   go to state 104
    ArrayExp    go to state 105
    Exp         go to state 106
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 115

   27 VarDef: IDENT ArrayDef ASSIGN $@4 LCURLY $@5 ArrayInit RCURLY .

    $default  reduce using rule 27 (VarDef)


State 116

   31 ArrayExps: ArrayExps COMMA . ArrayExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 102
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    ArrayExp    go to state 123
    Exp         go to state 106
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 117

   76 FuncFParam: INT IDENT LBRAC $@16 . RBRAC ArrayParamDef

    RBRAC  shift, and go to state 124


State 118

   81 Block: LCURLY . $@17 BlockItems RCURLY

    $default  reduce using rule 80 ($@17)

    $@17  go to state 125


State 119

   66 FuncDef: INT IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block .

    $default  reduce using rule 66 (FuncDef)


State 120

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 126


State 121

   70 FuncDef: VOID IDENT $@13 LPAREN $@14 FuncFParams RPAREN $@15 Block .

    $default  reduce using rule 70 (FuncDef)


State 122

   34 ArrayExp: LCURLY $@6 ArrayInit . RCURLY

    RCURLY  shift, and go to state 127


State 123

   31 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 31 (ArrayExps)


State 124

   76 FuncFParam: INT IDENT LBRAC $@16 RBRAC . ArrayParamDef

    LBRAC  shift, and go to state 17

    LBRAC     [reduce using rule 79 (ArrayParamDef)]
    $default  reduce using rule 79 (ArrayParamDef)

    ArrayUnit      go to state 128
    ArrayParamDef  go to state 129


State 125

   81 Block: LCURLY $@17 . BlockItems RCURLY

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 118
    INT     shift, and go to state 130
    CONST   shift, and go to state 2
    NOT     shift, and go to state 32
    IF      shift, and go to state 131
    WHILE   shift, and go to state 132
    BREAK   shift, and go to state 133
    CONT    shift, and go to state 134
    RETURN  shift, and go to state 135
    SEMI    shift, and go to state 136
    NUMBER  shift, and go to state 33

    ADD       [reduce using rule 84 (BlockItem)]
    SUB       [reduce using rule 84 (BlockItem)]
    IDENT     [reduce using rule 84 (BlockItem)]
    LPAREN    [reduce using rule 84 (BlockItem)]
    LCURLY    [reduce using rule 84 (BlockItem)]
    INT       [reduce using rule 84 (BlockItem)]
    CONST     [reduce using rule 84 (BlockItem)]
    NOT       [reduce using rule 84 (BlockItem)]
    IF        [reduce using rule 84 (BlockItem)]
    WHILE     [reduce using rule 84 (BlockItem)]
    BREAK     [reduce using rule 84 (BlockItem)]
    CONT      [reduce using rule 84 (BlockItem)]
    RETURN    [reduce using rule 84 (BlockItem)]
    SEMI      [reduce using rule 84 (BlockItem)]
    NUMBER    [reduce using rule 84 (BlockItem)]
    $default  reduce using rule 84 (BlockItem)

    Decl        go to state 137
    ConstDecl   go to state 138
    VarDecl     go to state 139
    Exp         go to state 140
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 141
    Block       go to state 142
    BlockItems  go to state 143
    BlockItem   go to state 144
    Stmt        go to state 145


State 126

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 15 (ConstDef)


State 127

   34 ArrayExp: LCURLY $@6 ArrayInit RCURLY .

    $default  reduce using rule 34 (ArrayExp)


State 128

   77 ArrayParamDef: ArrayUnit .

    $default  reduce using rule 77 (ArrayParamDef)


State 129

   76 FuncFParam: INT IDENT LBRAC $@16 RBRAC ArrayParamDef .
   78 ArrayParamDef: ArrayParamDef . ArrayUnit

    LBRAC  shift, and go to state 17

    $default  reduce using rule 76 (FuncFParam)

    ArrayUnit  go to state 146


State 130

   18 VarDecl: INT . VarDefs SEMI

    IDENT  shift, and go to state 44

    VarDefs  go to state 11
    VarDef   go to state 12


State 131

   98 Stmt: IF . $@20 LPAREN Cond RPAREN $@21 Stmt $@22 IF_Else

    $default  reduce using rule 95 ($@20)

    $@20  go to state 147


State 132

  101 Stmt: WHILE . $@23 LPAREN Cond RPAREN $@24 Stmt

    $default  reduce using rule 99 ($@23)

    $@23  go to state 148


State 133

  102 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 149


State 134

  103 Stmt: CONT . SEMI

    SEMI  shift, and go to state 150


State 135

   87 Stmt: RETURN . SEMI
   89     | RETURN . $@18 Exp SEMI

    SEMI  shift, and go to state 151

    $default  reduce using rule 88 ($@18)

    $@18  go to state 152


State 136

   91 Stmt: SEMI .

    $default  reduce using rule 91 (Stmt)


State 137

   85 BlockItem: Decl .

    $default  reduce using rule 85 (BlockItem)


State 138

    7 Decl: ConstDecl .

    $default  reduce using rule 7 (Decl)


State 139

    8 Decl: VarDecl .

    $default  reduce using rule 8 (Decl)


State 140

   90 Stmt: Exp . SEMI

    SEMI  shift, and go to state 153


State 141

   54 PrimaryExp: LVal .
   94 Stmt: LVal . $@19 ASSIGN Exp SEMI

    ASSIGN    reduce using rule 93 ($@19)
    $default  reduce using rule 54 (PrimaryExp)

    $@19  go to state 154


State 142

   92 Stmt: Block .

    $default  reduce using rule 92 (Stmt)


State 143

   81 Block: LCURLY $@17 BlockItems . RCURLY
   83 BlockItems: BlockItems . BlockItem

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 118
    RCURLY  shift, and go to state 155
    INT     shift, and go to state 130
    CONST   shift, and go to state 2
    NOT     shift, and go to state 32
    IF      shift, and go to state 131
    WHILE   shift, and go to state 132
    BREAK   shift, and go to state 133
    CONT    shift, and go to state 134
    RETURN  shift, and go to state 135
    SEMI    shift, and go to state 136
    NUMBER  shift, and go to state 33

    ADD     [reduce using rule 84 (BlockItem)]
    SUB     [reduce using rule 84 (BlockItem)]
    IDENT   [reduce using rule 84 (BlockItem)]
    LPAREN  [reduce using rule 84 (BlockItem)]
    LCURLY  [reduce using rule 84 (BlockItem)]
    RCURLY  [reduce using rule 84 (BlockItem)]
    INT     [reduce using rule 84 (BlockItem)]
    CONST   [reduce using rule 84 (BlockItem)]
    NOT     [reduce using rule 84 (BlockItem)]
    IF      [reduce using rule 84 (BlockItem)]
    WHILE   [reduce using rule 84 (BlockItem)]
    BREAK   [reduce using rule 84 (BlockItem)]
    CONT    [reduce using rule 84 (BlockItem)]
    RETURN  [reduce using rule 84 (BlockItem)]
    SEMI    [reduce using rule 84 (BlockItem)]
    NUMBER  [reduce using rule 84 (BlockItem)]

    Decl        go to state 137
    ConstDecl   go to state 138
    VarDecl     go to state 139
    Exp         go to state 140
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 141
    Block       go to state 142
    BlockItem   go to state 156
    Stmt        go to state 145


State 144

   82 BlockItems: BlockItem .

    $default  reduce using rule 82 (BlockItems)


State 145

   86 BlockItem: Stmt .

    $default  reduce using rule 86 (BlockItem)


State 146

   78 ArrayParamDef: ArrayParamDef ArrayUnit .

    $default  reduce using rule 78 (ArrayParamDef)


State 147

   98 Stmt: IF $@20 . LPAREN Cond RPAREN $@21 Stmt $@22 IF_Else

    LPAREN  shift, and go to state 157


State 148

  101 Stmt: WHILE $@23 . LPAREN Cond RPAREN $@24 Stmt

    LPAREN  shift, and go to state 158


State 149

  102 Stmt: BREAK SEMI .

    $default  reduce using rule 102 (Stmt)


State 150

  103 Stmt: CONT SEMI .

    $default  reduce using rule 103 (Stmt)


State 151

   87 Stmt: RETURN SEMI .

    $default  reduce using rule 87 (Stmt)


State 152

   89 Stmt: RETURN $@18 . Exp SEMI

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    Exp         go to state 159
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 153

   90 Stmt: Exp SEMI .

    $default  reduce using rule 90 (Stmt)


State 154

   94 Stmt: LVal $@19 . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 160


State 155

   81 Block: LCURLY $@17 BlockItems RCURLY .

    $default  reduce using rule 81 (Block)


State 156

   83 BlockItems: BlockItems BlockItem .

    $default  reduce using rule 83 (BlockItems)


State 157

   98 Stmt: IF $@20 LPAREN . Cond RPAREN $@21 Stmt $@22 IF_Else

    $default  reduce using rule 106 ($@25)

    Cond  go to state 161
    $@25  go to state 162


State 158

  101 Stmt: WHILE $@23 LPAREN . Cond RPAREN $@24 Stmt

    $default  reduce using rule 106 ($@25)

    Cond  go to state 163
    $@25  go to state 162


State 159

   89 Stmt: RETURN $@18 Exp . SEMI

    SEMI  shift, and go to state 164


State 160

   94 Stmt: LVal $@19 ASSIGN . Exp SEMI

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    Exp         go to state 165
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 161

   98 Stmt: IF $@20 LPAREN Cond . RPAREN $@21 Stmt $@22 IF_Else

    RPAREN  shift, and go to state 166


State 162

  107 Cond: $@25 . LOrExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 167
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39
    LOrExp      go to state 168
    LAndExp     go to state 169
    EqExp       go to state 170
    RelExp      go to state 171


State 163

  101 Stmt: WHILE $@23 LPAREN Cond . RPAREN $@24 Stmt

    RPAREN  shift, and go to state 172


State 164

   89 Stmt: RETURN $@18 Exp SEMI .

    $default  reduce using rule 89 (Stmt)


State 165

   94 Stmt: LVal $@19 ASSIGN Exp . SEMI

    SEMI  shift, and go to state 173


State 166

   98 Stmt: IF $@20 LPAREN Cond RPAREN . $@21 Stmt $@22 IF_Else

    $default  reduce using rule 96 ($@21)

    $@21  go to state 174


State 167

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  117 RelExp: AddExp .

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 117 (RelExp)


State 168

  107 Cond: $@25 LOrExp .
  110 LOrExp: LOrExp . OR $@26 LAndExp

    OR  shift, and go to state 175

    $default  reduce using rule 107 (Cond)


State 169

  108 LOrExp: LAndExp .
  113 LAndExp: LAndExp . AND $@27 EqExp

    AND  shift, and go to state 176

    $default  reduce using rule 108 (LOrExp)


State 170

  111 LAndExp: EqExp .
  115 EqExp: EqExp . EQ RelExp
  116      | EqExp . NEQ RelExp

    EQ   shift, and go to state 177
    NEQ  shift, and go to state 178

    $default  reduce using rule 111 (LAndExp)


State 171

  114 EqExp: RelExp .
  118 RelExp: RelExp . LE AddExp
  119       | RelExp . GE AddExp
  120       | RelExp . LEQ AddExp
  121       | RelExp . GEQ AddExp

    LE   shift, and go to state 179
    LEQ  shift, and go to state 180
    GE   shift, and go to state 181
    GEQ  shift, and go to state 182

    $default  reduce using rule 114 (EqExp)


State 172

  101 Stmt: WHILE $@23 LPAREN Cond RPAREN . $@24 Stmt

    $default  reduce using rule 100 ($@24)

    $@24  go to state 183


State 173

   94 Stmt: LVal $@19 ASSIGN Exp SEMI .

    $default  reduce using rule 94 (Stmt)


State 174

   98 Stmt: IF $@20 LPAREN Cond RPAREN $@21 . Stmt $@22 IF_Else

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 118
    NOT     shift, and go to state 32
    IF      shift, and go to state 131
    WHILE   shift, and go to state 132
    BREAK   shift, and go to state 133
    CONT    shift, and go to state 134
    RETURN  shift, and go to state 135
    SEMI    shift, and go to state 136
    NUMBER  shift, and go to state 33

    Exp         go to state 140
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 141
    Block       go to state 142
    Stmt        go to state 184


State 175

  110 LOrExp: LOrExp OR . $@26 LAndExp

    $default  reduce using rule 109 ($@26)

    $@26  go to state 185


State 176

  113 LAndExp: LAndExp AND . $@27 EqExp

    $default  reduce using rule 112 ($@27)

    $@27  go to state 186


State 177

  115 EqExp: EqExp EQ . RelExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 167
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39
    RelExp      go to state 187


State 178

  116 EqExp: EqExp NEQ . RelExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 167
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39
    RelExp      go to state 188


State 179

  118 RelExp: RelExp LE . AddExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 189
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 180

  120 RelExp: RelExp LEQ . AddExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 190
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 181

  119 RelExp: RelExp GE . AddExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 191
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 182

  121 RelExp: RelExp GEQ . AddExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 192
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39


State 183

  101 Stmt: WHILE $@23 LPAREN Cond RPAREN $@24 . Stmt

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 118
    NOT     shift, and go to state 32
    IF      shift, and go to state 131
    WHILE   shift, and go to state 132
    BREAK   shift, and go to state 133
    CONT    shift, and go to state 134
    RETURN  shift, and go to state 135
    SEMI    shift, and go to state 136
    NUMBER  shift, and go to state 33

    Exp         go to state 140
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 141
    Block       go to state 142
    Stmt        go to state 193


State 184

   98 Stmt: IF $@20 LPAREN Cond RPAREN $@21 Stmt . $@22 IF_Else

    $default  reduce using rule 97 ($@22)

    $@22  go to state 194


State 185

  110 LOrExp: LOrExp OR $@26 . LAndExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 167
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39
    LAndExp     go to state 195
    EqExp       go to state 170
    RelExp      go to state 171


State 186

  113 LAndExp: LAndExp AND $@27 . EqExp

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    NOT     shift, and go to state 32
    NUMBER  shift, and go to state 33

    AddExp      go to state 167
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 39
    EqExp       go to state 196
    RelExp      go to state 171


State 187

  115 EqExp: EqExp EQ RelExp .
  118 RelExp: RelExp . LE AddExp
  119       | RelExp . GE AddExp
  120       | RelExp . LEQ AddExp
  121       | RelExp . GEQ AddExp

    LE   shift, and go to state 179
    LEQ  shift, and go to state 180
    GE   shift, and go to state 181
    GEQ  shift, and go to state 182

    $default  reduce using rule 115 (EqExp)


State 188

  116 EqExp: EqExp NEQ RelExp .
  118 RelExp: RelExp . LE AddExp
  119       | RelExp . GE AddExp
  120       | RelExp . LEQ AddExp
  121       | RelExp . GEQ AddExp

    LE   shift, and go to state 179
    LEQ  shift, and go to state 180
    GE   shift, and go to state 181
    GEQ  shift, and go to state 182

    $default  reduce using rule 116 (EqExp)


State 189

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  118 RelExp: RelExp LE AddExp .

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 118 (RelExp)


State 190

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  120 RelExp: RelExp LEQ AddExp .

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 120 (RelExp)


State 191

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  119 RelExp: RelExp GE AddExp .

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 119 (RelExp)


State 192

   41 AddExp: AddExp . ADD MulExp
   42       | AddExp . SUB MulExp
  121 RelExp: RelExp GEQ AddExp .

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 121 (RelExp)


State 193

  101 Stmt: WHILE $@23 LPAREN Cond RPAREN $@24 Stmt .

    $default  reduce using rule 101 (Stmt)


State 194

   98 Stmt: IF $@20 LPAREN Cond RPAREN $@21 Stmt $@22 . IF_Else

    ELSE  shift, and go to state 197

    ELSE      [reduce using rule 104 (IF_Else)]
    $default  reduce using rule 104 (IF_Else)

    IF_Else  go to state 198


State 195

  110 LOrExp: LOrExp OR $@26 LAndExp .
  113 LAndExp: LAndExp . AND $@27 EqExp

    AND  shift, and go to state 176

    $default  reduce using rule 110 (LOrExp)


State 196

  113 LAndExp: LAndExp AND $@27 EqExp .
  115 EqExp: EqExp . EQ RelExp
  116      | EqExp . NEQ RelExp

    EQ   shift, and go to state 177
    NEQ  shift, and go to state 178

    $default  reduce using rule 113 (LAndExp)


State 197

  105 IF_Else: ELSE . Stmt

    ADD     shift, and go to state 28
    SUB     shift, and go to state 29
    IDENT   shift, and go to state 30
    LPAREN  shift, and go to state 31
    LCURLY  shift, and go to state 118
    NOT     shift, and go to state 32
    IF      shift, and go to state 131
    WHILE   shift, and go to state 132
    BREAK   shift, and go to state 133
    CONT    shift, and go to state 134
    RETURN  shift, and go to state 135
    SEMI    shift, and go to state 136
    NUMBER  shift, and go to state 33

    Exp         go to state 140
    AddExp      go to state 56
    MulExp      go to state 36
    UnaryExp    go to state 37
    PrimaryExp  go to state 38
    LVal        go to state 141
    Block       go to state 142
    Stmt        go to state 199


State 198

   98 Stmt: IF $@20 LPAREN Cond RPAREN $@21 Stmt $@22 IF_Else .

    $default  reduce using rule 98 (Stmt)


State 199

  105 IF_Else: ELSE Stmt .

    $default  reduce using rule 105 (IF_Else)
