Terminals unused in grammar

   LE
   LEQ
   GE
   GEQ
   EQ
   NEQ
   AND
   OR
   NOT
   BREAK
   CONT
   PERIOD


State 106 conflicts: 1 shift/reduce
State 115 conflicts: 9 shift/reduce
State 128 conflicts: 10 shift/reduce
State 156 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: CompUnit

    2 CompUnit: CompDecl
    3         | CompUnit CompDecl

    4 CompDecl: Decl
    5         | FuncDef

    6 Decl: ConstDecl
    7     | VarDecl

    8 ConstDecl: CONST INT ConstDefs SEMI

    9 ConstDefs: ConstDef
   10          | ConstDefs COMMA ConstDef

   11 ConstDef: IDENT ASSIGN ConstInitVal

   12 $@1: %empty

   13 $@2: %empty

   14 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   15 ConstInitVal: ConstExp

   16 ConstExp: AddExp

   17 VarDecl: INT VarDefs SEMI

   18 VarDefs: VarDef
   19        | VarDefs COMMA VarDef

   20 VarDef: IDENT
   21       | IDENT ASSIGN InitVal
   22       | IDENT ArrayDef

   23 $@3: %empty

   24 $@4: %empty

   25 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

   26 ArrayInit: %empty
   27          | ArrayExps

   28 ArrayExps: ArrayExp
   29          | ArrayExps COMMA ArrayExp

   30 ArrayExp: Exp

   31 $@5: %empty

   32 ArrayExp: LCURLY $@5 ArrayInit RCURLY

   33 ArrayDef: ArrayUnit
   34         | ArrayDef ArrayUnit

   35 ArrayUnit: LBRAC ConstExp RBRAC

   36 InitVal: Exp

   37 Exp: AddExp

   38 AddExp: MulExp
   39       | AddExp ADD MulExp
   40       | AddExp SUB MulExp

   41 MulExp: UnaryExp
   42       | MulExp MUL UnaryExp
   43       | MulExp DIV UnaryExp
   44       | MulExp MOD UnaryExp

   45 UnaryExp: PrimaryExp
   46         | IDENT LPAREN FuncRParams RPAREN

   47 PrimaryExp: NUMBER
   48           | LVal

   49 LVal: IDENT

   50 $@6: %empty

   51 LVal: IDENT $@6 ArrayLVals

   52 ArrayLVals: ArrayLVal
   53           | ArrayLVals ArrayLVal

   54 ArrayLVal: LBRAC Exp RBRAC

   55 $@7: %empty

   56 $@8: %empty

   57 $@9: %empty

   58 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

   59 $@10: %empty

   60 $@11: %empty

   61 $@12: %empty

   62 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

   63 FuncFParams: %empty
   64            | FuncFParam
   65            | FuncFParams COMMA FuncFParam

   66 FuncFParam: INT IDENT
   67           | INT IDENT LBRAC RBRAC ArrayParamDef

   68 ArrayParamDef: ArrayUnit
   69              | ArrayParamDef ArrayUnit
   70              | %empty

   71 $@13: %empty

   72 Block: LCURLY $@13 BlockItems RCURLY

   73 BlockItems: BlockItem
   74           | BlockItems BlockItem

   75 BlockItem: %empty
   76          | Decl
   77          | Stmt

   78 Stmt: RETURN SEMI
   79     | RETURN Exp SEMI
   80     | Exp SEMI
   81     | SEMI
   82     | Block

   83 $@14: %empty

   84 Stmt: LVal $@14 ASSIGN Exp SEMI

   85 $@15: %empty

   86 $@16: %empty

   87 Stmt: IF LPAREN Cond RPAREN $@15 Stmt $@16 IF_Else

   88 $@17: %empty

   89 Stmt: WHILE LPAREN Cond RPAREN $@17 Stmt

   90 IF_Else: %empty
   91        | ELSE Stmt

   92 Cond: LOrExp

   93 LOrExp: LAndExp

   94 LAndExp: EqExp

   95 EqExp: RelExp

   96 RelExp: AddExp

   97 FuncRParams: %empty
   98            | Exp
   99            | FuncRParams COMMA Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 39
SUB (259) 40
MUL (260) 42
DIV (261) 43
MOD (262) 44
IDENT (263) 11 14 20 21 22 25 46 49 51 58 62 66 67
LPAREN (264) 46 58 62 87 89
RPAREN (265) 46 58 62 87 89
LCURLY (266) 14 25 32 72
RCURLY (267) 14 25 32 72
LBRAC (268) 35 54 67
RBRAC (269) 35 54 67
INT (270) 8 17 58 66 67
CONST (271) 8
VOID (272) 62
LE (273)
LEQ (274)
GE (275)
GEQ (276)
EQ (277)
NEQ (278)
AND (279)
OR (280)
NOT (281)
IF (282) 87
ELSE (283) 91
WHILE (284) 89
BREAK (285)
CONT (286)
RETURN (287) 78 79
ASSIGN (288) 11 14 21 25 84
SEMI (289) 8 17 78 79 80 81 84
COMMA (290) 10 19 29 65 99
PERIOD (291)
NUMBER (292) 47


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
START (39)
    on left: 1, on right: 0
CompUnit (40)
    on left: 2 3, on right: 1 3
CompDecl (41)
    on left: 4 5, on right: 2 3
Decl (42)
    on left: 6 7, on right: 4 76
ConstDecl (43)
    on left: 8, on right: 6
ConstDefs (44)
    on left: 9 10, on right: 8 10
ConstDef (45)
    on left: 11 14, on right: 9 10
$@1 (46)
    on left: 12, on right: 14
$@2 (47)
    on left: 13, on right: 14
ConstInitVal (48)
    on left: 15, on right: 11
ConstExp (49)
    on left: 16, on right: 15 35
VarDecl (50)
    on left: 17, on right: 7
VarDefs (51)
    on left: 18 19, on right: 17 19
VarDef (52)
    on left: 20 21 22 25, on right: 18 19
$@3 (53)
    on left: 23, on right: 25
$@4 (54)
    on left: 24, on right: 25
ArrayInit (55)
    on left: 26 27, on right: 14 25 32
ArrayExps (56)
    on left: 28 29, on right: 27 29
ArrayExp (57)
    on left: 30 32, on right: 28 29
$@5 (58)
    on left: 31, on right: 32
ArrayDef (59)
    on left: 33 34, on right: 14 22 25 34
ArrayUnit (60)
    on left: 35, on right: 33 34 68 69
InitVal (61)
    on left: 36, on right: 21
Exp (62)
    on left: 37, on right: 30 36 54 79 80 84 98 99
AddExp (63)
    on left: 38 39 40, on right: 16 37 39 40 96
MulExp (64)
    on left: 41 42 43 44, on right: 38 39 40 42 43 44
UnaryExp (65)
    on left: 45 46, on right: 41 42 43 44
PrimaryExp (66)
    on left: 47 48, on right: 45
LVal (67)
    on left: 49 51, on right: 48 84
$@6 (68)
    on left: 50, on right: 51
ArrayLVals (69)
    on left: 52 53, on right: 51 53
ArrayLVal (70)
    on left: 54, on right: 52 53
FuncDef (71)
    on left: 58 62, on right: 5
$@7 (72)
    on left: 55, on right: 58
$@8 (73)
    on left: 56, on right: 58
$@9 (74)
    on left: 57, on right: 58
$@10 (75)
    on left: 59, on right: 62
$@11 (76)
    on left: 60, on right: 62
$@12 (77)
    on left: 61, on right: 62
FuncFParams (78)
    on left: 63 64 65, on right: 58 62 65
FuncFParam (79)
    on left: 66 67, on right: 64 65
ArrayParamDef (80)
    on left: 68 69 70, on right: 67 69
Block (81)
    on left: 72, on right: 58 62 82
$@13 (82)
    on left: 71, on right: 72
BlockItems (83)
    on left: 73 74, on right: 72 74
BlockItem (84)
    on left: 75 76 77, on right: 73 74
Stmt (85)
    on left: 78 79 80 81 82 84 87 89, on right: 77 87 89 91
$@14 (86)
    on left: 83, on right: 84
$@15 (87)
    on left: 85, on right: 87
$@16 (88)
    on left: 86, on right: 87
$@17 (89)
    on left: 88, on right: 89
IF_Else (90)
    on left: 90 91, on right: 87
Cond (91)
    on left: 92, on right: 87 89
LOrExp (92)
    on left: 93, on right: 92
LAndExp (93)
    on left: 94, on right: 93
EqExp (94)
    on left: 95, on right: 94
RelExp (95)
    on left: 96, on right: 95
FuncRParams (96)
    on left: 97 98 99, on right: 46 99


State 0

    0 $accept: . START $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    START      go to state 4
    CompUnit   go to state 5
    CompDecl   go to state 6
    Decl       go to state 7
    ConstDecl  go to state 8
    VarDecl    go to state 9
    FuncDef    go to state 10


State 1

   17 VarDecl: INT . VarDefs SEMI
   58 FuncDef: INT . IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

    IDENT  shift, and go to state 11

    VarDefs  go to state 12
    VarDef   go to state 13


State 2

    8 ConstDecl: CONST . INT ConstDefs SEMI

    INT  shift, and go to state 14


State 3

   62 FuncDef: VOID . IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    IDENT  shift, and go to state 15


State 4

    0 $accept: START . $end

    $end  shift, and go to state 16


State 5

    1 START: CompUnit .
    3 CompUnit: CompUnit . CompDecl

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (START)

    CompDecl   go to state 17
    Decl       go to state 7
    ConstDecl  go to state 8
    VarDecl    go to state 9
    FuncDef    go to state 10


State 6

    2 CompUnit: CompDecl .

    $default  reduce using rule 2 (CompUnit)


State 7

    4 CompDecl: Decl .

    $default  reduce using rule 4 (CompDecl)


State 8

    6 Decl: ConstDecl .

    $default  reduce using rule 6 (Decl)


State 9

    7 Decl: VarDecl .

    $default  reduce using rule 7 (Decl)


State 10

    5 CompDecl: FuncDef .

    $default  reduce using rule 5 (CompDecl)


State 11

   20 VarDef: IDENT .
   21       | IDENT . ASSIGN InitVal
   22       | IDENT . ArrayDef
   25       | IDENT . ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY
   58 FuncDef: INT IDENT . $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

    LBRAC   shift, and go to state 18
    ASSIGN  shift, and go to state 19

    LPAREN    reduce using rule 55 ($@7)
    $default  reduce using rule 20 (VarDef)

    ArrayDef   go to state 20
    ArrayUnit  go to state 21
    $@7        go to state 22


State 12

   17 VarDecl: INT VarDefs . SEMI
   19 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 23
    COMMA  shift, and go to state 24


State 13

   18 VarDefs: VarDef .

    $default  reduce using rule 18 (VarDefs)


State 14

    8 ConstDecl: CONST INT . ConstDefs SEMI

    IDENT  shift, and go to state 25

    ConstDefs  go to state 26
    ConstDef   go to state 27


State 15

   62 FuncDef: VOID IDENT . $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    $default  reduce using rule 59 ($@10)

    $@10  go to state 28


State 16

    0 $accept: START $end .

    $default  accept


State 17

    3 CompUnit: CompUnit CompDecl .

    $default  reduce using rule 3 (CompUnit)


State 18

   35 ArrayUnit: LBRAC . ConstExp RBRAC

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    ConstExp    go to state 31
    AddExp      go to state 32
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 19

   21 VarDef: IDENT ASSIGN . InitVal

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    InitVal     go to state 37
    Exp         go to state 38
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 20

   22 VarDef: IDENT ArrayDef .
   25       | IDENT ArrayDef . ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY
   34 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 18
    ASSIGN  shift, and go to state 40

    $default  reduce using rule 22 (VarDef)

    ArrayUnit  go to state 41


State 21

   33 ArrayDef: ArrayUnit .

    $default  reduce using rule 33 (ArrayDef)


State 22

   58 FuncDef: INT IDENT $@7 . LPAREN $@8 FuncFParams RPAREN $@9 Block

    LPAREN  shift, and go to state 42


State 23

   17 VarDecl: INT VarDefs SEMI .

    $default  reduce using rule 17 (VarDecl)


State 24

   19 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 43

    VarDef  go to state 44


State 25

   11 ConstDef: IDENT . ASSIGN ConstInitVal
   14         | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 18
    ASSIGN  shift, and go to state 45

    ArrayDef   go to state 46
    ArrayUnit  go to state 21


State 26

    8 ConstDecl: CONST INT ConstDefs . SEMI
   10 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 47
    COMMA  shift, and go to state 48


State 27

    9 ConstDefs: ConstDef .

    $default  reduce using rule 9 (ConstDefs)


State 28

   62 FuncDef: VOID IDENT $@10 . LPAREN $@11 FuncFParams RPAREN $@12 Block

    LPAREN  shift, and go to state 49


State 29

   46 UnaryExp: IDENT . LPAREN FuncRParams RPAREN
   49 LVal: IDENT .
   51     | IDENT . $@6 ArrayLVals

    LPAREN  shift, and go to state 50

    LBRAC     reduce using rule 50 ($@6)
    $default  reduce using rule 49 (LVal)

    $@6  go to state 51


State 30

   47 PrimaryExp: NUMBER .

    $default  reduce using rule 47 (PrimaryExp)


State 31

   35 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 52


State 32

   16 ConstExp: AddExp .
   39 AddExp: AddExp . ADD MulExp
   40       | AddExp . SUB MulExp

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 16 (ConstExp)


State 33

   38 AddExp: MulExp .
   42 MulExp: MulExp . MUL UnaryExp
   43       | MulExp . DIV UnaryExp
   44       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 38 (AddExp)


State 34

   41 MulExp: UnaryExp .

    $default  reduce using rule 41 (MulExp)


State 35

   45 UnaryExp: PrimaryExp .

    $default  reduce using rule 45 (UnaryExp)


State 36

   48 PrimaryExp: LVal .

    $default  reduce using rule 48 (PrimaryExp)


State 37

   21 VarDef: IDENT ASSIGN InitVal .

    $default  reduce using rule 21 (VarDef)


State 38

   36 InitVal: Exp .

    $default  reduce using rule 36 (InitVal)


State 39

   37 Exp: AddExp .
   39 AddExp: AddExp . ADD MulExp
   40       | AddExp . SUB MulExp

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 37 (Exp)


State 40

   25 VarDef: IDENT ArrayDef ASSIGN . $@3 LCURLY $@4 ArrayInit RCURLY

    $default  reduce using rule 23 ($@3)

    $@3  go to state 58


State 41

   34 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 34 (ArrayDef)


State 42

   58 FuncDef: INT IDENT $@7 LPAREN . $@8 FuncFParams RPAREN $@9 Block

    $default  reduce using rule 56 ($@8)

    $@8  go to state 59


State 43

   20 VarDef: IDENT .
   21       | IDENT . ASSIGN InitVal
   22       | IDENT . ArrayDef
   25       | IDENT . ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

    LBRAC   shift, and go to state 18
    ASSIGN  shift, and go to state 19

    $default  reduce using rule 20 (VarDef)

    ArrayDef   go to state 20
    ArrayUnit  go to state 21


State 44

   19 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 19 (VarDefs)


State 45

   11 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    ConstInitVal  go to state 60
    ConstExp      go to state 61
    AddExp        go to state 32
    MulExp        go to state 33
    UnaryExp      go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36


State 46

   14 ConstDef: IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   34 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 18
    ASSIGN  shift, and go to state 62

    ArrayUnit  go to state 41


State 47

    8 ConstDecl: CONST INT ConstDefs SEMI .

    $default  reduce using rule 8 (ConstDecl)


State 48

   10 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 25

    ConstDef  go to state 63


State 49

   62 FuncDef: VOID IDENT $@10 LPAREN . $@11 FuncFParams RPAREN $@12 Block

    $default  reduce using rule 60 ($@11)

    $@11  go to state 64


State 50

   46 UnaryExp: IDENT LPAREN . FuncRParams RPAREN

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    $default  reduce using rule 97 (FuncRParams)

    Exp          go to state 65
    AddExp       go to state 39
    MulExp       go to state 33
    UnaryExp     go to state 34
    PrimaryExp   go to state 35
    LVal         go to state 36
    FuncRParams  go to state 66


State 51

   51 LVal: IDENT $@6 . ArrayLVals

    LBRAC  shift, and go to state 67

    ArrayLVals  go to state 68
    ArrayLVal   go to state 69


State 52

   35 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 35 (ArrayUnit)


State 53

   39 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    MulExp      go to state 70
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 54

   40 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    MulExp      go to state 71
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 55

   42 MulExp: MulExp MUL . UnaryExp

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    UnaryExp    go to state 72
    PrimaryExp  go to state 35
    LVal        go to state 36


State 56

   43 MulExp: MulExp DIV . UnaryExp

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    UnaryExp    go to state 73
    PrimaryExp  go to state 35
    LVal        go to state 36


State 57

   44 MulExp: MulExp MOD . UnaryExp

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    UnaryExp    go to state 74
    PrimaryExp  go to state 35
    LVal        go to state 36


State 58

   25 VarDef: IDENT ArrayDef ASSIGN $@3 . LCURLY $@4 ArrayInit RCURLY

    LCURLY  shift, and go to state 75


State 59

   58 FuncDef: INT IDENT $@7 LPAREN $@8 . FuncFParams RPAREN $@9 Block

    INT  shift, and go to state 76

    $default  reduce using rule 63 (FuncFParams)

    FuncFParams  go to state 77
    FuncFParam   go to state 78


State 60

   11 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 11 (ConstDef)


State 61

   15 ConstInitVal: ConstExp .

    $default  reduce using rule 15 (ConstInitVal)


State 62

   14 ConstDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 12 ($@1)

    $@1  go to state 79


State 63

   10 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 10 (ConstDefs)


State 64

   62 FuncDef: VOID IDENT $@10 LPAREN $@11 . FuncFParams RPAREN $@12 Block

    INT  shift, and go to state 76

    $default  reduce using rule 63 (FuncFParams)

    FuncFParams  go to state 80
    FuncFParam   go to state 78


State 65

   98 FuncRParams: Exp .

    $default  reduce using rule 98 (FuncRParams)


State 66

   46 UnaryExp: IDENT LPAREN FuncRParams . RPAREN
   99 FuncRParams: FuncRParams . COMMA Exp

    RPAREN  shift, and go to state 81
    COMMA   shift, and go to state 82


State 67

   54 ArrayLVal: LBRAC . Exp RBRAC

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    Exp         go to state 83
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 68

   51 LVal: IDENT $@6 ArrayLVals .
   53 ArrayLVals: ArrayLVals . ArrayLVal

    LBRAC  shift, and go to state 67

    $default  reduce using rule 51 (LVal)

    ArrayLVal  go to state 84


State 69

   52 ArrayLVals: ArrayLVal .

    $default  reduce using rule 52 (ArrayLVals)


State 70

   39 AddExp: AddExp ADD MulExp .
   42 MulExp: MulExp . MUL UnaryExp
   43       | MulExp . DIV UnaryExp
   44       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 39 (AddExp)


State 71

   40 AddExp: AddExp SUB MulExp .
   42 MulExp: MulExp . MUL UnaryExp
   43       | MulExp . DIV UnaryExp
   44       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 40 (AddExp)


State 72

   42 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 42 (MulExp)


State 73

   43 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 43 (MulExp)


State 74

   44 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 44 (MulExp)


State 75

   25 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY . $@4 ArrayInit RCURLY

    $default  reduce using rule 24 ($@4)

    $@4  go to state 85


State 76

   66 FuncFParam: INT . IDENT
   67           | INT . IDENT LBRAC RBRAC ArrayParamDef

    IDENT  shift, and go to state 86


State 77

   58 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams . RPAREN $@9 Block
   65 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 87
    COMMA   shift, and go to state 88


State 78

   64 FuncFParams: FuncFParam .

    $default  reduce using rule 64 (FuncFParams)


State 79

   14 ConstDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 89


State 80

   62 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams . RPAREN $@12 Block
   65 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 90
    COMMA   shift, and go to state 88


State 81

   46 UnaryExp: IDENT LPAREN FuncRParams RPAREN .

    $default  reduce using rule 46 (UnaryExp)


State 82

   99 FuncRParams: FuncRParams COMMA . Exp

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    Exp         go to state 91
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 83

   54 ArrayLVal: LBRAC Exp . RBRAC

    RBRAC  shift, and go to state 92


State 84

   53 ArrayLVals: ArrayLVals ArrayLVal .

    $default  reduce using rule 53 (ArrayLVals)


State 85

   25 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 . ArrayInit RCURLY

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 30

    $default  reduce using rule 26 (ArrayInit)

    ArrayInit   go to state 94
    ArrayExps   go to state 95
    ArrayExp    go to state 96
    Exp         go to state 97
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 86

   66 FuncFParam: INT IDENT .
   67           | INT IDENT . LBRAC RBRAC ArrayParamDef

    LBRAC  shift, and go to state 98

    $default  reduce using rule 66 (FuncFParam)


State 87

   58 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN . $@9 Block

    $default  reduce using rule 57 ($@9)

    $@9  go to state 99


State 88

   65 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 76

    FuncFParam  go to state 100


State 89

   14 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 13 ($@2)

    $@2  go to state 101


State 90

   62 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN . $@12 Block

    $default  reduce using rule 61 ($@12)

    $@12  go to state 102


State 91

   99 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 99 (FuncRParams)


State 92

   54 ArrayLVal: LBRAC Exp RBRAC .

    $default  reduce using rule 54 (ArrayLVal)


State 93

   32 ArrayExp: LCURLY . $@5 ArrayInit RCURLY

    $default  reduce using rule 31 ($@5)

    $@5  go to state 103


State 94

   25 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit . RCURLY

    RCURLY  shift, and go to state 104


State 95

   27 ArrayInit: ArrayExps .
   29 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 105

    $default  reduce using rule 27 (ArrayInit)


State 96

   28 ArrayExps: ArrayExp .

    $default  reduce using rule 28 (ArrayExps)


State 97

   30 ArrayExp: Exp .

    $default  reduce using rule 30 (ArrayExp)


State 98

   67 FuncFParam: INT IDENT LBRAC . RBRAC ArrayParamDef

    RBRAC  shift, and go to state 106


State 99

   58 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 . Block

    LCURLY  shift, and go to state 107

    Block  go to state 108


State 100

   65 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 65 (FuncFParams)


State 101

   14 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 30

    $default  reduce using rule 26 (ArrayInit)

    ArrayInit   go to state 109
    ArrayExps   go to state 95
    ArrayExp    go to state 96
    Exp         go to state 97
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 102

   62 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 . Block

    LCURLY  shift, and go to state 107

    Block  go to state 110


State 103

   32 ArrayExp: LCURLY $@5 . ArrayInit RCURLY

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 30

    $default  reduce using rule 26 (ArrayInit)

    ArrayInit   go to state 111
    ArrayExps   go to state 95
    ArrayExp    go to state 96
    Exp         go to state 97
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 104

   25 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY .

    $default  reduce using rule 25 (VarDef)


State 105

   29 ArrayExps: ArrayExps COMMA . ArrayExp

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 93
    NUMBER  shift, and go to state 30

    ArrayExp    go to state 112
    Exp         go to state 97
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 106

   67 FuncFParam: INT IDENT LBRAC RBRAC . ArrayParamDef

    LBRAC  shift, and go to state 18

    LBRAC     [reduce using rule 70 (ArrayParamDef)]
    $default  reduce using rule 70 (ArrayParamDef)

    ArrayUnit      go to state 113
    ArrayParamDef  go to state 114


State 107

   72 Block: LCURLY . $@13 BlockItems RCURLY

    $default  reduce using rule 71 ($@13)

    $@13  go to state 115


State 108

   58 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block .

    $default  reduce using rule 58 (FuncDef)


State 109

   14 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 116


State 110

   62 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block .

    $default  reduce using rule 62 (FuncDef)


State 111

   32 ArrayExp: LCURLY $@5 ArrayInit . RCURLY

    RCURLY  shift, and go to state 117


State 112

   29 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 29 (ArrayExps)


State 113

   68 ArrayParamDef: ArrayUnit .

    $default  reduce using rule 68 (ArrayParamDef)


State 114

   67 FuncFParam: INT IDENT LBRAC RBRAC ArrayParamDef .
   69 ArrayParamDef: ArrayParamDef . ArrayUnit

    LBRAC  shift, and go to state 18

    $default  reduce using rule 67 (FuncFParam)

    ArrayUnit  go to state 118


State 115

   72 Block: LCURLY $@13 . BlockItems RCURLY

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 107
    INT     shift, and go to state 119
    CONST   shift, and go to state 2
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    RETURN  shift, and go to state 122
    SEMI    shift, and go to state 123
    NUMBER  shift, and go to state 30

    IDENT     [reduce using rule 75 (BlockItem)]
    LCURLY    [reduce using rule 75 (BlockItem)]
    INT       [reduce using rule 75 (BlockItem)]
    CONST     [reduce using rule 75 (BlockItem)]
    IF        [reduce using rule 75 (BlockItem)]
    WHILE     [reduce using rule 75 (BlockItem)]
    RETURN    [reduce using rule 75 (BlockItem)]
    SEMI      [reduce using rule 75 (BlockItem)]
    NUMBER    [reduce using rule 75 (BlockItem)]
    $default  reduce using rule 75 (BlockItem)

    Decl        go to state 124
    ConstDecl   go to state 8
    VarDecl     go to state 9
    Exp         go to state 125
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 126
    Block       go to state 127
    BlockItems  go to state 128
    BlockItem   go to state 129
    Stmt        go to state 130


State 116

   14 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 14 (ConstDef)


State 117

   32 ArrayExp: LCURLY $@5 ArrayInit RCURLY .

    $default  reduce using rule 32 (ArrayExp)


State 118

   69 ArrayParamDef: ArrayParamDef ArrayUnit .

    $default  reduce using rule 69 (ArrayParamDef)


State 119

   17 VarDecl: INT . VarDefs SEMI

    IDENT  shift, and go to state 43

    VarDefs  go to state 12
    VarDef   go to state 13


State 120

   87 Stmt: IF . LPAREN Cond RPAREN $@15 Stmt $@16 IF_Else

    LPAREN  shift, and go to state 131


State 121

   89 Stmt: WHILE . LPAREN Cond RPAREN $@17 Stmt

    LPAREN  shift, and go to state 132


State 122

   78 Stmt: RETURN . SEMI
   79     | RETURN . Exp SEMI

    IDENT   shift, and go to state 29
    SEMI    shift, and go to state 133
    NUMBER  shift, and go to state 30

    Exp         go to state 134
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 123

   81 Stmt: SEMI .

    $default  reduce using rule 81 (Stmt)


State 124

   76 BlockItem: Decl .

    $default  reduce using rule 76 (BlockItem)


State 125

   80 Stmt: Exp . SEMI

    SEMI  shift, and go to state 135


State 126

   48 PrimaryExp: LVal .
   84 Stmt: LVal . $@14 ASSIGN Exp SEMI

    ASSIGN    reduce using rule 83 ($@14)
    $default  reduce using rule 48 (PrimaryExp)

    $@14  go to state 136


State 127

   82 Stmt: Block .

    $default  reduce using rule 82 (Stmt)


State 128

   72 Block: LCURLY $@13 BlockItems . RCURLY
   74 BlockItems: BlockItems . BlockItem

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 107
    RCURLY  shift, and go to state 137
    INT     shift, and go to state 119
    CONST   shift, and go to state 2
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    RETURN  shift, and go to state 122
    SEMI    shift, and go to state 123
    NUMBER  shift, and go to state 30

    IDENT   [reduce using rule 75 (BlockItem)]
    LCURLY  [reduce using rule 75 (BlockItem)]
    RCURLY  [reduce using rule 75 (BlockItem)]
    INT     [reduce using rule 75 (BlockItem)]
    CONST   [reduce using rule 75 (BlockItem)]
    IF      [reduce using rule 75 (BlockItem)]
    WHILE   [reduce using rule 75 (BlockItem)]
    RETURN  [reduce using rule 75 (BlockItem)]
    SEMI    [reduce using rule 75 (BlockItem)]
    NUMBER  [reduce using rule 75 (BlockItem)]

    Decl        go to state 124
    ConstDecl   go to state 8
    VarDecl     go to state 9
    Exp         go to state 125
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 126
    Block       go to state 127
    BlockItem   go to state 138
    Stmt        go to state 130


State 129

   73 BlockItems: BlockItem .

    $default  reduce using rule 73 (BlockItems)


State 130

   77 BlockItem: Stmt .

    $default  reduce using rule 77 (BlockItem)


State 131

   87 Stmt: IF LPAREN . Cond RPAREN $@15 Stmt $@16 IF_Else

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 139
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    Cond        go to state 140
    LOrExp      go to state 141
    LAndExp     go to state 142
    EqExp       go to state 143
    RelExp      go to state 144


State 132

   89 Stmt: WHILE LPAREN . Cond RPAREN $@17 Stmt

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    AddExp      go to state 139
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36
    Cond        go to state 145
    LOrExp      go to state 141
    LAndExp     go to state 142
    EqExp       go to state 143
    RelExp      go to state 144


State 133

   78 Stmt: RETURN SEMI .

    $default  reduce using rule 78 (Stmt)


State 134

   79 Stmt: RETURN Exp . SEMI

    SEMI  shift, and go to state 146


State 135

   80 Stmt: Exp SEMI .

    $default  reduce using rule 80 (Stmt)


State 136

   84 Stmt: LVal $@14 . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 147


State 137

   72 Block: LCURLY $@13 BlockItems RCURLY .

    $default  reduce using rule 72 (Block)


State 138

   74 BlockItems: BlockItems BlockItem .

    $default  reduce using rule 74 (BlockItems)


State 139

   39 AddExp: AddExp . ADD MulExp
   40       | AddExp . SUB MulExp
   96 RelExp: AddExp .

    ADD  shift, and go to state 53
    SUB  shift, and go to state 54

    $default  reduce using rule 96 (RelExp)


State 140

   87 Stmt: IF LPAREN Cond . RPAREN $@15 Stmt $@16 IF_Else

    RPAREN  shift, and go to state 148


State 141

   92 Cond: LOrExp .

    $default  reduce using rule 92 (Cond)


State 142

   93 LOrExp: LAndExp .

    $default  reduce using rule 93 (LOrExp)


State 143

   94 LAndExp: EqExp .

    $default  reduce using rule 94 (LAndExp)


State 144

   95 EqExp: RelExp .

    $default  reduce using rule 95 (EqExp)


State 145

   89 Stmt: WHILE LPAREN Cond . RPAREN $@17 Stmt

    RPAREN  shift, and go to state 149


State 146

   79 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 79 (Stmt)


State 147

   84 Stmt: LVal $@14 ASSIGN . Exp SEMI

    IDENT   shift, and go to state 29
    NUMBER  shift, and go to state 30

    Exp         go to state 150
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 36


State 148

   87 Stmt: IF LPAREN Cond RPAREN . $@15 Stmt $@16 IF_Else

    $default  reduce using rule 85 ($@15)

    $@15  go to state 151


State 149

   89 Stmt: WHILE LPAREN Cond RPAREN . $@17 Stmt

    $default  reduce using rule 88 ($@17)

    $@17  go to state 152


State 150

   84 Stmt: LVal $@14 ASSIGN Exp . SEMI

    SEMI  shift, and go to state 153


State 151

   87 Stmt: IF LPAREN Cond RPAREN $@15 . Stmt $@16 IF_Else

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 107
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    RETURN  shift, and go to state 122
    SEMI    shift, and go to state 123
    NUMBER  shift, and go to state 30

    Exp         go to state 125
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 126
    Block       go to state 127
    Stmt        go to state 154


State 152

   89 Stmt: WHILE LPAREN Cond RPAREN $@17 . Stmt

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 107
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    RETURN  shift, and go to state 122
    SEMI    shift, and go to state 123
    NUMBER  shift, and go to state 30

    Exp         go to state 125
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 126
    Block       go to state 127
    Stmt        go to state 155


State 153

   84 Stmt: LVal $@14 ASSIGN Exp SEMI .

    $default  reduce using rule 84 (Stmt)


State 154

   87 Stmt: IF LPAREN Cond RPAREN $@15 Stmt . $@16 IF_Else

    $default  reduce using rule 86 ($@16)

    $@16  go to state 156


State 155

   89 Stmt: WHILE LPAREN Cond RPAREN $@17 Stmt .

    $default  reduce using rule 89 (Stmt)


State 156

   87 Stmt: IF LPAREN Cond RPAREN $@15 Stmt $@16 . IF_Else

    ELSE  shift, and go to state 157

    ELSE      [reduce using rule 90 (IF_Else)]
    $default  reduce using rule 90 (IF_Else)

    IF_Else  go to state 158


State 157

   91 IF_Else: ELSE . Stmt

    IDENT   shift, and go to state 29
    LCURLY  shift, and go to state 107
    IF      shift, and go to state 120
    WHILE   shift, and go to state 121
    RETURN  shift, and go to state 122
    SEMI    shift, and go to state 123
    NUMBER  shift, and go to state 30

    Exp         go to state 125
    AddExp      go to state 39
    MulExp      go to state 33
    UnaryExp    go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 126
    Block       go to state 127
    Stmt        go to state 159


State 158

   87 Stmt: IF LPAREN Cond RPAREN $@15 Stmt $@16 IF_Else .

    $default  reduce using rule 87 (Stmt)


State 159

   91 IF_Else: ELSE Stmt .

    $default  reduce using rule 91 (IF_Else)
