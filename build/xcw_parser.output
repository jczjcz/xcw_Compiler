Terminals unused in grammar

   LE
   LEQ
   GE
   GEQ
   EQ
   NEQ
   AND
   OR
   NOT
   IF
   ELSE
   WHILE
   BREAK
   CONT
   RETURN
   PERIOD


State 99 conflicts: 1 shift/reduce
State 108 conflicts: 2 shift/reduce
State 114 conflicts: 3 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompDecl
    2         | CompUnit CompDecl

    3 CompDecl: Decl
    4         | FuncDef

    5 Decl: ConstDecl
    6     | VarDecl

    7 ConstDecl: CONST INT ConstDefs SEMI

    8 ConstDefs: ConstDef
    9          | ConstDefs COMMA ConstDef

   10 ConstDef: IDENT ASSIGN ConstInitVal

   11 $@1: %empty

   12 $@2: %empty

   13 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   14 ConstInitVal: ConstExp

   15 ConstExp: AddExp

   16 VarDecl: INT VarDefs SEMI

   17 VarDefs: VarDef
   18        | VarDefs COMMA VarDef

   19 VarDef: IDENT
   20       | IDENT ASSIGN InitVal
   21       | IDENT ArrayDef

   22 $@3: %empty

   23 $@4: %empty

   24 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

   25 ArrayInit: %empty
   26          | ArrayExps

   27 ArrayExps: ArrayExp
   28          | ArrayExps COMMA ArrayExp

   29 ArrayExp: Exp

   30 $@5: %empty

   31 ArrayExp: LCURLY $@5 ArrayInit RCURLY

   32 ArrayDef: ArrayUnit
   33         | ArrayDef ArrayUnit

   34 ArrayUnit: LBRAC ConstExp RBRAC

   35 InitVal: Exp

   36 Exp: AddExp

   37 AddExp: MulExp
   38       | AddExp ADD MulExp
   39       | AddExp SUB MulExp

   40 MulExp: UnaryExp
   41       | MulExp MUL UnaryExp
   42       | MulExp DIV UnaryExp
   43       | MulExp MOD UnaryExp

   44 UnaryExp: PrimaryExp

   45 PrimaryExp: NUMBER
   46           | LVal

   47 LVal: IDENT

   48 $@6: %empty

   49 LVal: IDENT $@6 ArrayLVals

   50 ArrayLVals: ArrayLVal
   51           | ArrayLVals ArrayLVal

   52 ArrayLVal: LBRAC Exp RBRAC

   53 $@7: %empty

   54 $@8: %empty

   55 $@9: %empty

   56 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

   57 $@10: %empty

   58 $@11: %empty

   59 $@12: %empty

   60 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

   61 FuncFParams: %empty
   62            | FuncFParam
   63            | FuncFParams COMMA FuncFParam

   64 FuncFParam: INT IDENT
   65           | INT IDENT LBRAC RBRAC ArrayParamDef

   66 ArrayParamDef: ArrayUnit
   67              | ArrayParamDef ArrayUnit
   68              | %empty

   69 $@13: %empty

   70 Block: LCURLY $@13 BlockItems RCURLY

   71 BlockItems: BlockItem
   72           | BlockItems BlockItem

   73 BlockItem: %empty
   74          | Decl


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 38
SUB (259) 39
MUL (260) 41
DIV (261) 42
MOD (262) 43
IDENT (263) 10 13 19 20 21 24 47 49 56 60 64 65
LPAREN (264) 56 60
RPAREN (265) 56 60
LCURLY (266) 13 24 31 70
RCURLY (267) 13 24 31 70
LBRAC (268) 34 52 65
RBRAC (269) 34 52 65
INT (270) 7 16 56 64 65
CONST (271) 7
VOID (272) 60
LE (273)
LEQ (274)
GE (275)
GEQ (276)
EQ (277)
NEQ (278)
AND (279)
OR (280)
NOT (281)
IF (282)
ELSE (283)
WHILE (284)
BREAK (285)
CONT (286)
RETURN (287)
ASSIGN (288) 10 13 20 24
SEMI (289) 7 16
COMMA (290) 9 18 28 63
PERIOD (291)
NUMBER (292) 45


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
CompDecl (40)
    on left: 3 4, on right: 1 2
Decl (41)
    on left: 5 6, on right: 3 74
ConstDecl (42)
    on left: 7, on right: 5
ConstDefs (43)
    on left: 8 9, on right: 7 9
ConstDef (44)
    on left: 10 13, on right: 8 9
$@1 (45)
    on left: 11, on right: 13
$@2 (46)
    on left: 12, on right: 13
ConstInitVal (47)
    on left: 14, on right: 10
ConstExp (48)
    on left: 15, on right: 14 34
VarDecl (49)
    on left: 16, on right: 6
VarDefs (50)
    on left: 17 18, on right: 16 18
VarDef (51)
    on left: 19 20 21 24, on right: 17 18
$@3 (52)
    on left: 22, on right: 24
$@4 (53)
    on left: 23, on right: 24
ArrayInit (54)
    on left: 25 26, on right: 13 24 31
ArrayExps (55)
    on left: 27 28, on right: 26 28
ArrayExp (56)
    on left: 29 31, on right: 27 28
$@5 (57)
    on left: 30, on right: 31
ArrayDef (58)
    on left: 32 33, on right: 13 21 24 33
ArrayUnit (59)
    on left: 34, on right: 32 33 66 67
InitVal (60)
    on left: 35, on right: 20
Exp (61)
    on left: 36, on right: 29 35 52
AddExp (62)
    on left: 37 38 39, on right: 15 36 38 39
MulExp (63)
    on left: 40 41 42 43, on right: 37 38 39 41 42 43
UnaryExp (64)
    on left: 44, on right: 40 41 42 43
PrimaryExp (65)
    on left: 45 46, on right: 44
LVal (66)
    on left: 47 49, on right: 46
$@6 (67)
    on left: 48, on right: 49
ArrayLVals (68)
    on left: 50 51, on right: 49 51
ArrayLVal (69)
    on left: 52, on right: 50 51
FuncDef (70)
    on left: 56 60, on right: 4
$@7 (71)
    on left: 53, on right: 56
$@8 (72)
    on left: 54, on right: 56
$@9 (73)
    on left: 55, on right: 56
$@10 (74)
    on left: 57, on right: 60
$@11 (75)
    on left: 58, on right: 60
$@12 (76)
    on left: 59, on right: 60
FuncFParams (77)
    on left: 61 62 63, on right: 56 60 63
FuncFParam (78)
    on left: 64 65, on right: 62 63
ArrayParamDef (79)
    on left: 66 67 68, on right: 65 67
Block (80)
    on left: 70, on right: 56 60
$@13 (81)
    on left: 69, on right: 70
BlockItems (82)
    on left: 71 72, on right: 70 72
BlockItem (83)
    on left: 73 74, on right: 71 72


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit   go to state 4
    CompDecl   go to state 5
    Decl       go to state 6
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 1

   16 VarDecl: INT . VarDefs SEMI
   56 FuncDef: INT . IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

    IDENT  shift, and go to state 10

    VarDefs  go to state 11
    VarDef   go to state 12


State 2

    7 ConstDecl: CONST . INT ConstDefs SEMI

    INT  shift, and go to state 13


State 3

   60 FuncDef: VOID . IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    IDENT  shift, and go to state 14


State 4

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . CompDecl

    $end   shift, and go to state 15
    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompDecl   go to state 16
    Decl       go to state 6
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 5

    1 CompUnit: CompDecl .

    $default  reduce using rule 1 (CompUnit)


State 6

    3 CompDecl: Decl .

    $default  reduce using rule 3 (CompDecl)


State 7

    5 Decl: ConstDecl .

    $default  reduce using rule 5 (Decl)


State 8

    6 Decl: VarDecl .

    $default  reduce using rule 6 (Decl)


State 9

    4 CompDecl: FuncDef .

    $default  reduce using rule 4 (CompDecl)


State 10

   19 VarDef: IDENT .
   20       | IDENT . ASSIGN InitVal
   21       | IDENT . ArrayDef
   24       | IDENT . ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY
   56 FuncDef: INT IDENT . $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    LPAREN    reduce using rule 53 ($@7)
    $default  reduce using rule 19 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20
    $@7        go to state 21


State 11

   16 VarDecl: INT VarDefs . SEMI
   18 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 12

   17 VarDefs: VarDef .

    $default  reduce using rule 17 (VarDefs)


State 13

    7 ConstDecl: CONST INT . ConstDefs SEMI

    IDENT  shift, and go to state 24

    ConstDefs  go to state 25
    ConstDef   go to state 26


State 14

   60 FuncDef: VOID IDENT . $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    $default  reduce using rule 57 ($@10)

    $@10  go to state 27


State 15

    0 $accept: CompUnit $end .

    $default  accept


State 16

    2 CompUnit: CompUnit CompDecl .

    $default  reduce using rule 2 (CompUnit)


State 17

   34 ArrayUnit: LBRAC . ConstExp RBRAC

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    ConstExp    go to state 30
    AddExp      go to state 31
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 18

   20 VarDef: IDENT ASSIGN . InitVal

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    InitVal     go to state 36
    Exp         go to state 37
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 19

   21 VarDef: IDENT ArrayDef .
   24       | IDENT ArrayDef . ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY
   33 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 39

    $default  reduce using rule 21 (VarDef)

    ArrayUnit  go to state 40


State 20

   32 ArrayDef: ArrayUnit .

    $default  reduce using rule 32 (ArrayDef)


State 21

   56 FuncDef: INT IDENT $@7 . LPAREN $@8 FuncFParams RPAREN $@9 Block

    LPAREN  shift, and go to state 41


State 22

   16 VarDecl: INT VarDefs SEMI .

    $default  reduce using rule 16 (VarDecl)


State 23

   18 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 42

    VarDef  go to state 43


State 24

   10 ConstDef: IDENT . ASSIGN ConstInitVal
   13         | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 44

    ArrayDef   go to state 45
    ArrayUnit  go to state 20


State 25

    7 ConstDecl: CONST INT ConstDefs . SEMI
    9 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 46
    COMMA  shift, and go to state 47


State 26

    8 ConstDefs: ConstDef .

    $default  reduce using rule 8 (ConstDefs)


State 27

   60 FuncDef: VOID IDENT $@10 . LPAREN $@11 FuncFParams RPAREN $@12 Block

    LPAREN  shift, and go to state 48


State 28

   47 LVal: IDENT .
   49     | IDENT . $@6 ArrayLVals

    LBRAC     reduce using rule 48 ($@6)
    $default  reduce using rule 47 (LVal)

    $@6  go to state 49


State 29

   45 PrimaryExp: NUMBER .

    $default  reduce using rule 45 (PrimaryExp)


State 30

   34 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 50


State 31

   15 ConstExp: AddExp .
   38 AddExp: AddExp . ADD MulExp
   39       | AddExp . SUB MulExp

    ADD  shift, and go to state 51
    SUB  shift, and go to state 52

    $default  reduce using rule 15 (ConstExp)


State 32

   37 AddExp: MulExp .
   41 MulExp: MulExp . MUL UnaryExp
   42       | MulExp . DIV UnaryExp
   43       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 37 (AddExp)


State 33

   40 MulExp: UnaryExp .

    $default  reduce using rule 40 (MulExp)


State 34

   44 UnaryExp: PrimaryExp .

    $default  reduce using rule 44 (UnaryExp)


State 35

   46 PrimaryExp: LVal .

    $default  reduce using rule 46 (PrimaryExp)


State 36

   20 VarDef: IDENT ASSIGN InitVal .

    $default  reduce using rule 20 (VarDef)


State 37

   35 InitVal: Exp .

    $default  reduce using rule 35 (InitVal)


State 38

   36 Exp: AddExp .
   38 AddExp: AddExp . ADD MulExp
   39       | AddExp . SUB MulExp

    ADD  shift, and go to state 51
    SUB  shift, and go to state 52

    $default  reduce using rule 36 (Exp)


State 39

   24 VarDef: IDENT ArrayDef ASSIGN . $@3 LCURLY $@4 ArrayInit RCURLY

    $default  reduce using rule 22 ($@3)

    $@3  go to state 56


State 40

   33 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 33 (ArrayDef)


State 41

   56 FuncDef: INT IDENT $@7 LPAREN . $@8 FuncFParams RPAREN $@9 Block

    $default  reduce using rule 54 ($@8)

    $@8  go to state 57


State 42

   19 VarDef: IDENT .
   20       | IDENT . ASSIGN InitVal
   21       | IDENT . ArrayDef
   24       | IDENT . ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    $default  reduce using rule 19 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20


State 43

   18 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 18 (VarDefs)


State 44

   10 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    ConstInitVal  go to state 58
    ConstExp      go to state 59
    AddExp        go to state 31
    MulExp        go to state 32
    UnaryExp      go to state 33
    PrimaryExp    go to state 34
    LVal          go to state 35


State 45

   13 ConstDef: IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   33 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 60

    ArrayUnit  go to state 40


State 46

    7 ConstDecl: CONST INT ConstDefs SEMI .

    $default  reduce using rule 7 (ConstDecl)


State 47

    9 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 24

    ConstDef  go to state 61


State 48

   60 FuncDef: VOID IDENT $@10 LPAREN . $@11 FuncFParams RPAREN $@12 Block

    $default  reduce using rule 58 ($@11)

    $@11  go to state 62


State 49

   49 LVal: IDENT $@6 . ArrayLVals

    LBRAC  shift, and go to state 63

    ArrayLVals  go to state 64
    ArrayLVal   go to state 65


State 50

   34 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 34 (ArrayUnit)


State 51

   38 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    MulExp      go to state 66
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 52

   39 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    MulExp      go to state 67
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 53

   41 MulExp: MulExp MUL . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 68
    PrimaryExp  go to state 34
    LVal        go to state 35


State 54

   42 MulExp: MulExp DIV . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 69
    PrimaryExp  go to state 34
    LVal        go to state 35


State 55

   43 MulExp: MulExp MOD . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 70
    PrimaryExp  go to state 34
    LVal        go to state 35


State 56

   24 VarDef: IDENT ArrayDef ASSIGN $@3 . LCURLY $@4 ArrayInit RCURLY

    LCURLY  shift, and go to state 71


State 57

   56 FuncDef: INT IDENT $@7 LPAREN $@8 . FuncFParams RPAREN $@9 Block

    INT  shift, and go to state 72

    $default  reduce using rule 61 (FuncFParams)

    FuncFParams  go to state 73
    FuncFParam   go to state 74


State 58

   10 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 10 (ConstDef)


State 59

   14 ConstInitVal: ConstExp .

    $default  reduce using rule 14 (ConstInitVal)


State 60

   13 ConstDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 11 ($@1)

    $@1  go to state 75


State 61

    9 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 9 (ConstDefs)


State 62

   60 FuncDef: VOID IDENT $@10 LPAREN $@11 . FuncFParams RPAREN $@12 Block

    INT  shift, and go to state 72

    $default  reduce using rule 61 (FuncFParams)

    FuncFParams  go to state 76
    FuncFParam   go to state 74


State 63

   52 ArrayLVal: LBRAC . Exp RBRAC

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    Exp         go to state 77
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 64

   49 LVal: IDENT $@6 ArrayLVals .
   51 ArrayLVals: ArrayLVals . ArrayLVal

    LBRAC  shift, and go to state 63

    $default  reduce using rule 49 (LVal)

    ArrayLVal  go to state 78


State 65

   50 ArrayLVals: ArrayLVal .

    $default  reduce using rule 50 (ArrayLVals)


State 66

   38 AddExp: AddExp ADD MulExp .
   41 MulExp: MulExp . MUL UnaryExp
   42       | MulExp . DIV UnaryExp
   43       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 38 (AddExp)


State 67

   39 AddExp: AddExp SUB MulExp .
   41 MulExp: MulExp . MUL UnaryExp
   42       | MulExp . DIV UnaryExp
   43       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 39 (AddExp)


State 68

   41 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 41 (MulExp)


State 69

   42 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 42 (MulExp)


State 70

   43 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 43 (MulExp)


State 71

   24 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY . $@4 ArrayInit RCURLY

    $default  reduce using rule 23 ($@4)

    $@4  go to state 79


State 72

   64 FuncFParam: INT . IDENT
   65           | INT . IDENT LBRAC RBRAC ArrayParamDef

    IDENT  shift, and go to state 80


State 73

   56 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams . RPAREN $@9 Block
   63 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 81
    COMMA   shift, and go to state 82


State 74

   62 FuncFParams: FuncFParam .

    $default  reduce using rule 62 (FuncFParams)


State 75

   13 ConstDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 83


State 76

   60 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams . RPAREN $@12 Block
   63 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 84
    COMMA   shift, and go to state 82


State 77

   52 ArrayLVal: LBRAC Exp . RBRAC

    RBRAC  shift, and go to state 85


State 78

   51 ArrayLVals: ArrayLVals ArrayLVal .

    $default  reduce using rule 51 (ArrayLVals)


State 79

   24 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 86
    NUMBER  shift, and go to state 29

    $default  reduce using rule 25 (ArrayInit)

    ArrayInit   go to state 87
    ArrayExps   go to state 88
    ArrayExp    go to state 89
    Exp         go to state 90
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 80

   64 FuncFParam: INT IDENT .
   65           | INT IDENT . LBRAC RBRAC ArrayParamDef

    LBRAC  shift, and go to state 91

    $default  reduce using rule 64 (FuncFParam)


State 81

   56 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN . $@9 Block

    $default  reduce using rule 55 ($@9)

    $@9  go to state 92


State 82

   63 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 72

    FuncFParam  go to state 93


State 83

   13 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 12 ($@2)

    $@2  go to state 94


State 84

   60 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN . $@12 Block

    $default  reduce using rule 59 ($@12)

    $@12  go to state 95


State 85

   52 ArrayLVal: LBRAC Exp RBRAC .

    $default  reduce using rule 52 (ArrayLVal)


State 86

   31 ArrayExp: LCURLY . $@5 ArrayInit RCURLY

    $default  reduce using rule 30 ($@5)

    $@5  go to state 96


State 87

   24 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit . RCURLY

    RCURLY  shift, and go to state 97


State 88

   26 ArrayInit: ArrayExps .
   28 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 98

    $default  reduce using rule 26 (ArrayInit)


State 89

   27 ArrayExps: ArrayExp .

    $default  reduce using rule 27 (ArrayExps)


State 90

   29 ArrayExp: Exp .

    $default  reduce using rule 29 (ArrayExp)


State 91

   65 FuncFParam: INT IDENT LBRAC . RBRAC ArrayParamDef

    RBRAC  shift, and go to state 99


State 92

   56 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 . Block

    LCURLY  shift, and go to state 100

    Block  go to state 101


State 93

   63 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 63 (FuncFParams)


State 94

   13 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 86
    NUMBER  shift, and go to state 29

    $default  reduce using rule 25 (ArrayInit)

    ArrayInit   go to state 102
    ArrayExps   go to state 88
    ArrayExp    go to state 89
    Exp         go to state 90
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 95

   60 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 . Block

    LCURLY  shift, and go to state 100

    Block  go to state 103


State 96

   31 ArrayExp: LCURLY $@5 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 86
    NUMBER  shift, and go to state 29

    $default  reduce using rule 25 (ArrayInit)

    ArrayInit   go to state 104
    ArrayExps   go to state 88
    ArrayExp    go to state 89
    Exp         go to state 90
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 97

   24 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY .

    $default  reduce using rule 24 (VarDef)


State 98

   28 ArrayExps: ArrayExps COMMA . ArrayExp

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 86
    NUMBER  shift, and go to state 29

    ArrayExp    go to state 105
    Exp         go to state 90
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 99

   65 FuncFParam: INT IDENT LBRAC RBRAC . ArrayParamDef

    LBRAC  shift, and go to state 17

    LBRAC     [reduce using rule 68 (ArrayParamDef)]
    $default  reduce using rule 68 (ArrayParamDef)

    ArrayUnit      go to state 106
    ArrayParamDef  go to state 107


State 100

   70 Block: LCURLY . $@13 BlockItems RCURLY

    $default  reduce using rule 69 ($@13)

    $@13  go to state 108


State 101

   56 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block .

    $default  reduce using rule 56 (FuncDef)


State 102

   13 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 109


State 103

   60 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block .

    $default  reduce using rule 60 (FuncDef)


State 104

   31 ArrayExp: LCURLY $@5 ArrayInit . RCURLY

    RCURLY  shift, and go to state 110


State 105

   28 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 28 (ArrayExps)


State 106

   66 ArrayParamDef: ArrayUnit .

    $default  reduce using rule 66 (ArrayParamDef)


State 107

   65 FuncFParam: INT IDENT LBRAC RBRAC ArrayParamDef .
   67 ArrayParamDef: ArrayParamDef . ArrayUnit

    LBRAC  shift, and go to state 17

    $default  reduce using rule 65 (FuncFParam)

    ArrayUnit  go to state 111


State 108

   70 Block: LCURLY $@13 . BlockItems RCURLY

    INT    shift, and go to state 112
    CONST  shift, and go to state 2

    INT       [reduce using rule 73 (BlockItem)]
    CONST     [reduce using rule 73 (BlockItem)]
    $default  reduce using rule 73 (BlockItem)

    Decl        go to state 113
    ConstDecl   go to state 7
    VarDecl     go to state 8
    BlockItems  go to state 114
    BlockItem   go to state 115


State 109

   13 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 13 (ConstDef)


State 110

   31 ArrayExp: LCURLY $@5 ArrayInit RCURLY .

    $default  reduce using rule 31 (ArrayExp)


State 111

   67 ArrayParamDef: ArrayParamDef ArrayUnit .

    $default  reduce using rule 67 (ArrayParamDef)


State 112

   16 VarDecl: INT . VarDefs SEMI

    IDENT  shift, and go to state 42

    VarDefs  go to state 11
    VarDef   go to state 12


State 113

   74 BlockItem: Decl .

    $default  reduce using rule 74 (BlockItem)


State 114

   70 Block: LCURLY $@13 BlockItems . RCURLY
   72 BlockItems: BlockItems . BlockItem

    RCURLY  shift, and go to state 116
    INT     shift, and go to state 112
    CONST   shift, and go to state 2

    RCURLY  [reduce using rule 73 (BlockItem)]
    INT     [reduce using rule 73 (BlockItem)]
    CONST   [reduce using rule 73 (BlockItem)]

    Decl       go to state 113
    ConstDecl  go to state 7
    VarDecl    go to state 8
    BlockItem  go to state 117


State 115

   71 BlockItems: BlockItem .

    $default  reduce using rule 71 (BlockItems)


State 116

   70 Block: LCURLY $@13 BlockItems RCURLY .

    $default  reduce using rule 70 (Block)


State 117

   72 BlockItems: BlockItems BlockItem .

    $default  reduce using rule 72 (BlockItems)
