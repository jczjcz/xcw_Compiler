Terminals unused in grammar

   LPAREN
   RPAREN
   VOID
   LE
   LEQ
   GE
   GEQ
   EQ
   NEQ
   AND
   OR
   NOT
   IF
   ELSE
   WHILE
   BREAK
   CONT
   RETURN
   PERIOD


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: Decl
    2         | CompUnit Decl

    3 Decl: ConstDecl
    4     | VarDecl

    5 ConstDecl: CONST BType ConstDefs SEMI

    6 ConstDefs: ConstDef
    7          | ConstDefs COMMA ConstDef

    8 ConstDef: IDENT ASSIGN ConstInitVal

    9 ConstInitVal: ConstExp

   10 ConstExp: AddExp

   11 VarDecl: BType VarDefs SEMI

   12 BType: INT

   13 VarDefs: VarDef
   14        | VarDefs COMMA VarDef

   15 VarDef: IDENT
   16       | IDENT ASSIGN InitVal
   17       | IDENT ArrayDef

   18 $@1: %empty

   19 $@2: %empty

   20 VarDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   21 ArrayInit: %empty
   22          | ArrayExps

   23 ArrayExps: ArrayExp
   24          | ArrayExps COMMA ArrayExp

   25 ArrayExp: Exp

   26 $@3: %empty

   27 ArrayExp: LCURLY $@3 ArrayInit RCURLY

   28 ArrayDef: ArrayUnit
   29         | ArrayDef ArrayUnit

   30 ArrayUnit: LBRAC ConstExp RBRAC

   31 InitVal: Exp

   32 Exp: AddExp

   33 AddExp: MulExp
   34       | AddExp ADD MulExp
   35       | AddExp SUB MulExp

   36 MulExp: UnaryExp
   37       | MulExp MUL UnaryExp
   38       | MulExp DIV UnaryExp
   39       | MulExp MOD UnaryExp

   40 UnaryExp: PrimaryExp

   41 PrimaryExp: NUMBER
   42           | LVal

   43 LVal: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 34
SUB (259) 35
MUL (260) 37
DIV (261) 38
MOD (262) 39
IDENT (263) 8 15 16 17 20 43
LPAREN (264)
RPAREN (265)
LCURLY (266) 20 27
RCURLY (267) 20 27
LBRAC (268) 30
RBRAC (269) 30
INT (270) 12
CONST (271) 5
VOID (272)
LE (273)
LEQ (274)
GE (275)
GEQ (276)
EQ (277)
NEQ (278)
AND (279)
OR (280)
NOT (281)
IF (282)
ELSE (283)
WHILE (284)
BREAK (285)
CONT (286)
RETURN (287)
ASSIGN (288) 8 16 20
SEMI (289) 5 11
COMMA (290) 7 14 24
PERIOD (291)
NUMBER (292) 41


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
Decl (40)
    on left: 3 4, on right: 1 2
ConstDecl (41)
    on left: 5, on right: 3
ConstDefs (42)
    on left: 6 7, on right: 5 7
ConstDef (43)
    on left: 8, on right: 6 7
ConstInitVal (44)
    on left: 9, on right: 8
ConstExp (45)
    on left: 10, on right: 9 30
VarDecl (46)
    on left: 11, on right: 4
BType (47)
    on left: 12, on right: 5 11
VarDefs (48)
    on left: 13 14, on right: 11 14
VarDef (49)
    on left: 15 16 17 20, on right: 13 14
$@1 (50)
    on left: 18, on right: 20
$@2 (51)
    on left: 19, on right: 20
ArrayInit (52)
    on left: 21 22, on right: 20 27
ArrayExps (53)
    on left: 23 24, on right: 22 24
ArrayExp (54)
    on left: 25 27, on right: 23 24
$@3 (55)
    on left: 26, on right: 27
ArrayDef (56)
    on left: 28 29, on right: 17 20 29
ArrayUnit (57)
    on left: 30, on right: 28 29
InitVal (58)
    on left: 31, on right: 16
Exp (59)
    on left: 32, on right: 25 31
AddExp (60)
    on left: 33 34 35, on right: 10 32 34 35
MulExp (61)
    on left: 36 37 38 39, on right: 33 34 35 37 38 39
UnaryExp (62)
    on left: 40, on right: 36 37 38 39
PrimaryExp (63)
    on left: 41 42, on right: 40
LVal (64)
    on left: 43, on right: 42


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2

    CompUnit   go to state 3
    Decl       go to state 4
    ConstDecl  go to state 5
    VarDecl    go to state 6
    BType      go to state 7


State 1

   12 BType: INT .

    $default  reduce using rule 12 (BType)


State 2

    5 ConstDecl: CONST . BType ConstDefs SEMI

    INT  shift, and go to state 1

    BType  go to state 8


State 3

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . Decl

    $end   shift, and go to state 9
    INT    shift, and go to state 1
    CONST  shift, and go to state 2

    Decl       go to state 10
    ConstDecl  go to state 5
    VarDecl    go to state 6
    BType      go to state 7


State 4

    1 CompUnit: Decl .

    $default  reduce using rule 1 (CompUnit)


State 5

    3 Decl: ConstDecl .

    $default  reduce using rule 3 (Decl)


State 6

    4 Decl: VarDecl .

    $default  reduce using rule 4 (Decl)


State 7

   11 VarDecl: BType . VarDefs SEMI

    IDENT  shift, and go to state 11

    VarDefs  go to state 12
    VarDef   go to state 13


State 8

    5 ConstDecl: CONST BType . ConstDefs SEMI

    IDENT  shift, and go to state 14

    ConstDefs  go to state 15
    ConstDef   go to state 16


State 9

    0 $accept: CompUnit $end .

    $default  accept


State 10

    2 CompUnit: CompUnit Decl .

    $default  reduce using rule 2 (CompUnit)


State 11

   15 VarDef: IDENT .
   16       | IDENT . ASSIGN InitVal
   17       | IDENT . ArrayDef
   20       | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    $default  reduce using rule 15 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20


State 12

   11 VarDecl: BType VarDefs . SEMI
   14 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 21
    COMMA  shift, and go to state 22


State 13

   13 VarDefs: VarDef .

    $default  reduce using rule 13 (VarDefs)


State 14

    8 ConstDef: IDENT . ASSIGN ConstInitVal

    ASSIGN  shift, and go to state 23


State 15

    5 ConstDecl: CONST BType ConstDefs . SEMI
    7 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 24
    COMMA  shift, and go to state 25


State 16

    6 ConstDefs: ConstDef .

    $default  reduce using rule 6 (ConstDefs)


State 17

   30 ArrayUnit: LBRAC . ConstExp RBRAC

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    ConstExp    go to state 28
    AddExp      go to state 29
    MulExp      go to state 30
    UnaryExp    go to state 31
    PrimaryExp  go to state 32
    LVal        go to state 33


State 18

   16 VarDef: IDENT ASSIGN . InitVal

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    InitVal     go to state 34
    Exp         go to state 35
    AddExp      go to state 36
    MulExp      go to state 30
    UnaryExp    go to state 31
    PrimaryExp  go to state 32
    LVal        go to state 33


State 19

   17 VarDef: IDENT ArrayDef .
   20       | IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   29 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 37

    $default  reduce using rule 17 (VarDef)

    ArrayUnit  go to state 38


State 20

   28 ArrayDef: ArrayUnit .

    $default  reduce using rule 28 (ArrayDef)


State 21

   11 VarDecl: BType VarDefs SEMI .

    $default  reduce using rule 11 (VarDecl)


State 22

   14 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 11

    VarDef  go to state 39


State 23

    8 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    ConstInitVal  go to state 40
    ConstExp      go to state 41
    AddExp        go to state 29
    MulExp        go to state 30
    UnaryExp      go to state 31
    PrimaryExp    go to state 32
    LVal          go to state 33


State 24

    5 ConstDecl: CONST BType ConstDefs SEMI .

    $default  reduce using rule 5 (ConstDecl)


State 25

    7 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 14

    ConstDef  go to state 42


State 26

   43 LVal: IDENT .

    $default  reduce using rule 43 (LVal)


State 27

   41 PrimaryExp: NUMBER .

    $default  reduce using rule 41 (PrimaryExp)


State 28

   30 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 43


State 29

   10 ConstExp: AddExp .
   34 AddExp: AddExp . ADD MulExp
   35       | AddExp . SUB MulExp

    ADD  shift, and go to state 44
    SUB  shift, and go to state 45

    $default  reduce using rule 10 (ConstExp)


State 30

   33 AddExp: MulExp .
   37 MulExp: MulExp . MUL UnaryExp
   38       | MulExp . DIV UnaryExp
   39       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 46
    DIV  shift, and go to state 47
    MOD  shift, and go to state 48

    $default  reduce using rule 33 (AddExp)


State 31

   36 MulExp: UnaryExp .

    $default  reduce using rule 36 (MulExp)


State 32

   40 UnaryExp: PrimaryExp .

    $default  reduce using rule 40 (UnaryExp)


State 33

   42 PrimaryExp: LVal .

    $default  reduce using rule 42 (PrimaryExp)


State 34

   16 VarDef: IDENT ASSIGN InitVal .

    $default  reduce using rule 16 (VarDef)


State 35

   31 InitVal: Exp .

    $default  reduce using rule 31 (InitVal)


State 36

   32 Exp: AddExp .
   34 AddExp: AddExp . ADD MulExp
   35       | AddExp . SUB MulExp

    ADD  shift, and go to state 44
    SUB  shift, and go to state 45

    $default  reduce using rule 32 (Exp)


State 37

   20 VarDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 18 ($@1)

    $@1  go to state 49


State 38

   29 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 29 (ArrayDef)


State 39

   14 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 14 (VarDefs)


State 40

    8 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 8 (ConstDef)


State 41

    9 ConstInitVal: ConstExp .

    $default  reduce using rule 9 (ConstInitVal)


State 42

    7 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 7 (ConstDefs)


State 43

   30 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 30 (ArrayUnit)


State 44

   34 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    MulExp      go to state 50
    UnaryExp    go to state 31
    PrimaryExp  go to state 32
    LVal        go to state 33


State 45

   35 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    MulExp      go to state 51
    UnaryExp    go to state 31
    PrimaryExp  go to state 32
    LVal        go to state 33


State 46

   37 MulExp: MulExp MUL . UnaryExp

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    UnaryExp    go to state 52
    PrimaryExp  go to state 32
    LVal        go to state 33


State 47

   38 MulExp: MulExp DIV . UnaryExp

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    UnaryExp    go to state 53
    PrimaryExp  go to state 32
    LVal        go to state 33


State 48

   39 MulExp: MulExp MOD . UnaryExp

    IDENT   shift, and go to state 26
    NUMBER  shift, and go to state 27

    UnaryExp    go to state 54
    PrimaryExp  go to state 32
    LVal        go to state 33


State 49

   20 VarDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 55


State 50

   34 AddExp: AddExp ADD MulExp .
   37 MulExp: MulExp . MUL UnaryExp
   38       | MulExp . DIV UnaryExp
   39       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 46
    DIV  shift, and go to state 47
    MOD  shift, and go to state 48

    $default  reduce using rule 34 (AddExp)


State 51

   35 AddExp: AddExp SUB MulExp .
   37 MulExp: MulExp . MUL UnaryExp
   38       | MulExp . DIV UnaryExp
   39       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 46
    DIV  shift, and go to state 47
    MOD  shift, and go to state 48

    $default  reduce using rule 35 (AddExp)


State 52

   37 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 37 (MulExp)


State 53

   38 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 38 (MulExp)


State 54

   39 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 39 (MulExp)


State 55

   20 VarDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 19 ($@2)

    $@2  go to state 56


State 56

   20 VarDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    IDENT   shift, and go to state 26
    LCURLY  shift, and go to state 57
    NUMBER  shift, and go to state 27

    $default  reduce using rule 21 (ArrayInit)

    ArrayInit   go to state 58
    ArrayExps   go to state 59
    ArrayExp    go to state 60
    Exp         go to state 61
    AddExp      go to state 36
    MulExp      go to state 30
    UnaryExp    go to state 31
    PrimaryExp  go to state 32
    LVal        go to state 33


State 57

   27 ArrayExp: LCURLY . $@3 ArrayInit RCURLY

    $default  reduce using rule 26 ($@3)

    $@3  go to state 62


State 58

   20 VarDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 63


State 59

   22 ArrayInit: ArrayExps .
   24 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 64

    $default  reduce using rule 22 (ArrayInit)


State 60

   23 ArrayExps: ArrayExp .

    $default  reduce using rule 23 (ArrayExps)


State 61

   25 ArrayExp: Exp .

    $default  reduce using rule 25 (ArrayExp)


State 62

   27 ArrayExp: LCURLY $@3 . ArrayInit RCURLY

    IDENT   shift, and go to state 26
    LCURLY  shift, and go to state 57
    NUMBER  shift, and go to state 27

    $default  reduce using rule 21 (ArrayInit)

    ArrayInit   go to state 65
    ArrayExps   go to state 59
    ArrayExp    go to state 60
    Exp         go to state 61
    AddExp      go to state 36
    MulExp      go to state 30
    UnaryExp    go to state 31
    PrimaryExp  go to state 32
    LVal        go to state 33


State 63

   20 VarDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 20 (VarDef)


State 64

   24 ArrayExps: ArrayExps COMMA . ArrayExp

    IDENT   shift, and go to state 26
    LCURLY  shift, and go to state 57
    NUMBER  shift, and go to state 27

    ArrayExp    go to state 66
    Exp         go to state 61
    AddExp      go to state 36
    MulExp      go to state 30
    UnaryExp    go to state 31
    PrimaryExp  go to state 32
    LVal        go to state 33


State 65

   27 ArrayExp: LCURLY $@3 ArrayInit . RCURLY

    RCURLY  shift, and go to state 67


State 66

   24 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 24 (ArrayExps)


State 67

   27 ArrayExp: LCURLY $@3 ArrayInit RCURLY .

    $default  reduce using rule 27 (ArrayExp)
