Terminals unused in grammar

   LPAREN
   RPAREN
   VOID
   LE
   LEQ
   GE
   GEQ
   EQ
   NEQ
   AND
   OR
   NOT
   IF
   ELSE
   WHILE
   BREAK
   CONT
   RETURN
   PERIOD


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: Decl
    2         | CompUnit Decl

    3 Decl: ConstDecl
    4     | VarDecl

    5 ConstDecl: CONST BType ConstDefs SEMI

    6 ConstDefs: ConstDef
    7          | ConstDefs COMMA ConstDef

    8 ConstDef: IDENT ASSIGN ConstInitVal

    9 $@1: %empty

   10 $@2: %empty

   11 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   12 ConstInitVal: ConstExp

   13 ConstExp: AddExp

   14 VarDecl: BType VarDefs SEMI

   15 BType: INT

   16 VarDefs: VarDef
   17        | VarDefs COMMA VarDef

   18 VarDef: IDENT
   19       | IDENT ASSIGN InitVal
   20       | IDENT ArrayDef

   21 $@3: %empty

   22 $@4: %empty

   23 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

   24 ArrayInit: %empty
   25          | ArrayExps

   26 ArrayExps: ArrayExp
   27          | ArrayExps COMMA ArrayExp

   28 ArrayExp: Exp

   29 $@5: %empty

   30 ArrayExp: LCURLY $@5 ArrayInit RCURLY

   31 ArrayDef: ArrayUnit
   32         | ArrayDef ArrayUnit

   33 ArrayUnit: LBRAC ConstExp RBRAC

   34 InitVal: Exp

   35 Exp: AddExp

   36 AddExp: MulExp
   37       | AddExp ADD MulExp
   38       | AddExp SUB MulExp

   39 MulExp: UnaryExp
   40       | MulExp MUL UnaryExp
   41       | MulExp DIV UnaryExp
   42       | MulExp MOD UnaryExp

   43 UnaryExp: PrimaryExp

   44 PrimaryExp: NUMBER
   45           | LVal

   46 LVal: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 37
SUB (259) 38
MUL (260) 40
DIV (261) 41
MOD (262) 42
IDENT (263) 8 11 18 19 20 23 46
LPAREN (264)
RPAREN (265)
LCURLY (266) 11 23 30
RCURLY (267) 11 23 30
LBRAC (268) 33
RBRAC (269) 33
INT (270) 15
CONST (271) 5
VOID (272)
LE (273)
LEQ (274)
GE (275)
GEQ (276)
EQ (277)
NEQ (278)
AND (279)
OR (280)
NOT (281)
IF (282)
ELSE (283)
WHILE (284)
BREAK (285)
CONT (286)
RETURN (287)
ASSIGN (288) 8 11 19 23
SEMI (289) 5 14
COMMA (290) 7 17 27
PERIOD (291)
NUMBER (292) 44


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
Decl (40)
    on left: 3 4, on right: 1 2
ConstDecl (41)
    on left: 5, on right: 3
ConstDefs (42)
    on left: 6 7, on right: 5 7
ConstDef (43)
    on left: 8 11, on right: 6 7
$@1 (44)
    on left: 9, on right: 11
$@2 (45)
    on left: 10, on right: 11
ConstInitVal (46)
    on left: 12, on right: 8
ConstExp (47)
    on left: 13, on right: 12 33
VarDecl (48)
    on left: 14, on right: 4
BType (49)
    on left: 15, on right: 5 14
VarDefs (50)
    on left: 16 17, on right: 14 17
VarDef (51)
    on left: 18 19 20 23, on right: 16 17
$@3 (52)
    on left: 21, on right: 23
$@4 (53)
    on left: 22, on right: 23
ArrayInit (54)
    on left: 24 25, on right: 11 23 30
ArrayExps (55)
    on left: 26 27, on right: 25 27
ArrayExp (56)
    on left: 28 30, on right: 26 27
$@5 (57)
    on left: 29, on right: 30
ArrayDef (58)
    on left: 31 32, on right: 11 20 23 32
ArrayUnit (59)
    on left: 33, on right: 31 32
InitVal (60)
    on left: 34, on right: 19
Exp (61)
    on left: 35, on right: 28 34
AddExp (62)
    on left: 36 37 38, on right: 13 35 37 38
MulExp (63)
    on left: 39 40 41 42, on right: 36 37 38 40 41 42
UnaryExp (64)
    on left: 43, on right: 39 40 41 42
PrimaryExp (65)
    on left: 44 45, on right: 43
LVal (66)
    on left: 46, on right: 45


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2

    CompUnit   go to state 3
    Decl       go to state 4
    ConstDecl  go to state 5
    VarDecl    go to state 6
    BType      go to state 7


State 1

   15 BType: INT .

    $default  reduce using rule 15 (BType)


State 2

    5 ConstDecl: CONST . BType ConstDefs SEMI

    INT  shift, and go to state 1

    BType  go to state 8


State 3

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . Decl

    $end   shift, and go to state 9
    INT    shift, and go to state 1
    CONST  shift, and go to state 2

    Decl       go to state 10
    ConstDecl  go to state 5
    VarDecl    go to state 6
    BType      go to state 7


State 4

    1 CompUnit: Decl .

    $default  reduce using rule 1 (CompUnit)


State 5

    3 Decl: ConstDecl .

    $default  reduce using rule 3 (Decl)


State 6

    4 Decl: VarDecl .

    $default  reduce using rule 4 (Decl)


State 7

   14 VarDecl: BType . VarDefs SEMI

    IDENT  shift, and go to state 11

    VarDefs  go to state 12
    VarDef   go to state 13


State 8

    5 ConstDecl: CONST BType . ConstDefs SEMI

    IDENT  shift, and go to state 14

    ConstDefs  go to state 15
    ConstDef   go to state 16


State 9

    0 $accept: CompUnit $end .

    $default  accept


State 10

    2 CompUnit: CompUnit Decl .

    $default  reduce using rule 2 (CompUnit)


State 11

   18 VarDef: IDENT .
   19       | IDENT . ASSIGN InitVal
   20       | IDENT . ArrayDef
   23       | IDENT . ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    $default  reduce using rule 18 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20


State 12

   14 VarDecl: BType VarDefs . SEMI
   17 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 21
    COMMA  shift, and go to state 22


State 13

   16 VarDefs: VarDef .

    $default  reduce using rule 16 (VarDefs)


State 14

    8 ConstDef: IDENT . ASSIGN ConstInitVal
   11         | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 23

    ArrayDef   go to state 24
    ArrayUnit  go to state 20


State 15

    5 ConstDecl: CONST BType ConstDefs . SEMI
    7 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 25
    COMMA  shift, and go to state 26


State 16

    6 ConstDefs: ConstDef .

    $default  reduce using rule 6 (ConstDefs)


State 17

   33 ArrayUnit: LBRAC . ConstExp RBRAC

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    ConstExp    go to state 29
    AddExp      go to state 30
    MulExp      go to state 31
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 18

   19 VarDef: IDENT ASSIGN . InitVal

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    InitVal     go to state 35
    Exp         go to state 36
    AddExp      go to state 37
    MulExp      go to state 31
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 19

   20 VarDef: IDENT ArrayDef .
   23       | IDENT ArrayDef . ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY
   32 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 38

    $default  reduce using rule 20 (VarDef)

    ArrayUnit  go to state 39


State 20

   31 ArrayDef: ArrayUnit .

    $default  reduce using rule 31 (ArrayDef)


State 21

   14 VarDecl: BType VarDefs SEMI .

    $default  reduce using rule 14 (VarDecl)


State 22

   17 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 11

    VarDef  go to state 40


State 23

    8 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    ConstInitVal  go to state 41
    ConstExp      go to state 42
    AddExp        go to state 30
    MulExp        go to state 31
    UnaryExp      go to state 32
    PrimaryExp    go to state 33
    LVal          go to state 34


State 24

   11 ConstDef: IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   32 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 43

    ArrayUnit  go to state 39


State 25

    5 ConstDecl: CONST BType ConstDefs SEMI .

    $default  reduce using rule 5 (ConstDecl)


State 26

    7 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 14

    ConstDef  go to state 44


State 27

   46 LVal: IDENT .

    $default  reduce using rule 46 (LVal)


State 28

   44 PrimaryExp: NUMBER .

    $default  reduce using rule 44 (PrimaryExp)


State 29

   33 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 45


State 30

   13 ConstExp: AddExp .
   37 AddExp: AddExp . ADD MulExp
   38       | AddExp . SUB MulExp

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47

    $default  reduce using rule 13 (ConstExp)


State 31

   36 AddExp: MulExp .
   40 MulExp: MulExp . MUL UnaryExp
   41       | MulExp . DIV UnaryExp
   42       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 48
    DIV  shift, and go to state 49
    MOD  shift, and go to state 50

    $default  reduce using rule 36 (AddExp)


State 32

   39 MulExp: UnaryExp .

    $default  reduce using rule 39 (MulExp)


State 33

   43 UnaryExp: PrimaryExp .

    $default  reduce using rule 43 (UnaryExp)


State 34

   45 PrimaryExp: LVal .

    $default  reduce using rule 45 (PrimaryExp)


State 35

   19 VarDef: IDENT ASSIGN InitVal .

    $default  reduce using rule 19 (VarDef)


State 36

   34 InitVal: Exp .

    $default  reduce using rule 34 (InitVal)


State 37

   35 Exp: AddExp .
   37 AddExp: AddExp . ADD MulExp
   38       | AddExp . SUB MulExp

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47

    $default  reduce using rule 35 (Exp)


State 38

   23 VarDef: IDENT ArrayDef ASSIGN . $@3 LCURLY $@4 ArrayInit RCURLY

    $default  reduce using rule 21 ($@3)

    $@3  go to state 51


State 39

   32 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 32 (ArrayDef)


State 40

   17 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 17 (VarDefs)


State 41

    8 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 8 (ConstDef)


State 42

   12 ConstInitVal: ConstExp .

    $default  reduce using rule 12 (ConstInitVal)


State 43

   11 ConstDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 9 ($@1)

    $@1  go to state 52


State 44

    7 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 7 (ConstDefs)


State 45

   33 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 33 (ArrayUnit)


State 46

   37 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    MulExp      go to state 53
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 47

   38 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    MulExp      go to state 54
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 48

   40 MulExp: MulExp MUL . UnaryExp

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    UnaryExp    go to state 55
    PrimaryExp  go to state 33
    LVal        go to state 34


State 49

   41 MulExp: MulExp DIV . UnaryExp

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    UnaryExp    go to state 56
    PrimaryExp  go to state 33
    LVal        go to state 34


State 50

   42 MulExp: MulExp MOD . UnaryExp

    IDENT   shift, and go to state 27
    NUMBER  shift, and go to state 28

    UnaryExp    go to state 57
    PrimaryExp  go to state 33
    LVal        go to state 34


State 51

   23 VarDef: IDENT ArrayDef ASSIGN $@3 . LCURLY $@4 ArrayInit RCURLY

    LCURLY  shift, and go to state 58


State 52

   11 ConstDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 59


State 53

   37 AddExp: AddExp ADD MulExp .
   40 MulExp: MulExp . MUL UnaryExp
   41       | MulExp . DIV UnaryExp
   42       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 48
    DIV  shift, and go to state 49
    MOD  shift, and go to state 50

    $default  reduce using rule 37 (AddExp)


State 54

   38 AddExp: AddExp SUB MulExp .
   40 MulExp: MulExp . MUL UnaryExp
   41       | MulExp . DIV UnaryExp
   42       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 48
    DIV  shift, and go to state 49
    MOD  shift, and go to state 50

    $default  reduce using rule 38 (AddExp)


State 55

   40 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 40 (MulExp)


State 56

   41 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 41 (MulExp)


State 57

   42 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 42 (MulExp)


State 58

   23 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY . $@4 ArrayInit RCURLY

    $default  reduce using rule 22 ($@4)

    $@4  go to state 60


State 59

   11 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 10 ($@2)

    $@2  go to state 61


State 60

   23 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 . ArrayInit RCURLY

    IDENT   shift, and go to state 27
    LCURLY  shift, and go to state 62
    NUMBER  shift, and go to state 28

    $default  reduce using rule 24 (ArrayInit)

    ArrayInit   go to state 63
    ArrayExps   go to state 64
    ArrayExp    go to state 65
    Exp         go to state 66
    AddExp      go to state 37
    MulExp      go to state 31
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 61

   11 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    IDENT   shift, and go to state 27
    LCURLY  shift, and go to state 62
    NUMBER  shift, and go to state 28

    $default  reduce using rule 24 (ArrayInit)

    ArrayInit   go to state 67
    ArrayExps   go to state 64
    ArrayExp    go to state 65
    Exp         go to state 66
    AddExp      go to state 37
    MulExp      go to state 31
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 62

   30 ArrayExp: LCURLY . $@5 ArrayInit RCURLY

    $default  reduce using rule 29 ($@5)

    $@5  go to state 68


State 63

   23 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit . RCURLY

    RCURLY  shift, and go to state 69


State 64

   25 ArrayInit: ArrayExps .
   27 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 70

    $default  reduce using rule 25 (ArrayInit)


State 65

   26 ArrayExps: ArrayExp .

    $default  reduce using rule 26 (ArrayExps)


State 66

   28 ArrayExp: Exp .

    $default  reduce using rule 28 (ArrayExp)


State 67

   11 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 71


State 68

   30 ArrayExp: LCURLY $@5 . ArrayInit RCURLY

    IDENT   shift, and go to state 27
    LCURLY  shift, and go to state 62
    NUMBER  shift, and go to state 28

    $default  reduce using rule 24 (ArrayInit)

    ArrayInit   go to state 72
    ArrayExps   go to state 64
    ArrayExp    go to state 65
    Exp         go to state 66
    AddExp      go to state 37
    MulExp      go to state 31
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 69

   23 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY .

    $default  reduce using rule 23 (VarDef)


State 70

   27 ArrayExps: ArrayExps COMMA . ArrayExp

    IDENT   shift, and go to state 27
    LCURLY  shift, and go to state 62
    NUMBER  shift, and go to state 28

    ArrayExp    go to state 73
    Exp         go to state 66
    AddExp      go to state 37
    MulExp      go to state 31
    UnaryExp    go to state 32
    PrimaryExp  go to state 33
    LVal        go to state 34


State 71

   11 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 11 (ConstDef)


State 72

   30 ArrayExp: LCURLY $@5 ArrayInit . RCURLY

    RCURLY  shift, and go to state 74


State 73

   27 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 27 (ArrayExps)


State 74

   30 ArrayExp: LCURLY $@5 ArrayInit RCURLY .

    $default  reduce using rule 30 (ArrayExp)
