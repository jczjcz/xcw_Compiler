Terminals unused in grammar

   NOT
   PERIOD


State 105 conflicts: 1 shift/reduce
State 114 conflicts: 11 shift/reduce
State 131 conflicts: 12 shift/reduce
State 177 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompDecl
    2         | CompUnit CompDecl

    3 CompDecl: DeclOutFunc
    4         | FuncDef

    5 DeclOutFunc: ConstDecl
    6            | VarDecl

    7 Decl: ConstDecl
    8     | VarDecl

    9 ConstDecl: CONST INT ConstDefs SEMI

   10 ConstDefs: ConstDef
   11          | ConstDefs COMMA ConstDef

   12 ConstDef: IDENT ASSIGN ConstInitVal

   13 $@1: %empty

   14 $@2: %empty

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

   16 ConstInitVal: ConstExp

   17 ConstExp: AddExp

   18 VarDecl: INT VarDefs SEMI

   19 VarDefs: VarDef
   20        | VarDefs COMMA VarDef

   21 VarDef: IDENT
   22       | IDENT ASSIGN InitVal
   23       | IDENT ArrayDef

   24 $@3: %empty

   25 $@4: %empty

   26 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

   27 ArrayInit: %empty
   28          | ArrayExps

   29 ArrayExps: ArrayExp
   30          | ArrayExps COMMA ArrayExp

   31 ArrayExp: Exp

   32 $@5: %empty

   33 ArrayExp: LCURLY $@5 ArrayInit RCURLY

   34 ArrayDef: ArrayUnit
   35         | ArrayDef ArrayUnit

   36 ArrayUnit: LBRAC ConstExp RBRAC

   37 InitVal: Exp

   38 Exp: AddExp

   39 AddExp: MulExp
   40       | AddExp ADD MulExp
   41       | AddExp SUB MulExp

   42 MulExp: UnaryExp
   43       | MulExp MUL UnaryExp
   44       | MulExp DIV UnaryExp
   45       | MulExp MOD UnaryExp

   46 UnaryExp: PrimaryExp
   47         | IDENT LPAREN FuncRParams RPAREN

   48 PrimaryExp: NUMBER
   49           | LVal

   50 LVal: IDENT

   51 $@6: %empty

   52 LVal: IDENT $@6 ArrayLVals

   53 ArrayLVals: ArrayLVal
   54           | ArrayLVals ArrayLVal

   55 ArrayLVal: LBRAC Exp RBRAC

   56 $@7: %empty

   57 $@8: %empty

   58 $@9: %empty

   59 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

   60 $@10: %empty

   61 $@11: %empty

   62 $@12: %empty

   63 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

   64 FuncFParams: %empty
   65            | FuncFParam
   66            | FuncFParams COMMA FuncFParam

   67 FuncFParam: INT IDENT
   68           | INT IDENT LBRAC RBRAC ArrayParamDef

   69 ArrayParamDef: ArrayUnit
   70              | ArrayParamDef ArrayUnit
   71              | %empty

   72 $@13: %empty

   73 Block: LCURLY $@13 BlockItems RCURLY

   74 BlockItems: BlockItem
   75           | BlockItems BlockItem

   76 BlockItem: %empty
   77          | Decl
   78          | Stmt

   79 Stmt: RETURN SEMI
   80     | RETURN Exp SEMI
   81     | Exp SEMI
   82     | SEMI
   83     | Block

   84 $@14: %empty

   85 Stmt: LVal $@14 ASSIGN Exp SEMI

   86 $@15: %empty

   87 $@16: %empty

   88 Stmt: IF LPAREN Cond RPAREN $@15 Stmt $@16 IF_Else

   89 $@17: %empty

   90 Stmt: WHILE LPAREN Cond RPAREN $@17 Stmt
   91     | BREAK SEMI
   92     | CONT SEMI

   93 IF_Else: %empty
   94        | ELSE Stmt

   95 Cond: LOrExp

   96 LOrExp: LAndExp
   97       | LOrExp OR LAndExp

   98 LAndExp: EqExp
   99        | LAndExp AND EqExp

  100 EqExp: RelExp
  101      | EqExp EQ RelExp
  102      | EqExp NEQ RelExp

  103 RelExp: AddExp
  104       | RelExp LE AddExp
  105       | RelExp GE AddExp
  106       | RelExp LEQ AddExp
  107       | RelExp GEQ AddExp

  108 FuncRParams: %empty
  109            | Exp
  110            | FuncRParams COMMA Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 40
SUB (259) 41
MUL (260) 43
DIV (261) 44
MOD (262) 45
IDENT (263) 12 15 21 22 23 26 47 50 52 59 63 67 68
LPAREN (264) 47 59 63 88 90
RPAREN (265) 47 59 63 88 90
LCURLY (266) 15 26 33 73
RCURLY (267) 15 26 33 73
LBRAC (268) 36 55 68
RBRAC (269) 36 55 68
INT (270) 9 18 59 67 68
CONST (271) 9
VOID (272) 63
LE (273) 104
LEQ (274) 106
GE (275) 105
GEQ (276) 107
EQ (277) 101
NEQ (278) 102
AND (279) 99
OR (280) 97
NOT (281)
IF (282) 88
ELSE (283) 94
WHILE (284) 90
BREAK (285) 91
CONT (286) 92
RETURN (287) 79 80
ASSIGN (288) 12 15 22 26 85
SEMI (289) 9 18 79 80 81 82 85 91 92
COMMA (290) 11 20 30 66 110
PERIOD (291)
NUMBER (292) 48


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
CompDecl (40)
    on left: 3 4, on right: 1 2
DeclOutFunc (41)
    on left: 5 6, on right: 3
Decl (42)
    on left: 7 8, on right: 77
ConstDecl (43)
    on left: 9, on right: 5 7
ConstDefs (44)
    on left: 10 11, on right: 9 11
ConstDef (45)
    on left: 12 15, on right: 10 11
$@1 (46)
    on left: 13, on right: 15
$@2 (47)
    on left: 14, on right: 15
ConstInitVal (48)
    on left: 16, on right: 12
ConstExp (49)
    on left: 17, on right: 16 36
VarDecl (50)
    on left: 18, on right: 6 8
VarDefs (51)
    on left: 19 20, on right: 18 20
VarDef (52)
    on left: 21 22 23 26, on right: 19 20
$@3 (53)
    on left: 24, on right: 26
$@4 (54)
    on left: 25, on right: 26
ArrayInit (55)
    on left: 27 28, on right: 15 26 33
ArrayExps (56)
    on left: 29 30, on right: 28 30
ArrayExp (57)
    on left: 31 33, on right: 29 30
$@5 (58)
    on left: 32, on right: 33
ArrayDef (59)
    on left: 34 35, on right: 15 23 26 35
ArrayUnit (60)
    on left: 36, on right: 34 35 69 70
InitVal (61)
    on left: 37, on right: 22
Exp (62)
    on left: 38, on right: 31 37 55 80 81 85 109 110
AddExp (63)
    on left: 39 40 41, on right: 17 38 40 41 103 104 105 106 107
MulExp (64)
    on left: 42 43 44 45, on right: 39 40 41 43 44 45
UnaryExp (65)
    on left: 46 47, on right: 42 43 44 45
PrimaryExp (66)
    on left: 48 49, on right: 46
LVal (67)
    on left: 50 52, on right: 49 85
$@6 (68)
    on left: 51, on right: 52
ArrayLVals (69)
    on left: 53 54, on right: 52 54
ArrayLVal (70)
    on left: 55, on right: 53 54
FuncDef (71)
    on left: 59 63, on right: 4
$@7 (72)
    on left: 56, on right: 59
$@8 (73)
    on left: 57, on right: 59
$@9 (74)
    on left: 58, on right: 59
$@10 (75)
    on left: 60, on right: 63
$@11 (76)
    on left: 61, on right: 63
$@12 (77)
    on left: 62, on right: 63
FuncFParams (78)
    on left: 64 65 66, on right: 59 63 66
FuncFParam (79)
    on left: 67 68, on right: 65 66
ArrayParamDef (80)
    on left: 69 70 71, on right: 68 70
Block (81)
    on left: 73, on right: 59 63 83
$@13 (82)
    on left: 72, on right: 73
BlockItems (83)
    on left: 74 75, on right: 73 75
BlockItem (84)
    on left: 76 77 78, on right: 74 75
Stmt (85)
    on left: 79 80 81 82 83 85 88 90 91 92, on right: 78 88 90 94
$@14 (86)
    on left: 84, on right: 85
$@15 (87)
    on left: 86, on right: 88
$@16 (88)
    on left: 87, on right: 88
$@17 (89)
    on left: 89, on right: 90
IF_Else (90)
    on left: 93 94, on right: 88
Cond (91)
    on left: 95, on right: 88 90
LOrExp (92)
    on left: 96 97, on right: 95 97
LAndExp (93)
    on left: 98 99, on right: 96 97 99
EqExp (94)
    on left: 100 101 102, on right: 98 99 101 102
RelExp (95)
    on left: 103 104 105 106 107, on right: 100 101 102 104 105 106
    107
FuncRParams (96)
    on left: 108 109 110, on right: 47 110


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit     go to state 4
    CompDecl     go to state 5
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 1

   18 VarDecl: INT . VarDefs SEMI
   59 FuncDef: INT . IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

    IDENT  shift, and go to state 10

    VarDefs  go to state 11
    VarDef   go to state 12


State 2

    9 ConstDecl: CONST . INT ConstDefs SEMI

    INT  shift, and go to state 13


State 3

   63 FuncDef: VOID . IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    IDENT  shift, and go to state 14


State 4

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . CompDecl

    $end   shift, and go to state 15
    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompDecl     go to state 16
    DeclOutFunc  go to state 6
    ConstDecl    go to state 7
    VarDecl      go to state 8
    FuncDef      go to state 9


State 5

    1 CompUnit: CompDecl .

    $default  reduce using rule 1 (CompUnit)


State 6

    3 CompDecl: DeclOutFunc .

    $default  reduce using rule 3 (CompDecl)


State 7

    5 DeclOutFunc: ConstDecl .

    $default  reduce using rule 5 (DeclOutFunc)


State 8

    6 DeclOutFunc: VarDecl .

    $default  reduce using rule 6 (DeclOutFunc)


State 9

    4 CompDecl: FuncDef .

    $default  reduce using rule 4 (CompDecl)


State 10

   21 VarDef: IDENT .
   22       | IDENT . ASSIGN InitVal
   23       | IDENT . ArrayDef
   26       | IDENT . ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY
   59 FuncDef: INT IDENT . $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    LPAREN    reduce using rule 56 ($@7)
    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20
    $@7        go to state 21


State 11

   18 VarDecl: INT VarDefs . SEMI
   20 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 12

   19 VarDefs: VarDef .

    $default  reduce using rule 19 (VarDefs)


State 13

    9 ConstDecl: CONST INT . ConstDefs SEMI

    IDENT  shift, and go to state 24

    ConstDefs  go to state 25
    ConstDef   go to state 26


State 14

   63 FuncDef: VOID IDENT . $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block

    $default  reduce using rule 60 ($@10)

    $@10  go to state 27


State 15

    0 $accept: CompUnit $end .

    $default  accept


State 16

    2 CompUnit: CompUnit CompDecl .

    $default  reduce using rule 2 (CompUnit)


State 17

   36 ArrayUnit: LBRAC . ConstExp RBRAC

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    ConstExp    go to state 30
    AddExp      go to state 31
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 18

   22 VarDef: IDENT ASSIGN . InitVal

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    InitVal     go to state 36
    Exp         go to state 37
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 19

   23 VarDef: IDENT ArrayDef .
   26       | IDENT ArrayDef . ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY
   35 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 39

    $default  reduce using rule 23 (VarDef)

    ArrayUnit  go to state 40


State 20

   34 ArrayDef: ArrayUnit .

    $default  reduce using rule 34 (ArrayDef)


State 21

   59 FuncDef: INT IDENT $@7 . LPAREN $@8 FuncFParams RPAREN $@9 Block

    LPAREN  shift, and go to state 41


State 22

   18 VarDecl: INT VarDefs SEMI .

    $default  reduce using rule 18 (VarDecl)


State 23

   20 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 42

    VarDef  go to state 43


State 24

   12 ConstDef: IDENT . ASSIGN ConstInitVal
   15         | IDENT . ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 44

    ArrayDef   go to state 45
    ArrayUnit  go to state 20


State 25

    9 ConstDecl: CONST INT ConstDefs . SEMI
   11 ConstDefs: ConstDefs . COMMA ConstDef

    SEMI   shift, and go to state 46
    COMMA  shift, and go to state 47


State 26

   10 ConstDefs: ConstDef .

    $default  reduce using rule 10 (ConstDefs)


State 27

   63 FuncDef: VOID IDENT $@10 . LPAREN $@11 FuncFParams RPAREN $@12 Block

    LPAREN  shift, and go to state 48


State 28

   47 UnaryExp: IDENT . LPAREN FuncRParams RPAREN
   50 LVal: IDENT .
   52     | IDENT . $@6 ArrayLVals

    LPAREN  shift, and go to state 49

    LBRAC     reduce using rule 51 ($@6)
    $default  reduce using rule 50 (LVal)

    $@6  go to state 50


State 29

   48 PrimaryExp: NUMBER .

    $default  reduce using rule 48 (PrimaryExp)


State 30

   36 ArrayUnit: LBRAC ConstExp . RBRAC

    RBRAC  shift, and go to state 51


State 31

   17 ConstExp: AddExp .
   40 AddExp: AddExp . ADD MulExp
   41       | AddExp . SUB MulExp

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 17 (ConstExp)


State 32

   39 AddExp: MulExp .
   43 MulExp: MulExp . MUL UnaryExp
   44       | MulExp . DIV UnaryExp
   45       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    MOD  shift, and go to state 56

    $default  reduce using rule 39 (AddExp)


State 33

   42 MulExp: UnaryExp .

    $default  reduce using rule 42 (MulExp)


State 34

   46 UnaryExp: PrimaryExp .

    $default  reduce using rule 46 (UnaryExp)


State 35

   49 PrimaryExp: LVal .

    $default  reduce using rule 49 (PrimaryExp)


State 36

   22 VarDef: IDENT ASSIGN InitVal .

    $default  reduce using rule 22 (VarDef)


State 37

   37 InitVal: Exp .

    $default  reduce using rule 37 (InitVal)


State 38

   38 Exp: AddExp .
   40 AddExp: AddExp . ADD MulExp
   41       | AddExp . SUB MulExp

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 38 (Exp)


State 39

   26 VarDef: IDENT ArrayDef ASSIGN . $@3 LCURLY $@4 ArrayInit RCURLY

    $default  reduce using rule 24 ($@3)

    $@3  go to state 57


State 40

   35 ArrayDef: ArrayDef ArrayUnit .

    $default  reduce using rule 35 (ArrayDef)


State 41

   59 FuncDef: INT IDENT $@7 LPAREN . $@8 FuncFParams RPAREN $@9 Block

    $default  reduce using rule 57 ($@8)

    $@8  go to state 58


State 42

   21 VarDef: IDENT .
   22       | IDENT . ASSIGN InitVal
   23       | IDENT . ArrayDef
   26       | IDENT . ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 18

    $default  reduce using rule 21 (VarDef)

    ArrayDef   go to state 19
    ArrayUnit  go to state 20


State 43

   20 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 20 (VarDefs)


State 44

   12 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    ConstInitVal  go to state 59
    ConstExp      go to state 60
    AddExp        go to state 31
    MulExp        go to state 32
    UnaryExp      go to state 33
    PrimaryExp    go to state 34
    LVal          go to state 35


State 45

   15 ConstDef: IDENT ArrayDef . ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY
   35 ArrayDef: ArrayDef . ArrayUnit

    LBRAC   shift, and go to state 17
    ASSIGN  shift, and go to state 61

    ArrayUnit  go to state 40


State 46

    9 ConstDecl: CONST INT ConstDefs SEMI .

    $default  reduce using rule 9 (ConstDecl)


State 47

   11 ConstDefs: ConstDefs COMMA . ConstDef

    IDENT  shift, and go to state 24

    ConstDef  go to state 62


State 48

   63 FuncDef: VOID IDENT $@10 LPAREN . $@11 FuncFParams RPAREN $@12 Block

    $default  reduce using rule 61 ($@11)

    $@11  go to state 63


State 49

   47 UnaryExp: IDENT LPAREN . FuncRParams RPAREN

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    $default  reduce using rule 108 (FuncRParams)

    Exp          go to state 64
    AddExp       go to state 38
    MulExp       go to state 32
    UnaryExp     go to state 33
    PrimaryExp   go to state 34
    LVal         go to state 35
    FuncRParams  go to state 65


State 50

   52 LVal: IDENT $@6 . ArrayLVals

    LBRAC  shift, and go to state 66

    ArrayLVals  go to state 67
    ArrayLVal   go to state 68


State 51

   36 ArrayUnit: LBRAC ConstExp RBRAC .

    $default  reduce using rule 36 (ArrayUnit)


State 52

   40 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    MulExp      go to state 69
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 53

   41 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    MulExp      go to state 70
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 54

   43 MulExp: MulExp MUL . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 71
    PrimaryExp  go to state 34
    LVal        go to state 35


State 55

   44 MulExp: MulExp DIV . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 72
    PrimaryExp  go to state 34
    LVal        go to state 35


State 56

   45 MulExp: MulExp MOD . UnaryExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    UnaryExp    go to state 73
    PrimaryExp  go to state 34
    LVal        go to state 35


State 57

   26 VarDef: IDENT ArrayDef ASSIGN $@3 . LCURLY $@4 ArrayInit RCURLY

    LCURLY  shift, and go to state 74


State 58

   59 FuncDef: INT IDENT $@7 LPAREN $@8 . FuncFParams RPAREN $@9 Block

    INT  shift, and go to state 75

    $default  reduce using rule 64 (FuncFParams)

    FuncFParams  go to state 76
    FuncFParam   go to state 77


State 59

   12 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 12 (ConstDef)


State 60

   16 ConstInitVal: ConstExp .

    $default  reduce using rule 16 (ConstInitVal)


State 61

   15 ConstDef: IDENT ArrayDef ASSIGN . $@1 LCURLY $@2 ArrayInit RCURLY

    $default  reduce using rule 13 ($@1)

    $@1  go to state 78


State 62

   11 ConstDefs: ConstDefs COMMA ConstDef .

    $default  reduce using rule 11 (ConstDefs)


State 63

   63 FuncDef: VOID IDENT $@10 LPAREN $@11 . FuncFParams RPAREN $@12 Block

    INT  shift, and go to state 75

    $default  reduce using rule 64 (FuncFParams)

    FuncFParams  go to state 79
    FuncFParam   go to state 77


State 64

  109 FuncRParams: Exp .

    $default  reduce using rule 109 (FuncRParams)


State 65

   47 UnaryExp: IDENT LPAREN FuncRParams . RPAREN
  110 FuncRParams: FuncRParams . COMMA Exp

    RPAREN  shift, and go to state 80
    COMMA   shift, and go to state 81


State 66

   55 ArrayLVal: LBRAC . Exp RBRAC

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    Exp         go to state 82
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 67

   52 LVal: IDENT $@6 ArrayLVals .
   54 ArrayLVals: ArrayLVals . ArrayLVal

    LBRAC  shift, and go to state 66

    $default  reduce using rule 52 (LVal)

    ArrayLVal  go to state 83


State 68

   53 ArrayLVals: ArrayLVal .

    $default  reduce using rule 53 (ArrayLVals)


State 69

   40 AddExp: AddExp ADD MulExp .
   43 MulExp: MulExp . MUL UnaryExp
   44       | MulExp . DIV UnaryExp
   45       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    MOD  shift, and go to state 56

    $default  reduce using rule 40 (AddExp)


State 70

   41 AddExp: AddExp SUB MulExp .
   43 MulExp: MulExp . MUL UnaryExp
   44       | MulExp . DIV UnaryExp
   45       | MulExp . MOD UnaryExp

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    MOD  shift, and go to state 56

    $default  reduce using rule 41 (AddExp)


State 71

   43 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 43 (MulExp)


State 72

   44 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 44 (MulExp)


State 73

   45 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 45 (MulExp)


State 74

   26 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY . $@4 ArrayInit RCURLY

    $default  reduce using rule 25 ($@4)

    $@4  go to state 84


State 75

   67 FuncFParam: INT . IDENT
   68           | INT . IDENT LBRAC RBRAC ArrayParamDef

    IDENT  shift, and go to state 85


State 76

   59 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams . RPAREN $@9 Block
   66 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 86
    COMMA   shift, and go to state 87


State 77

   65 FuncFParams: FuncFParam .

    $default  reduce using rule 65 (FuncFParams)


State 78

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 . LCURLY $@2 ArrayInit RCURLY

    LCURLY  shift, and go to state 88


State 79

   63 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams . RPAREN $@12 Block
   66 FuncFParams: FuncFParams . COMMA FuncFParam

    RPAREN  shift, and go to state 89
    COMMA   shift, and go to state 87


State 80

   47 UnaryExp: IDENT LPAREN FuncRParams RPAREN .

    $default  reduce using rule 47 (UnaryExp)


State 81

  110 FuncRParams: FuncRParams COMMA . Exp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    Exp         go to state 90
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 82

   55 ArrayLVal: LBRAC Exp . RBRAC

    RBRAC  shift, and go to state 91


State 83

   54 ArrayLVals: ArrayLVals ArrayLVal .

    $default  reduce using rule 54 (ArrayLVals)


State 84

   26 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 92
    NUMBER  shift, and go to state 29

    $default  reduce using rule 27 (ArrayInit)

    ArrayInit   go to state 93
    ArrayExps   go to state 94
    ArrayExp    go to state 95
    Exp         go to state 96
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 85

   67 FuncFParam: INT IDENT .
   68           | INT IDENT . LBRAC RBRAC ArrayParamDef

    LBRAC  shift, and go to state 97

    $default  reduce using rule 67 (FuncFParam)


State 86

   59 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN . $@9 Block

    $default  reduce using rule 58 ($@9)

    $@9  go to state 98


State 87

   66 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 75

    FuncFParam  go to state 99


State 88

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY . $@2 ArrayInit RCURLY

    $default  reduce using rule 14 ($@2)

    $@2  go to state 100


State 89

   63 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN . $@12 Block

    $default  reduce using rule 62 ($@12)

    $@12  go to state 101


State 90

  110 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 110 (FuncRParams)


State 91

   55 ArrayLVal: LBRAC Exp RBRAC .

    $default  reduce using rule 55 (ArrayLVal)


State 92

   33 ArrayExp: LCURLY . $@5 ArrayInit RCURLY

    $default  reduce using rule 32 ($@5)

    $@5  go to state 102


State 93

   26 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit . RCURLY

    RCURLY  shift, and go to state 103


State 94

   28 ArrayInit: ArrayExps .
   30 ArrayExps: ArrayExps . COMMA ArrayExp

    COMMA  shift, and go to state 104

    $default  reduce using rule 28 (ArrayInit)


State 95

   29 ArrayExps: ArrayExp .

    $default  reduce using rule 29 (ArrayExps)


State 96

   31 ArrayExp: Exp .

    $default  reduce using rule 31 (ArrayExp)


State 97

   68 FuncFParam: INT IDENT LBRAC . RBRAC ArrayParamDef

    RBRAC  shift, and go to state 105


State 98

   59 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 . Block

    LCURLY  shift, and go to state 106

    Block  go to state 107


State 99

   66 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 66 (FuncFParams)


State 100

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 92
    NUMBER  shift, and go to state 29

    $default  reduce using rule 27 (ArrayInit)

    ArrayInit   go to state 108
    ArrayExps   go to state 94
    ArrayExp    go to state 95
    Exp         go to state 96
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 101

   63 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 . Block

    LCURLY  shift, and go to state 106

    Block  go to state 109


State 102

   33 ArrayExp: LCURLY $@5 . ArrayInit RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 92
    NUMBER  shift, and go to state 29

    $default  reduce using rule 27 (ArrayInit)

    ArrayInit   go to state 110
    ArrayExps   go to state 94
    ArrayExp    go to state 95
    Exp         go to state 96
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 103

   26 VarDef: IDENT ArrayDef ASSIGN $@3 LCURLY $@4 ArrayInit RCURLY .

    $default  reduce using rule 26 (VarDef)


State 104

   30 ArrayExps: ArrayExps COMMA . ArrayExp

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 92
    NUMBER  shift, and go to state 29

    ArrayExp    go to state 111
    Exp         go to state 96
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 105

   68 FuncFParam: INT IDENT LBRAC RBRAC . ArrayParamDef

    LBRAC  shift, and go to state 17

    LBRAC     [reduce using rule 71 (ArrayParamDef)]
    $default  reduce using rule 71 (ArrayParamDef)

    ArrayUnit      go to state 112
    ArrayParamDef  go to state 113


State 106

   73 Block: LCURLY . $@13 BlockItems RCURLY

    $default  reduce using rule 72 ($@13)

    $@13  go to state 114


State 107

   59 FuncDef: INT IDENT $@7 LPAREN $@8 FuncFParams RPAREN $@9 Block .

    $default  reduce using rule 59 (FuncDef)


State 108

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit . RCURLY

    RCURLY  shift, and go to state 115


State 109

   63 FuncDef: VOID IDENT $@10 LPAREN $@11 FuncFParams RPAREN $@12 Block .

    $default  reduce using rule 63 (FuncDef)


State 110

   33 ArrayExp: LCURLY $@5 ArrayInit . RCURLY

    RCURLY  shift, and go to state 116


State 111

   30 ArrayExps: ArrayExps COMMA ArrayExp .

    $default  reduce using rule 30 (ArrayExps)


State 112

   69 ArrayParamDef: ArrayUnit .

    $default  reduce using rule 69 (ArrayParamDef)


State 113

   68 FuncFParam: INT IDENT LBRAC RBRAC ArrayParamDef .
   70 ArrayParamDef: ArrayParamDef . ArrayUnit

    LBRAC  shift, and go to state 17

    $default  reduce using rule 68 (FuncFParam)

    ArrayUnit  go to state 117


State 114

   73 Block: LCURLY $@13 . BlockItems RCURLY

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 106
    INT     shift, and go to state 118
    CONST   shift, and go to state 2
    IF      shift, and go to state 119
    WHILE   shift, and go to state 120
    BREAK   shift, and go to state 121
    CONT    shift, and go to state 122
    RETURN  shift, and go to state 123
    SEMI    shift, and go to state 124
    NUMBER  shift, and go to state 29

    IDENT     [reduce using rule 76 (BlockItem)]
    LCURLY    [reduce using rule 76 (BlockItem)]
    INT       [reduce using rule 76 (BlockItem)]
    CONST     [reduce using rule 76 (BlockItem)]
    IF        [reduce using rule 76 (BlockItem)]
    WHILE     [reduce using rule 76 (BlockItem)]
    BREAK     [reduce using rule 76 (BlockItem)]
    CONT      [reduce using rule 76 (BlockItem)]
    RETURN    [reduce using rule 76 (BlockItem)]
    SEMI      [reduce using rule 76 (BlockItem)]
    NUMBER    [reduce using rule 76 (BlockItem)]
    $default  reduce using rule 76 (BlockItem)

    Decl        go to state 125
    ConstDecl   go to state 126
    VarDecl     go to state 127
    Exp         go to state 128
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 129
    Block       go to state 130
    BlockItems  go to state 131
    BlockItem   go to state 132
    Stmt        go to state 133


State 115

   15 ConstDef: IDENT ArrayDef ASSIGN $@1 LCURLY $@2 ArrayInit RCURLY .

    $default  reduce using rule 15 (ConstDef)


State 116

   33 ArrayExp: LCURLY $@5 ArrayInit RCURLY .

    $default  reduce using rule 33 (ArrayExp)


State 117

   70 ArrayParamDef: ArrayParamDef ArrayUnit .

    $default  reduce using rule 70 (ArrayParamDef)


State 118

   18 VarDecl: INT . VarDefs SEMI

    IDENT  shift, and go to state 42

    VarDefs  go to state 11
    VarDef   go to state 12


State 119

   88 Stmt: IF . LPAREN Cond RPAREN $@15 Stmt $@16 IF_Else

    LPAREN  shift, and go to state 134


State 120

   90 Stmt: WHILE . LPAREN Cond RPAREN $@17 Stmt

    LPAREN  shift, and go to state 135


State 121

   91 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 136


State 122

   92 Stmt: CONT . SEMI

    SEMI  shift, and go to state 137


State 123

   79 Stmt: RETURN . SEMI
   80     | RETURN . Exp SEMI

    IDENT   shift, and go to state 28
    SEMI    shift, and go to state 138
    NUMBER  shift, and go to state 29

    Exp         go to state 139
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 124

   82 Stmt: SEMI .

    $default  reduce using rule 82 (Stmt)


State 125

   77 BlockItem: Decl .

    $default  reduce using rule 77 (BlockItem)


State 126

    7 Decl: ConstDecl .

    $default  reduce using rule 7 (Decl)


State 127

    8 Decl: VarDecl .

    $default  reduce using rule 8 (Decl)


State 128

   81 Stmt: Exp . SEMI

    SEMI  shift, and go to state 140


State 129

   49 PrimaryExp: LVal .
   85 Stmt: LVal . $@14 ASSIGN Exp SEMI

    ASSIGN    reduce using rule 84 ($@14)
    $default  reduce using rule 49 (PrimaryExp)

    $@14  go to state 141


State 130

   83 Stmt: Block .

    $default  reduce using rule 83 (Stmt)


State 131

   73 Block: LCURLY $@13 BlockItems . RCURLY
   75 BlockItems: BlockItems . BlockItem

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 106
    RCURLY  shift, and go to state 142
    INT     shift, and go to state 118
    CONST   shift, and go to state 2
    IF      shift, and go to state 119
    WHILE   shift, and go to state 120
    BREAK   shift, and go to state 121
    CONT    shift, and go to state 122
    RETURN  shift, and go to state 123
    SEMI    shift, and go to state 124
    NUMBER  shift, and go to state 29

    IDENT   [reduce using rule 76 (BlockItem)]
    LCURLY  [reduce using rule 76 (BlockItem)]
    RCURLY  [reduce using rule 76 (BlockItem)]
    INT     [reduce using rule 76 (BlockItem)]
    CONST   [reduce using rule 76 (BlockItem)]
    IF      [reduce using rule 76 (BlockItem)]
    WHILE   [reduce using rule 76 (BlockItem)]
    BREAK   [reduce using rule 76 (BlockItem)]
    CONT    [reduce using rule 76 (BlockItem)]
    RETURN  [reduce using rule 76 (BlockItem)]
    SEMI    [reduce using rule 76 (BlockItem)]
    NUMBER  [reduce using rule 76 (BlockItem)]

    Decl        go to state 125
    ConstDecl   go to state 126
    VarDecl     go to state 127
    Exp         go to state 128
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 129
    Block       go to state 130
    BlockItem   go to state 143
    Stmt        go to state 133


State 132

   74 BlockItems: BlockItem .

    $default  reduce using rule 74 (BlockItems)


State 133

   78 BlockItem: Stmt .

    $default  reduce using rule 78 (BlockItem)


State 134

   88 Stmt: IF LPAREN . Cond RPAREN $@15 Stmt $@16 IF_Else

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 144
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    Cond        go to state 145
    LOrExp      go to state 146
    LAndExp     go to state 147
    EqExp       go to state 148
    RelExp      go to state 149


State 135

   90 Stmt: WHILE LPAREN . Cond RPAREN $@17 Stmt

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 144
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    Cond        go to state 150
    LOrExp      go to state 146
    LAndExp     go to state 147
    EqExp       go to state 148
    RelExp      go to state 149


State 136

   91 Stmt: BREAK SEMI .

    $default  reduce using rule 91 (Stmt)


State 137

   92 Stmt: CONT SEMI .

    $default  reduce using rule 92 (Stmt)


State 138

   79 Stmt: RETURN SEMI .

    $default  reduce using rule 79 (Stmt)


State 139

   80 Stmt: RETURN Exp . SEMI

    SEMI  shift, and go to state 151


State 140

   81 Stmt: Exp SEMI .

    $default  reduce using rule 81 (Stmt)


State 141

   85 Stmt: LVal $@14 . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 152


State 142

   73 Block: LCURLY $@13 BlockItems RCURLY .

    $default  reduce using rule 73 (Block)


State 143

   75 BlockItems: BlockItems BlockItem .

    $default  reduce using rule 75 (BlockItems)


State 144

   40 AddExp: AddExp . ADD MulExp
   41       | AddExp . SUB MulExp
  103 RelExp: AddExp .

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 103 (RelExp)


State 145

   88 Stmt: IF LPAREN Cond . RPAREN $@15 Stmt $@16 IF_Else

    RPAREN  shift, and go to state 153


State 146

   95 Cond: LOrExp .
   97 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 154

    $default  reduce using rule 95 (Cond)


State 147

   96 LOrExp: LAndExp .
   99 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 155

    $default  reduce using rule 96 (LOrExp)


State 148

   98 LAndExp: EqExp .
  101 EqExp: EqExp . EQ RelExp
  102      | EqExp . NEQ RelExp

    EQ   shift, and go to state 156
    NEQ  shift, and go to state 157

    $default  reduce using rule 98 (LAndExp)


State 149

  100 EqExp: RelExp .
  104 RelExp: RelExp . LE AddExp
  105       | RelExp . GE AddExp
  106       | RelExp . LEQ AddExp
  107       | RelExp . GEQ AddExp

    LE   shift, and go to state 158
    LEQ  shift, and go to state 159
    GE   shift, and go to state 160
    GEQ  shift, and go to state 161

    $default  reduce using rule 100 (EqExp)


State 150

   90 Stmt: WHILE LPAREN Cond . RPAREN $@17 Stmt

    RPAREN  shift, and go to state 162


State 151

   80 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 80 (Stmt)


State 152

   85 Stmt: LVal $@14 ASSIGN . Exp SEMI

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    Exp         go to state 163
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 153

   88 Stmt: IF LPAREN Cond RPAREN . $@15 Stmt $@16 IF_Else

    $default  reduce using rule 86 ($@15)

    $@15  go to state 164


State 154

   97 LOrExp: LOrExp OR . LAndExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 144
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    LAndExp     go to state 165
    EqExp       go to state 148
    RelExp      go to state 149


State 155

   99 LAndExp: LAndExp AND . EqExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 144
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    EqExp       go to state 166
    RelExp      go to state 149


State 156

  101 EqExp: EqExp EQ . RelExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 144
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    RelExp      go to state 167


State 157

  102 EqExp: EqExp NEQ . RelExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 144
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35
    RelExp      go to state 168


State 158

  104 RelExp: RelExp LE . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 169
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 159

  106 RelExp: RelExp LEQ . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 170
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 160

  105 RelExp: RelExp GE . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 171
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 161

  107 RelExp: RelExp GEQ . AddExp

    IDENT   shift, and go to state 28
    NUMBER  shift, and go to state 29

    AddExp      go to state 172
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 35


State 162

   90 Stmt: WHILE LPAREN Cond RPAREN . $@17 Stmt

    $default  reduce using rule 89 ($@17)

    $@17  go to state 173


State 163

   85 Stmt: LVal $@14 ASSIGN Exp . SEMI

    SEMI  shift, and go to state 174


State 164

   88 Stmt: IF LPAREN Cond RPAREN $@15 . Stmt $@16 IF_Else

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 106
    IF      shift, and go to state 119
    WHILE   shift, and go to state 120
    BREAK   shift, and go to state 121
    CONT    shift, and go to state 122
    RETURN  shift, and go to state 123
    SEMI    shift, and go to state 124
    NUMBER  shift, and go to state 29

    Exp         go to state 128
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 129
    Block       go to state 130
    Stmt        go to state 175


State 165

   97 LOrExp: LOrExp OR LAndExp .
   99 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 155

    $default  reduce using rule 97 (LOrExp)


State 166

   99 LAndExp: LAndExp AND EqExp .
  101 EqExp: EqExp . EQ RelExp
  102      | EqExp . NEQ RelExp

    EQ   shift, and go to state 156
    NEQ  shift, and go to state 157

    $default  reduce using rule 99 (LAndExp)


State 167

  101 EqExp: EqExp EQ RelExp .
  104 RelExp: RelExp . LE AddExp
  105       | RelExp . GE AddExp
  106       | RelExp . LEQ AddExp
  107       | RelExp . GEQ AddExp

    LE   shift, and go to state 158
    LEQ  shift, and go to state 159
    GE   shift, and go to state 160
    GEQ  shift, and go to state 161

    $default  reduce using rule 101 (EqExp)


State 168

  102 EqExp: EqExp NEQ RelExp .
  104 RelExp: RelExp . LE AddExp
  105       | RelExp . GE AddExp
  106       | RelExp . LEQ AddExp
  107       | RelExp . GEQ AddExp

    LE   shift, and go to state 158
    LEQ  shift, and go to state 159
    GE   shift, and go to state 160
    GEQ  shift, and go to state 161

    $default  reduce using rule 102 (EqExp)


State 169

   40 AddExp: AddExp . ADD MulExp
   41       | AddExp . SUB MulExp
  104 RelExp: RelExp LE AddExp .

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 104 (RelExp)


State 170

   40 AddExp: AddExp . ADD MulExp
   41       | AddExp . SUB MulExp
  106 RelExp: RelExp LEQ AddExp .

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 106 (RelExp)


State 171

   40 AddExp: AddExp . ADD MulExp
   41       | AddExp . SUB MulExp
  105 RelExp: RelExp GE AddExp .

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 105 (RelExp)


State 172

   40 AddExp: AddExp . ADD MulExp
   41       | AddExp . SUB MulExp
  107 RelExp: RelExp GEQ AddExp .

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 107 (RelExp)


State 173

   90 Stmt: WHILE LPAREN Cond RPAREN $@17 . Stmt

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 106
    IF      shift, and go to state 119
    WHILE   shift, and go to state 120
    BREAK   shift, and go to state 121
    CONT    shift, and go to state 122
    RETURN  shift, and go to state 123
    SEMI    shift, and go to state 124
    NUMBER  shift, and go to state 29

    Exp         go to state 128
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 129
    Block       go to state 130
    Stmt        go to state 176


State 174

   85 Stmt: LVal $@14 ASSIGN Exp SEMI .

    $default  reduce using rule 85 (Stmt)


State 175

   88 Stmt: IF LPAREN Cond RPAREN $@15 Stmt . $@16 IF_Else

    $default  reduce using rule 87 ($@16)

    $@16  go to state 177


State 176

   90 Stmt: WHILE LPAREN Cond RPAREN $@17 Stmt .

    $default  reduce using rule 90 (Stmt)


State 177

   88 Stmt: IF LPAREN Cond RPAREN $@15 Stmt $@16 . IF_Else

    ELSE  shift, and go to state 178

    ELSE      [reduce using rule 93 (IF_Else)]
    $default  reduce using rule 93 (IF_Else)

    IF_Else  go to state 179


State 178

   94 IF_Else: ELSE . Stmt

    IDENT   shift, and go to state 28
    LCURLY  shift, and go to state 106
    IF      shift, and go to state 119
    WHILE   shift, and go to state 120
    BREAK   shift, and go to state 121
    CONT    shift, and go to state 122
    RETURN  shift, and go to state 123
    SEMI    shift, and go to state 124
    NUMBER  shift, and go to state 29

    Exp         go to state 128
    AddExp      go to state 38
    MulExp      go to state 32
    UnaryExp    go to state 33
    PrimaryExp  go to state 34
    LVal        go to state 129
    Block       go to state 130
    Stmt        go to state 180


State 179

   88 Stmt: IF LPAREN Cond RPAREN $@15 Stmt $@16 IF_Else .

    $default  reduce using rule 88 (Stmt)


State 180

   94 IF_Else: ELSE Stmt .

    $default  reduce using rule 94 (IF_Else)
