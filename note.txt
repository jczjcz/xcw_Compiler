git add.
git commit -m "work_12_15_t"
git push

FuncDef:
    INT IDENT LPAREN FuncFParams RPAREN Block
    {
        out << " This is a INT Func" << endl;
        //首先检查当前域中是否出现
        if(!check_define(*ToStr($2))){
            string err = "\"" +  *ToStr($1) + "\" already defined in this scope.";
            yyerror(err);
        }
        //  开始函数定义
        IDENT_scope tmp = IDENT_scope(*ToStr($2), "0", DEEP, 0);    //不是Const
        tmp.IDENT_func_param_num = 0;      //没有参数
        Scope.push_back(tmp);
        out << "f_" << *ToStr($2) << " [" << tmp.IDENT_func_param_num << "]" << endl;


        out << "    return 0" << endl;
        out << "end " << "f_" << *ToStr($2) << endl;
        
    }
    | VOID IDENT LPAREN FuncFParams RPAREN Block
    {
        //首先检查当前域中是否出现
        if(!check_define(*ToStr($2))){
            string err = "\"" +  *ToStr($1) + "\" already defined in this scope.";
            yyerror(err);
        }
        //  开始函数定义
        IDENT_scope tmp = IDENT_scope(*ToStr($2), "0", DEEP, 0);    //不是Const
        tmp.IDENT_func_param_num = 0;      //没有参数
        Scope.push_back(tmp);
        out << "f_" << *ToStr($2) << " [" << tmp.IDENT_func_param_num << "]" << endl;

        out << "    return" << endl;
        out << "end " << "f_" << *ToStr($2) << endl;
        
    }
;


FuncFParams:
    {
        //表示没有参数的情况
    }
    | FuncFParam
    | FuncFParams COMMA FuncFParam
;

FuncFParam:
    BType IDENT
;

Block:
    LCURLY BlockItem RCURLY
;

BlockItem:
    {
        //暂时先考虑内容为空的情况
    }
;